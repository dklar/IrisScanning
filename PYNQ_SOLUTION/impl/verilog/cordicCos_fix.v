// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cordicCos_fix (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        ap_return
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] x;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] ap_return;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] arctan_V_address0;
reg    arctan_V_ce0;
wire   [5:0] arctan_V_q0;
wire   [53:0] man_V_4_fu_198_p3;
reg   [53:0] man_V_4_reg_606;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln571_fu_206_p2;
reg   [0:0] icmp_ln571_reg_611;
wire   [0:0] icmp_ln581_fu_218_p2;
reg   [0:0] icmp_ln581_reg_617;
wire  signed [11:0] sh_amt_fu_236_p3;
reg  signed [11:0] sh_amt_reg_623;
wire   [0:0] icmp_ln582_fu_244_p2;
reg   [0:0] icmp_ln582_reg_630;
wire   [7:0] trunc_ln583_fu_250_p1;
reg   [7:0] trunc_ln583_reg_636;
reg   [8:0] tmp_28_reg_642;
wire   [0:0] and_ln603_fu_344_p2;
reg   [0:0] and_ln603_reg_647;
wire    ap_CS_fsm_state3;
wire   [0:0] or_ln603_fu_350_p2;
reg   [0:0] or_ln603_reg_652;
wire   [7:0] select_ln603_4_fu_356_p3;
reg   [7:0] select_ln603_4_reg_657;
wire   [0:0] or_ln603_4_fu_369_p2;
reg   [0:0] or_ln603_4_reg_662;
wire   [7:0] select_ln603_6_fu_415_p3;
wire    ap_CS_fsm_state4;
wire   [3:0] n_fu_432_p2;
reg   [3:0] n_reg_675;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln125_fu_426_p2;
wire   [6:0] lshr_ln1333_fu_443_p2;
reg   [6:0] lshr_ln1333_reg_685;
wire   [7:0] phi_V_fu_536_p3;
wire    ap_CS_fsm_state6;
wire   [7:0] z_r_V_fu_564_p3;
wire   [7:0] z_i_V_fu_592_p3;
reg  signed [7:0] z_r_old_V_reg_97;
reg   [7:0] p_Val2_30_reg_109;
reg  signed [7:0] z_i_old_V_reg_119;
reg   [3:0] ush_reg_131;
wire   [63:0] zext_ln126_fu_438_p1;
wire   [63:0] grp_fu_142_p1;
wire   [63:0] ireg_V_fu_146_p1;
wire   [10:0] exp_tmp_V_fu_162_p4;
wire   [51:0] trunc_ln565_fu_176_p1;
wire   [52:0] tmp_fu_180_p3;
wire   [53:0] p_Result_32_fu_188_p1;
wire   [0:0] p_Result_s_fu_154_p3;
wire   [53:0] man_V_3_fu_192_p2;
wire   [62:0] trunc_ln556_fu_150_p1;
wire   [11:0] zext_ln461_fu_172_p1;
wire   [11:0] F2_fu_212_p2;
wire   [11:0] add_ln581_fu_224_p2;
wire   [11:0] sub_ln581_fu_230_p2;
wire  signed [31:0] sext_ln581_fu_264_p1;
wire   [53:0] zext_ln586_fu_277_p1;
wire   [53:0] ashr_ln586_fu_281_p2;
wire   [0:0] xor_ln571_fu_290_p2;
wire   [0:0] or_ln582_fu_300_p2;
wire   [0:0] xor_ln582_fu_304_p2;
wire   [0:0] and_ln581_fu_310_p2;
wire   [0:0] icmp_ln585_fu_267_p2;
wire   [0:0] xor_ln585_fu_321_p2;
wire   [0:0] or_ln581_fu_333_p2;
wire   [0:0] icmp_ln603_fu_272_p2;
wire   [0:0] xor_ln581_fu_338_p2;
wire   [0:0] and_ln585_2_fu_327_p2;
wire   [0:0] and_ln585_fu_315_p2;
wire   [7:0] trunc_ln586_fu_286_p1;
wire   [0:0] and_ln582_fu_295_p2;
wire   [0:0] or_ln603_3_fu_363_p2;
wire   [31:0] bitcast_ln696_fu_378_p1;
wire   [0:0] tmp_29_fu_381_p3;
wire   [7:0] trunc_ln581_fu_375_p1;
wire   [7:0] shl_ln604_fu_397_p2;
wire   [7:0] select_ln588_fu_389_p3;
wire   [7:0] select_ln603_fu_402_p3;
wire   [7:0] select_ln603_5_fu_409_p3;
wire   [6:0] zext_ln125_fu_422_p1;
wire   [7:0] zext_ln126_1_fu_449_p1;
wire  signed [7:0] mul_ln1193_fu_482_p0;
wire   [6:0] mul_ln1193_fu_482_p1;
wire   [13:0] zext_ln1118_fu_467_p1;
wire   [13:0] lhs_V_fu_474_p3;
wire   [13:0] mul_ln1193_fu_482_p2;
wire   [6:0] mul_ln703_fu_506_p0;
wire  signed [7:0] mul_ln703_fu_506_p1;
wire   [13:0] lhs_V_2_fu_498_p3;
wire   [13:0] mul_ln703_fu_506_p2;
wire   [0:0] tmp_30_fu_453_p3;
wire   [7:0] add_ln703_fu_518_p2;
wire   [7:0] sub_ln703_fu_461_p2;
wire   [13:0] ret_V_fu_488_p2;
wire   [13:0] ret_V_5_fu_524_p2;
wire   [7:0] tmp_10_fu_554_p4;
wire   [7:0] tmp_s_fu_544_p4;
wire   [13:0] ret_V_4_fu_512_p2;
wire   [13:0] ret_V_6_fu_530_p2;
wire   [7:0] tmp_12_fu_582_p4;
wire   [7:0] tmp_11_fu_572_p4;
reg   [7:0] ap_return_preg;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_return_preg = 8'd0;
end

cordicCos_fix_arckbM #(
    .DataWidth( 6 ),
    .AddressRange( 50 ),
    .AddressWidth( 6 ))
arctan_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(arctan_V_address0),
    .ce0(arctan_V_ce0),
    .q0(arctan_V_q0)
);

top_level_fpext_3lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
top_level_fpext_3lbW_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x),
    .ce(1'b1),
    .dout(grp_fu_142_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 8'd0;
    end else begin
        if (((icmp_ln125_fu_426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_return_preg <= z_r_old_V_reg_97;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_Val2_30_reg_109 <= select_ln603_6_fu_415_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Val2_30_reg_109 <= phi_V_fu_536_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ush_reg_131 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ush_reg_131 <= n_reg_675;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        z_i_old_V_reg_119 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        z_i_old_V_reg_119 <= z_i_V_fu_592_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        z_r_old_V_reg_97 <= 8'd38;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        z_r_old_V_reg_97 <= z_r_V_fu_564_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        and_ln603_reg_647 <= and_ln603_fu_344_p2;
        or_ln603_4_reg_662 <= or_ln603_4_fu_369_p2;
        or_ln603_reg_652 <= or_ln603_fu_350_p2;
        select_ln603_4_reg_657 <= select_ln603_4_fu_356_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln571_reg_611 <= icmp_ln571_fu_206_p2;
        icmp_ln581_reg_617 <= icmp_ln581_fu_218_p2;
        icmp_ln582_reg_630 <= icmp_ln582_fu_244_p2;
        man_V_4_reg_606 <= man_V_4_fu_198_p3;
        sh_amt_reg_623 <= sh_amt_fu_236_p3;
        tmp_28_reg_642 <= {{sh_amt_fu_236_p3[11:3]}};
        trunc_ln583_reg_636 <= trunc_ln583_fu_250_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_fu_426_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        lshr_ln1333_reg_685 <= lshr_ln1333_fu_443_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        n_reg_675 <= n_fu_432_p2;
    end
end

always @ (*) begin
    if ((((icmp_ln125_fu_426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln125_fu_426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln125_fu_426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_return = z_r_old_V_reg_97;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        arctan_V_ce0 = 1'b1;
    end else begin
        arctan_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln125_fu_426_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_212_p2 = (12'd1075 - zext_ln461_fu_172_p1);

assign add_ln581_fu_224_p2 = ($signed(12'd4090) + $signed(F2_fu_212_p2));

assign add_ln703_fu_518_p2 = (p_Val2_30_reg_109 + zext_ln126_1_fu_449_p1);

assign and_ln581_fu_310_p2 = (xor_ln582_fu_304_p2 & icmp_ln581_reg_617);

assign and_ln582_fu_295_p2 = (xor_ln571_fu_290_p2 & icmp_ln582_reg_630);

assign and_ln585_2_fu_327_p2 = (xor_ln585_fu_321_p2 & and_ln581_fu_310_p2);

assign and_ln585_fu_315_p2 = (icmp_ln585_fu_267_p2 & and_ln581_fu_310_p2);

assign and_ln603_fu_344_p2 = (xor_ln581_fu_338_p2 & icmp_ln603_fu_272_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign arctan_V_address0 = zext_ln126_fu_438_p1;

assign ashr_ln586_fu_281_p2 = $signed(man_V_4_reg_606) >>> zext_ln586_fu_277_p1;

assign bitcast_ln696_fu_378_p1 = x;

assign exp_tmp_V_fu_162_p4 = {{ireg_V_fu_146_p1[62:52]}};

assign icmp_ln125_fu_426_p2 = ((ush_reg_131 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_206_p2 = ((trunc_ln556_fu_150_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_218_p2 = (($signed(F2_fu_212_p2) > $signed(12'd6)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_244_p2 = ((F2_fu_212_p2 == 12'd6) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_267_p2 = ((sh_amt_reg_623 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_272_p2 = ((tmp_28_reg_642 == 9'd0) ? 1'b1 : 1'b0);

assign ireg_V_fu_146_p1 = grp_fu_142_p1;

assign lhs_V_2_fu_498_p3 = {{z_i_old_V_reg_119}, {6'd0}};

assign lhs_V_fu_474_p3 = {{z_r_old_V_reg_97}, {6'd0}};

assign lshr_ln1333_fu_443_p2 = 7'd64 >> zext_ln125_fu_422_p1;

assign man_V_3_fu_192_p2 = (54'd0 - p_Result_32_fu_188_p1);

assign man_V_4_fu_198_p3 = ((p_Result_s_fu_154_p3[0:0] === 1'b1) ? man_V_3_fu_192_p2 : p_Result_32_fu_188_p1);

assign mul_ln1193_fu_482_p0 = z_i_old_V_reg_119;

assign mul_ln1193_fu_482_p1 = zext_ln1118_fu_467_p1;

assign mul_ln1193_fu_482_p2 = ($signed(mul_ln1193_fu_482_p0) * $signed({{1'b0}, {mul_ln1193_fu_482_p1}}));

assign mul_ln703_fu_506_p0 = zext_ln1118_fu_467_p1;

assign mul_ln703_fu_506_p1 = z_r_old_V_reg_97;

assign mul_ln703_fu_506_p2 = ($signed({{1'b0}, {mul_ln703_fu_506_p0}}) * $signed(mul_ln703_fu_506_p1));

assign n_fu_432_p2 = (ush_reg_131 + 4'd1);

assign or_ln581_fu_333_p2 = (or_ln582_fu_300_p2 | icmp_ln581_reg_617);

assign or_ln582_fu_300_p2 = (icmp_ln582_reg_630 | icmp_ln571_reg_611);

assign or_ln603_3_fu_363_p2 = (and_ln585_fu_315_p2 | and_ln582_fu_295_p2);

assign or_ln603_4_fu_369_p2 = (or_ln603_fu_350_p2 | or_ln603_3_fu_363_p2);

assign or_ln603_fu_350_p2 = (and_ln603_fu_344_p2 | and_ln585_2_fu_327_p2);

assign p_Result_32_fu_188_p1 = tmp_fu_180_p3;

assign p_Result_s_fu_154_p3 = ireg_V_fu_146_p1[32'd63];

assign phi_V_fu_536_p3 = ((tmp_30_fu_453_p3[0:0] === 1'b1) ? add_ln703_fu_518_p2 : sub_ln703_fu_461_p2);

assign ret_V_4_fu_512_p2 = (lhs_V_2_fu_498_p3 + mul_ln703_fu_506_p2);

assign ret_V_5_fu_524_p2 = (mul_ln1193_fu_482_p2 + lhs_V_fu_474_p3);

assign ret_V_6_fu_530_p2 = (lhs_V_2_fu_498_p3 - mul_ln703_fu_506_p2);

assign ret_V_fu_488_p2 = (lhs_V_fu_474_p3 - mul_ln1193_fu_482_p2);

assign select_ln588_fu_389_p3 = ((tmp_29_fu_381_p3[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln603_4_fu_356_p3 = ((and_ln585_fu_315_p2[0:0] === 1'b1) ? trunc_ln586_fu_286_p1 : trunc_ln583_reg_636);

assign select_ln603_5_fu_409_p3 = ((or_ln603_reg_652[0:0] === 1'b1) ? select_ln603_fu_402_p3 : select_ln603_4_reg_657);

assign select_ln603_6_fu_415_p3 = ((or_ln603_4_reg_662[0:0] === 1'b1) ? select_ln603_5_fu_409_p3 : 8'd0);

assign select_ln603_fu_402_p3 = ((and_ln603_reg_647[0:0] === 1'b1) ? shl_ln604_fu_397_p2 : select_ln588_fu_389_p3);

assign sext_ln581_fu_264_p1 = sh_amt_reg_623;

assign sh_amt_fu_236_p3 = ((icmp_ln581_fu_218_p2[0:0] === 1'b1) ? add_ln581_fu_224_p2 : sub_ln581_fu_230_p2);

assign shl_ln604_fu_397_p2 = trunc_ln583_reg_636 << trunc_ln581_fu_375_p1;

assign sub_ln581_fu_230_p2 = (12'd6 - F2_fu_212_p2);

assign sub_ln703_fu_461_p2 = (p_Val2_30_reg_109 - zext_ln126_1_fu_449_p1);

assign tmp_10_fu_554_p4 = {{ret_V_5_fu_524_p2[13:6]}};

assign tmp_11_fu_572_p4 = {{ret_V_4_fu_512_p2[13:6]}};

assign tmp_12_fu_582_p4 = {{ret_V_6_fu_530_p2[13:6]}};

assign tmp_29_fu_381_p3 = bitcast_ln696_fu_378_p1[32'd31];

assign tmp_30_fu_453_p3 = p_Val2_30_reg_109[32'd7];

assign tmp_fu_180_p3 = {{1'd1}, {trunc_ln565_fu_176_p1}};

assign tmp_s_fu_544_p4 = {{ret_V_fu_488_p2[13:6]}};

assign trunc_ln556_fu_150_p1 = ireg_V_fu_146_p1[62:0];

assign trunc_ln565_fu_176_p1 = ireg_V_fu_146_p1[51:0];

assign trunc_ln581_fu_375_p1 = sh_amt_reg_623[7:0];

assign trunc_ln583_fu_250_p1 = man_V_4_fu_198_p3[7:0];

assign trunc_ln586_fu_286_p1 = ashr_ln586_fu_281_p2[7:0];

assign xor_ln571_fu_290_p2 = (icmp_ln571_reg_611 ^ 1'd1);

assign xor_ln581_fu_338_p2 = (or_ln581_fu_333_p2 ^ 1'd1);

assign xor_ln582_fu_304_p2 = (or_ln582_fu_300_p2 ^ 1'd1);

assign xor_ln585_fu_321_p2 = (icmp_ln585_fu_267_p2 ^ 1'd1);

assign z_i_V_fu_592_p3 = ((tmp_30_fu_453_p3[0:0] === 1'b1) ? tmp_12_fu_582_p4 : tmp_11_fu_572_p4);

assign z_r_V_fu_564_p3 = ((tmp_30_fu_453_p3[0:0] === 1'b1) ? tmp_10_fu_554_p4 : tmp_s_fu_544_p4);

assign zext_ln1118_fu_467_p1 = lshr_ln1333_reg_685;

assign zext_ln125_fu_422_p1 = ush_reg_131;

assign zext_ln126_1_fu_449_p1 = arctan_V_q0;

assign zext_ln126_fu_438_p1 = ush_reg_131;

assign zext_ln461_fu_172_p1 = exp_tmp_V_fu_162_p4;

assign zext_ln586_fu_277_p1 = $unsigned(sext_ln581_fu_264_p1);

endmodule //cordicCos_fix
