// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module method1 (
        ap_clk,
        ap_rst,
        inputStream_TDATA,
        inputStream_TKEEP,
        inputStream_TSTRB,
        inputStream_TUSER,
        inputStream_TLAST,
        inputStream_TID,
        inputStream_TDEST,
        outputStream_TDATA,
        outputStream_TKEEP,
        outputStream_TSTRB,
        outputStream_TUSER,
        outputStream_TLAST,
        outputStream_TID,
        outputStream_TDEST,
        ap_start,
        inputStream_TVALID,
        inputStream_TREADY,
        outputStream_TVALID,
        outputStream_TREADY,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_clk;
input   ap_rst;
input  [31:0] inputStream_TDATA;
input  [3:0] inputStream_TKEEP;
input  [3:0] inputStream_TSTRB;
input  [0:0] inputStream_TUSER;
input  [0:0] inputStream_TLAST;
input  [0:0] inputStream_TID;
input  [0:0] inputStream_TDEST;
output  [31:0] outputStream_TDATA;
output  [3:0] outputStream_TKEEP;
output  [3:0] outputStream_TSTRB;
output  [0:0] outputStream_TUSER;
output  [0:0] outputStream_TLAST;
output  [0:0] outputStream_TID;
output  [0:0] outputStream_TDEST;
input   ap_start;
input   inputStream_TVALID;
output   inputStream_TREADY;
output   outputStream_TVALID;
input   outputStream_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire   [7:0] imageIn_i_q0;
wire   [7:0] imageIn_t_q0;
wire   [7:0] imageOut_i_q0;
wire   [7:0] imageOut_t_q0;
wire    method1_Block_proc_U0_ap_start;
wire    method1_Block_proc_U0_ap_done;
wire    method1_Block_proc_U0_ap_continue;
wire    method1_Block_proc_U0_ap_idle;
wire    method1_Block_proc_U0_ap_ready;
wire   [9:0] method1_Block_proc_U0_img0_rows_V_out_din;
wire    method1_Block_proc_U0_img0_rows_V_out_write;
wire   [9:0] method1_Block_proc_U0_img0_cols_V_out_din;
wire    method1_Block_proc_U0_img0_cols_V_out_write;
wire   [7:0] method1_Block_proc_U0_img4_rows_V_out_din;
wire    method1_Block_proc_U0_img4_rows_V_out_write;
wire   [9:0] method1_Block_proc_U0_img4_cols_V_out_din;
wire    method1_Block_proc_U0_img4_cols_V_out_write;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_start_out;
wire    AXIvideo2Mat_U0_start_write;
wire    AXIvideo2Mat_U0_inputStream_TREADY;
wire    AXIvideo2Mat_U0_img_rows_V_read;
wire    AXIvideo2Mat_U0_img_cols_V_read;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_2_V_write;
wire   [9:0] AXIvideo2Mat_U0_img_rows_V_out_din;
wire    AXIvideo2Mat_U0_img_rows_V_out_write;
wire   [9:0] AXIvideo2Mat_U0_img_cols_V_out_din;
wire    AXIvideo2Mat_U0_img_cols_V_out_write;
wire    CvtColor_U0_ap_start;
wire    CvtColor_U0_ap_done;
wire    CvtColor_U0_ap_continue;
wire    CvtColor_U0_ap_idle;
wire    CvtColor_U0_ap_ready;
wire    CvtColor_U0_start_out;
wire    CvtColor_U0_start_write;
wire    CvtColor_U0_p_src_rows_V_read;
wire    CvtColor_U0_p_src_cols_V_read;
wire    CvtColor_U0_p_src_data_stream_0_V_read;
wire    CvtColor_U0_p_src_data_stream_1_V_read;
wire    CvtColor_U0_p_src_data_stream_2_V_read;
wire   [7:0] CvtColor_U0_p_dst_data_stream_V_din;
wire    CvtColor_U0_p_dst_data_stream_V_write;
wire    findPupil_U0_ap_start;
wire    findPupil_U0_ap_done;
wire    findPupil_U0_ap_continue;
wire    findPupil_U0_ap_idle;
wire    findPupil_U0_ap_ready;
wire    findPupil_U0_start_out;
wire    findPupil_U0_start_write;
wire    findPupil_U0_img_data_stream_V_read;
wire   [7:0] findPupil_U0_dst_img_data_stream_V_din;
wire    findPupil_U0_dst_img_data_stream_V_write;
wire   [31:0] findPupil_U0_r_out_din;
wire    findPupil_U0_r_out_write;
wire   [31:0] findPupil_U0_x_out_din;
wire    findPupil_U0_x_out_write;
wire   [31:0] findPupil_U0_y_out_din;
wire    findPupil_U0_y_out_write;
wire    find_iris_high_accur_U0_ap_start;
wire    find_iris_high_accur_U0_ap_done;
wire    find_iris_high_accur_U0_ap_continue;
wire    find_iris_high_accur_U0_ap_idle;
wire    find_iris_high_accur_U0_ap_ready;
wire    find_iris_high_accur_U0_start_out;
wire    find_iris_high_accur_U0_start_write;
wire    find_iris_high_accur_U0_img_data_stream_V_read;
wire    find_iris_high_accur_U0_x_read;
wire    find_iris_high_accur_U0_y_read;
wire   [7:0] find_iris_high_accur_U0_dst_img_data_stream_V_din;
wire    find_iris_high_accur_U0_dst_img_data_stream_V_write;
wire   [31:0] find_iris_high_accur_U0_x_out_din;
wire    find_iris_high_accur_U0_x_out_write;
wire   [31:0] find_iris_high_accur_U0_y_out_din;
wire    find_iris_high_accur_U0_y_out_write;
wire   [31:0] find_iris_high_accur_U0_ap_return;
wire    ap_channel_done_r2;
wire    r2_full_n;
wire    Mat2Array_U0_ap_start;
wire    Mat2Array_U0_ap_done;
wire    Mat2Array_U0_ap_continue;
wire    Mat2Array_U0_ap_idle;
wire    Mat2Array_U0_ap_ready;
wire    Mat2Array_U0_img_data_stream_V_read;
wire   [16:0] Mat2Array_U0_fb_address0;
wire    Mat2Array_U0_fb_ce0;
wire    Mat2Array_U0_fb_we0;
wire   [7:0] Mat2Array_U0_fb_d0;
wire    ap_channel_done_imageIn;
wire    Mat2Array_U0_fb_full_n;
wire    writeValues_U0_ap_start;
wire    writeValues_U0_ap_done;
wire    writeValues_U0_ap_continue;
wire    writeValues_U0_ap_idle;
wire    writeValues_U0_ap_ready;
wire    writeValues_U0_x_read;
wire    writeValues_U0_y_read;
wire    writeValues_U0_r1_read;
wire   [31:0] writeValues_U0_ap_return_0;
wire   [31:0] writeValues_U0_ap_return_1;
wire   [31:0] writeValues_U0_ap_return_2;
wire   [31:0] writeValues_U0_ap_return_3;
wire    ap_channel_done_val_3_channel;
wire    val_3_channel_full_n;
reg    ap_sync_reg_channel_write_val_3_channel;
wire    ap_sync_channel_write_val_3_channel;
wire    ap_channel_done_val_2_channel;
wire    val_2_channel_full_n;
reg    ap_sync_reg_channel_write_val_2_channel;
wire    ap_sync_channel_write_val_2_channel;
wire    ap_channel_done_val_1_channel;
wire    val_1_channel_full_n;
reg    ap_sync_reg_channel_write_val_1_channel;
wire    ap_sync_channel_write_val_1_channel;
wire    ap_channel_done_val_0_channel;
wire    val_0_channel_full_n;
reg    ap_sync_reg_channel_write_val_0_channel;
wire    ap_sync_channel_write_val_0_channel;
wire    core_low_U0_ap_start;
wire    core_low_U0_ap_done;
wire    core_low_U0_ap_continue;
wire    core_low_U0_ap_idle;
wire    core_low_U0_ap_ready;
wire   [16:0] core_low_U0_image_in_address0;
wire    core_low_U0_image_in_ce0;
wire   [14:0] core_low_U0_image_out_address0;
wire    core_low_U0_image_out_ce0;
wire    core_low_U0_image_out_we0;
wire   [7:0] core_low_U0_image_out_d0;
wire    ap_channel_done_imageOut;
wire    core_low_U0_image_out_full_n;
wire    Array2Mat_U0_ap_start;
wire    Array2Mat_U0_ap_done;
wire    Array2Mat_U0_ap_continue;
wire    Array2Mat_U0_ap_idle;
wire    Array2Mat_U0_ap_ready;
wire    Array2Mat_U0_start_out;
wire    Array2Mat_U0_start_write;
wire   [14:0] Array2Mat_U0_fb_address0;
wire    Array2Mat_U0_fb_ce0;
wire    Array2Mat_U0_img_rows_V_read;
wire    Array2Mat_U0_img_cols_V_read;
wire   [7:0] Array2Mat_U0_img_data_stream_V_din;
wire    Array2Mat_U0_img_data_stream_V_write;
wire   [7:0] Array2Mat_U0_img_rows_V_out_din;
wire    Array2Mat_U0_img_rows_V_out_write;
wire   [9:0] Array2Mat_U0_img_cols_V_out_din;
wire    Array2Mat_U0_img_cols_V_out_write;
wire    CvtColor_1_U0_ap_start;
wire    CvtColor_1_U0_ap_done;
wire    CvtColor_1_U0_ap_continue;
wire    CvtColor_1_U0_ap_idle;
wire    CvtColor_1_U0_ap_ready;
wire    CvtColor_1_U0_start_out;
wire    CvtColor_1_U0_start_write;
wire    CvtColor_1_U0_p_src_rows_V_read;
wire    CvtColor_1_U0_p_src_cols_V_read;
wire    CvtColor_1_U0_p_src_data_stream_V_read;
wire   [7:0] CvtColor_1_U0_p_dst_data_stream_0_V_din;
wire    CvtColor_1_U0_p_dst_data_stream_0_V_write;
wire   [7:0] CvtColor_1_U0_p_dst_data_stream_1_V_din;
wire    CvtColor_1_U0_p_dst_data_stream_1_V_write;
wire   [7:0] CvtColor_1_U0_p_dst_data_stream_2_V_din;
wire    CvtColor_1_U0_p_dst_data_stream_2_V_write;
wire    Mat2AXIvideo_U0_ap_start;
wire    Mat2AXIvideo_U0_ap_done;
wire    Mat2AXIvideo_U0_ap_continue;
wire    Mat2AXIvideo_U0_ap_idle;
wire    Mat2AXIvideo_U0_ap_ready;
wire    Mat2AXIvideo_U0_img_data_stream_0_V_read;
wire    Mat2AXIvideo_U0_img_data_stream_1_V_read;
wire    Mat2AXIvideo_U0_img_data_stream_2_V_read;
wire   [31:0] Mat2AXIvideo_U0_outputStream_TDATA;
wire    Mat2AXIvideo_U0_outputStream_TVALID;
wire   [3:0] Mat2AXIvideo_U0_outputStream_TKEEP;
wire   [3:0] Mat2AXIvideo_U0_outputStream_TSTRB;
wire   [0:0] Mat2AXIvideo_U0_outputStream_TUSER;
wire   [0:0] Mat2AXIvideo_U0_outputStream_TLAST;
wire   [0:0] Mat2AXIvideo_U0_outputStream_TID;
wire   [0:0] Mat2AXIvideo_U0_outputStream_TDEST;
wire    ap_sync_continue;
wire    imageIn_i_full_n;
wire    imageIn_t_empty_n;
wire    imageOut_i_full_n;
wire    imageOut_t_empty_n;
wire    img0_rows_V_c_full_n;
wire   [9:0] img0_rows_V_c_dout;
wire    img0_rows_V_c_empty_n;
wire    img0_cols_V_c_full_n;
wire   [9:0] img0_cols_V_c_dout;
wire    img0_cols_V_c_empty_n;
wire    img4_rows_V_c_full_n;
wire   [7:0] img4_rows_V_c_dout;
wire    img4_rows_V_c_empty_n;
wire    img4_cols_V_c_full_n;
wire   [9:0] img4_cols_V_c_dout;
wire    img4_cols_V_c_empty_n;
wire    img0_data_stream_0_s_full_n;
wire   [7:0] img0_data_stream_0_s_dout;
wire    img0_data_stream_0_s_empty_n;
wire    img0_data_stream_1_s_full_n;
wire   [7:0] img0_data_stream_1_s_dout;
wire    img0_data_stream_1_s_empty_n;
wire    img0_data_stream_2_s_full_n;
wire   [7:0] img0_data_stream_2_s_dout;
wire    img0_data_stream_2_s_empty_n;
wire    img0_rows_V_c16_full_n;
wire   [9:0] img0_rows_V_c16_dout;
wire    img0_rows_V_c16_empty_n;
wire    img0_cols_V_c17_full_n;
wire   [9:0] img0_cols_V_c17_dout;
wire    img0_cols_V_c17_empty_n;
wire    img1_data_stream_0_s_full_n;
wire   [7:0] img1_data_stream_0_s_dout;
wire    img1_data_stream_0_s_empty_n;
wire    img2_data_stream_0_s_full_n;
wire   [7:0] img2_data_stream_0_s_dout;
wire    img2_data_stream_0_s_empty_n;
wire    r1_c_full_n;
wire   [31:0] r1_c_dout;
wire    r1_c_empty_n;
wire    x_c_full_n;
wire   [31:0] x_c_dout;
wire    x_c_empty_n;
wire    y_c_full_n;
wire   [31:0] y_c_dout;
wire    y_c_empty_n;
wire    img3_data_stream_0_s_full_n;
wire   [7:0] img3_data_stream_0_s_dout;
wire    img3_data_stream_0_s_empty_n;
wire    x_c18_full_n;
wire   [31:0] x_c18_dout;
wire    x_c18_empty_n;
wire    y_c19_full_n;
wire   [31:0] y_c19_dout;
wire    y_c19_empty_n;
wire   [31:0] r2_dout;
wire    r2_empty_n;
wire   [31:0] val_0_channel_dout;
wire    val_0_channel_empty_n;
wire   [31:0] val_1_channel_dout;
wire    val_1_channel_empty_n;
wire   [31:0] val_2_channel_dout;
wire    val_2_channel_empty_n;
wire   [31:0] val_3_channel_dout;
wire    val_3_channel_empty_n;
wire    img4_data_stream_0_s_full_n;
wire   [7:0] img4_data_stream_0_s_dout;
wire    img4_data_stream_0_s_empty_n;
wire    img4_rows_V_c20_full_n;
wire   [7:0] img4_rows_V_c20_dout;
wire    img4_rows_V_c20_empty_n;
wire    img4_cols_V_c21_full_n;
wire   [9:0] img4_cols_V_c21_dout;
wire    img4_cols_V_c21_empty_n;
wire    img5_data_stream_0_s_full_n;
wire   [7:0] img5_data_stream_0_s_dout;
wire    img5_data_stream_0_s_empty_n;
wire    img5_data_stream_1_s_full_n;
wire   [7:0] img5_data_stream_1_s_dout;
wire    img5_data_stream_1_s_empty_n;
wire    img5_data_stream_2_s_full_n;
wire   [7:0] img5_data_stream_2_s_dout;
wire    img5_data_stream_2_s_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_method1_Block_proc_U0_ap_ready;
wire    ap_sync_method1_Block_proc_U0_ap_ready;
reg   [1:0] method1_Block_proc_U0_ap_ready_count;
reg    ap_sync_reg_AXIvideo2Mat_U0_ap_ready;
wire    ap_sync_AXIvideo2Mat_U0_ap_ready;
reg   [1:0] AXIvideo2Mat_U0_ap_ready_count;
wire    method1_Block_proc_U0_start_full_n;
wire    method1_Block_proc_U0_start_write;
wire   [0:0] start_for_CvtColor_U0_din;
wire    start_for_CvtColor_U0_full_n;
wire   [0:0] start_for_CvtColor_U0_dout;
wire    start_for_CvtColor_U0_empty_n;
wire   [0:0] start_for_findPupil_U0_din;
wire    start_for_findPupil_U0_full_n;
wire   [0:0] start_for_findPupil_U0_dout;
wire    start_for_findPupil_U0_empty_n;
wire   [0:0] start_for_find_iris_high_accur_U0_din;
wire    start_for_find_iris_high_accur_U0_full_n;
wire   [0:0] start_for_find_iris_high_accur_U0_dout;
wire    start_for_find_iris_high_accur_U0_empty_n;
wire   [0:0] start_for_Mat2Array_U0_din;
wire    start_for_Mat2Array_U0_full_n;
wire   [0:0] start_for_Mat2Array_U0_dout;
wire    start_for_Mat2Array_U0_empty_n;
wire    Mat2Array_U0_start_full_n;
wire    Mat2Array_U0_start_write;
wire    writeValues_U0_start_full_n;
wire    writeValues_U0_start_write;
wire    core_low_U0_start_full_n;
wire    core_low_U0_start_write;
wire   [0:0] start_for_CvtColor_1_U0_din;
wire    start_for_CvtColor_1_U0_full_n;
wire   [0:0] start_for_CvtColor_1_U0_dout;
wire    start_for_CvtColor_1_U0_empty_n;
wire   [0:0] start_for_Mat2AXIvideo_U0_din;
wire    start_for_Mat2AXIvideo_U0_full_n;
wire   [0:0] start_for_Mat2AXIvideo_U0_dout;
wire    start_for_Mat2AXIvideo_U0_empty_n;
wire    Mat2AXIvideo_U0_start_full_n;
wire    Mat2AXIvideo_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_val_3_channel = 1'b0;
#0 ap_sync_reg_channel_write_val_2_channel = 1'b0;
#0 ap_sync_reg_channel_write_val_1_channel = 1'b0;
#0 ap_sync_reg_channel_write_val_0_channel = 1'b0;
#0 ap_sync_reg_method1_Block_proc_U0_ap_ready = 1'b0;
#0 method1_Block_proc_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_AXIvideo2Mat_U0_ap_ready = 1'b0;
#0 AXIvideo2Mat_U0_ap_ready_count = 2'd0;
end

method1_imageIn #(
    .DataWidth( 8 ),
    .AddressRange( 89600 ),
    .AddressWidth( 17 ))
imageIn_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Mat2Array_U0_fb_address0),
    .i_ce0(Mat2Array_U0_fb_ce0),
    .i_we0(Mat2Array_U0_fb_we0),
    .i_d0(Mat2Array_U0_fb_d0),
    .i_q0(imageIn_i_q0),
    .t_address0(core_low_U0_image_in_address0),
    .t_ce0(core_low_U0_image_in_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(imageIn_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(imageIn_i_full_n),
    .i_write(Mat2Array_U0_ap_done),
    .t_empty_n(imageIn_t_empty_n),
    .t_read(core_low_U0_ap_ready)
);

method1_imageOut #(
    .DataWidth( 8 ),
    .AddressRange( 23040 ),
    .AddressWidth( 15 ))
imageOut_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(core_low_U0_image_out_address0),
    .i_ce0(core_low_U0_image_out_ce0),
    .i_we0(core_low_U0_image_out_we0),
    .i_d0(core_low_U0_image_out_d0),
    .i_q0(imageOut_i_q0),
    .t_address0(Array2Mat_U0_fb_address0),
    .t_ce0(Array2Mat_U0_fb_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(imageOut_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(imageOut_i_full_n),
    .i_write(core_low_U0_ap_done),
    .t_empty_n(imageOut_t_empty_n),
    .t_read(Array2Mat_U0_ap_ready)
);

method1_Block_proc method1_Block_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(method1_Block_proc_U0_ap_start),
    .ap_done(method1_Block_proc_U0_ap_done),
    .ap_continue(method1_Block_proc_U0_ap_continue),
    .ap_idle(method1_Block_proc_U0_ap_idle),
    .ap_ready(method1_Block_proc_U0_ap_ready),
    .img0_rows_V_out_din(method1_Block_proc_U0_img0_rows_V_out_din),
    .img0_rows_V_out_full_n(img0_rows_V_c_full_n),
    .img0_rows_V_out_write(method1_Block_proc_U0_img0_rows_V_out_write),
    .img0_cols_V_out_din(method1_Block_proc_U0_img0_cols_V_out_din),
    .img0_cols_V_out_full_n(img0_cols_V_c_full_n),
    .img0_cols_V_out_write(method1_Block_proc_U0_img0_cols_V_out_write),
    .img4_rows_V_out_din(method1_Block_proc_U0_img4_rows_V_out_din),
    .img4_rows_V_out_full_n(img4_rows_V_c_full_n),
    .img4_rows_V_out_write(method1_Block_proc_U0_img4_rows_V_out_write),
    .img4_cols_V_out_din(method1_Block_proc_U0_img4_cols_V_out_din),
    .img4_cols_V_out_full_n(img4_cols_V_c_full_n),
    .img4_cols_V_out_write(method1_Block_proc_U0_img4_cols_V_out_write)
);

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .start_full_n(start_for_CvtColor_U0_full_n),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .start_out(AXIvideo2Mat_U0_start_out),
    .start_write(AXIvideo2Mat_U0_start_write),
    .inputStream_TDATA(inputStream_TDATA),
    .inputStream_TVALID(inputStream_TVALID),
    .inputStream_TREADY(AXIvideo2Mat_U0_inputStream_TREADY),
    .inputStream_TKEEP(inputStream_TKEEP),
    .inputStream_TSTRB(inputStream_TSTRB),
    .inputStream_TUSER(inputStream_TUSER),
    .inputStream_TLAST(inputStream_TLAST),
    .inputStream_TID(inputStream_TID),
    .inputStream_TDEST(inputStream_TDEST),
    .img_rows_V_dout(img0_rows_V_c_dout),
    .img_rows_V_empty_n(img0_rows_V_c_empty_n),
    .img_rows_V_read(AXIvideo2Mat_U0_img_rows_V_read),
    .img_cols_V_dout(img0_cols_V_c_dout),
    .img_cols_V_empty_n(img0_cols_V_c_empty_n),
    .img_cols_V_read(AXIvideo2Mat_U0_img_cols_V_read),
    .img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(img0_data_stream_0_s_full_n),
    .img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(img0_data_stream_1_s_full_n),
    .img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .img_data_stream_2_V_full_n(img0_data_stream_2_s_full_n),
    .img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .img_rows_V_out_din(AXIvideo2Mat_U0_img_rows_V_out_din),
    .img_rows_V_out_full_n(img0_rows_V_c16_full_n),
    .img_rows_V_out_write(AXIvideo2Mat_U0_img_rows_V_out_write),
    .img_cols_V_out_din(AXIvideo2Mat_U0_img_cols_V_out_din),
    .img_cols_V_out_full_n(img0_cols_V_c17_full_n),
    .img_cols_V_out_write(AXIvideo2Mat_U0_img_cols_V_out_write)
);

CvtColor CvtColor_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(CvtColor_U0_ap_start),
    .start_full_n(start_for_findPupil_U0_full_n),
    .ap_done(CvtColor_U0_ap_done),
    .ap_continue(CvtColor_U0_ap_continue),
    .ap_idle(CvtColor_U0_ap_idle),
    .ap_ready(CvtColor_U0_ap_ready),
    .start_out(CvtColor_U0_start_out),
    .start_write(CvtColor_U0_start_write),
    .p_src_rows_V_dout(img0_rows_V_c16_dout),
    .p_src_rows_V_empty_n(img0_rows_V_c16_empty_n),
    .p_src_rows_V_read(CvtColor_U0_p_src_rows_V_read),
    .p_src_cols_V_dout(img0_cols_V_c17_dout),
    .p_src_cols_V_empty_n(img0_cols_V_c17_empty_n),
    .p_src_cols_V_read(CvtColor_U0_p_src_cols_V_read),
    .p_src_data_stream_0_V_dout(img0_data_stream_0_s_dout),
    .p_src_data_stream_0_V_empty_n(img0_data_stream_0_s_empty_n),
    .p_src_data_stream_0_V_read(CvtColor_U0_p_src_data_stream_0_V_read),
    .p_src_data_stream_1_V_dout(img0_data_stream_1_s_dout),
    .p_src_data_stream_1_V_empty_n(img0_data_stream_1_s_empty_n),
    .p_src_data_stream_1_V_read(CvtColor_U0_p_src_data_stream_1_V_read),
    .p_src_data_stream_2_V_dout(img0_data_stream_2_s_dout),
    .p_src_data_stream_2_V_empty_n(img0_data_stream_2_s_empty_n),
    .p_src_data_stream_2_V_read(CvtColor_U0_p_src_data_stream_2_V_read),
    .p_dst_data_stream_V_din(CvtColor_U0_p_dst_data_stream_V_din),
    .p_dst_data_stream_V_full_n(img1_data_stream_0_s_full_n),
    .p_dst_data_stream_V_write(CvtColor_U0_p_dst_data_stream_V_write)
);

findPupil findPupil_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(findPupil_U0_ap_start),
    .start_full_n(start_for_find_iris_high_accur_U0_full_n),
    .ap_done(findPupil_U0_ap_done),
    .ap_continue(findPupil_U0_ap_continue),
    .ap_idle(findPupil_U0_ap_idle),
    .ap_ready(findPupil_U0_ap_ready),
    .start_out(findPupil_U0_start_out),
    .start_write(findPupil_U0_start_write),
    .img_data_stream_V_dout(img1_data_stream_0_s_dout),
    .img_data_stream_V_empty_n(img1_data_stream_0_s_empty_n),
    .img_data_stream_V_read(findPupil_U0_img_data_stream_V_read),
    .dst_img_data_stream_V_din(findPupil_U0_dst_img_data_stream_V_din),
    .dst_img_data_stream_V_full_n(img2_data_stream_0_s_full_n),
    .dst_img_data_stream_V_write(findPupil_U0_dst_img_data_stream_V_write),
    .r_out_din(findPupil_U0_r_out_din),
    .r_out_full_n(r1_c_full_n),
    .r_out_write(findPupil_U0_r_out_write),
    .x_out_din(findPupil_U0_x_out_din),
    .x_out_full_n(x_c_full_n),
    .x_out_write(findPupil_U0_x_out_write),
    .y_out_din(findPupil_U0_y_out_din),
    .y_out_full_n(y_c_full_n),
    .y_out_write(findPupil_U0_y_out_write)
);

find_iris_high_accur find_iris_high_accur_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(find_iris_high_accur_U0_ap_start),
    .start_full_n(start_for_Mat2Array_U0_full_n),
    .ap_done(find_iris_high_accur_U0_ap_done),
    .ap_continue(find_iris_high_accur_U0_ap_continue),
    .ap_idle(find_iris_high_accur_U0_ap_idle),
    .ap_ready(find_iris_high_accur_U0_ap_ready),
    .start_out(find_iris_high_accur_U0_start_out),
    .start_write(find_iris_high_accur_U0_start_write),
    .img_data_stream_V_dout(img2_data_stream_0_s_dout),
    .img_data_stream_V_empty_n(img2_data_stream_0_s_empty_n),
    .img_data_stream_V_read(find_iris_high_accur_U0_img_data_stream_V_read),
    .x_dout(x_c_dout),
    .x_empty_n(x_c_empty_n),
    .x_read(find_iris_high_accur_U0_x_read),
    .y_dout(y_c_dout),
    .y_empty_n(y_c_empty_n),
    .y_read(find_iris_high_accur_U0_y_read),
    .dst_img_data_stream_V_din(find_iris_high_accur_U0_dst_img_data_stream_V_din),
    .dst_img_data_stream_V_full_n(img3_data_stream_0_s_full_n),
    .dst_img_data_stream_V_write(find_iris_high_accur_U0_dst_img_data_stream_V_write),
    .x_out_din(find_iris_high_accur_U0_x_out_din),
    .x_out_full_n(x_c18_full_n),
    .x_out_write(find_iris_high_accur_U0_x_out_write),
    .y_out_din(find_iris_high_accur_U0_y_out_din),
    .y_out_full_n(y_c19_full_n),
    .y_out_write(find_iris_high_accur_U0_y_out_write),
    .ap_return(find_iris_high_accur_U0_ap_return)
);

Mat2Array Mat2Array_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Mat2Array_U0_ap_start),
    .ap_done(Mat2Array_U0_ap_done),
    .ap_continue(Mat2Array_U0_ap_continue),
    .ap_idle(Mat2Array_U0_ap_idle),
    .ap_ready(Mat2Array_U0_ap_ready),
    .img_data_stream_V_dout(img3_data_stream_0_s_dout),
    .img_data_stream_V_empty_n(img3_data_stream_0_s_empty_n),
    .img_data_stream_V_read(Mat2Array_U0_img_data_stream_V_read),
    .fb_address0(Mat2Array_U0_fb_address0),
    .fb_ce0(Mat2Array_U0_fb_ce0),
    .fb_we0(Mat2Array_U0_fb_we0),
    .fb_d0(Mat2Array_U0_fb_d0)
);

writeValues writeValues_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(writeValues_U0_ap_start),
    .ap_done(writeValues_U0_ap_done),
    .ap_continue(writeValues_U0_ap_continue),
    .ap_idle(writeValues_U0_ap_idle),
    .ap_ready(writeValues_U0_ap_ready),
    .x_dout(x_c18_dout),
    .x_empty_n(x_c18_empty_n),
    .x_read(writeValues_U0_x_read),
    .y_dout(y_c19_dout),
    .y_empty_n(y_c19_empty_n),
    .y_read(writeValues_U0_y_read),
    .r1_dout(r1_c_dout),
    .r1_empty_n(r1_c_empty_n),
    .r1_read(writeValues_U0_r1_read),
    .r2(r2_dout),
    .ap_return_0(writeValues_U0_ap_return_0),
    .ap_return_1(writeValues_U0_ap_return_1),
    .ap_return_2(writeValues_U0_ap_return_2),
    .ap_return_3(writeValues_U0_ap_return_3)
);

core_low core_low_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(core_low_U0_ap_start),
    .ap_done(core_low_U0_ap_done),
    .ap_continue(core_low_U0_ap_continue),
    .ap_idle(core_low_U0_ap_idle),
    .ap_ready(core_low_U0_ap_ready),
    .image_in_address0(core_low_U0_image_in_address0),
    .image_in_ce0(core_low_U0_image_in_ce0),
    .image_in_q0(imageIn_t_q0),
    .image_out_address0(core_low_U0_image_out_address0),
    .image_out_ce0(core_low_U0_image_out_ce0),
    .image_out_we0(core_low_U0_image_out_we0),
    .image_out_d0(core_low_U0_image_out_d0),
    .p_read(val_0_channel_dout),
    .p_read1(val_1_channel_dout),
    .p_read2(val_2_channel_dout),
    .p_read3(val_3_channel_dout)
);

Array2Mat Array2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Array2Mat_U0_ap_start),
    .start_full_n(start_for_CvtColor_1_U0_full_n),
    .ap_done(Array2Mat_U0_ap_done),
    .ap_continue(Array2Mat_U0_ap_continue),
    .ap_idle(Array2Mat_U0_ap_idle),
    .ap_ready(Array2Mat_U0_ap_ready),
    .start_out(Array2Mat_U0_start_out),
    .start_write(Array2Mat_U0_start_write),
    .fb_address0(Array2Mat_U0_fb_address0),
    .fb_ce0(Array2Mat_U0_fb_ce0),
    .fb_q0(imageOut_t_q0),
    .img_rows_V_dout(img4_rows_V_c_dout),
    .img_rows_V_empty_n(img4_rows_V_c_empty_n),
    .img_rows_V_read(Array2Mat_U0_img_rows_V_read),
    .img_cols_V_dout(img4_cols_V_c_dout),
    .img_cols_V_empty_n(img4_cols_V_c_empty_n),
    .img_cols_V_read(Array2Mat_U0_img_cols_V_read),
    .img_data_stream_V_din(Array2Mat_U0_img_data_stream_V_din),
    .img_data_stream_V_full_n(img4_data_stream_0_s_full_n),
    .img_data_stream_V_write(Array2Mat_U0_img_data_stream_V_write),
    .img_rows_V_out_din(Array2Mat_U0_img_rows_V_out_din),
    .img_rows_V_out_full_n(img4_rows_V_c20_full_n),
    .img_rows_V_out_write(Array2Mat_U0_img_rows_V_out_write),
    .img_cols_V_out_din(Array2Mat_U0_img_cols_V_out_din),
    .img_cols_V_out_full_n(img4_cols_V_c21_full_n),
    .img_cols_V_out_write(Array2Mat_U0_img_cols_V_out_write)
);

CvtColor_1 CvtColor_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(CvtColor_1_U0_ap_start),
    .start_full_n(start_for_Mat2AXIvideo_U0_full_n),
    .ap_done(CvtColor_1_U0_ap_done),
    .ap_continue(CvtColor_1_U0_ap_continue),
    .ap_idle(CvtColor_1_U0_ap_idle),
    .ap_ready(CvtColor_1_U0_ap_ready),
    .start_out(CvtColor_1_U0_start_out),
    .start_write(CvtColor_1_U0_start_write),
    .p_src_rows_V_dout(img4_rows_V_c20_dout),
    .p_src_rows_V_empty_n(img4_rows_V_c20_empty_n),
    .p_src_rows_V_read(CvtColor_1_U0_p_src_rows_V_read),
    .p_src_cols_V_dout(img4_cols_V_c21_dout),
    .p_src_cols_V_empty_n(img4_cols_V_c21_empty_n),
    .p_src_cols_V_read(CvtColor_1_U0_p_src_cols_V_read),
    .p_src_data_stream_V_dout(img4_data_stream_0_s_dout),
    .p_src_data_stream_V_empty_n(img4_data_stream_0_s_empty_n),
    .p_src_data_stream_V_read(CvtColor_1_U0_p_src_data_stream_V_read),
    .p_dst_data_stream_0_V_din(CvtColor_1_U0_p_dst_data_stream_0_V_din),
    .p_dst_data_stream_0_V_full_n(img5_data_stream_0_s_full_n),
    .p_dst_data_stream_0_V_write(CvtColor_1_U0_p_dst_data_stream_0_V_write),
    .p_dst_data_stream_1_V_din(CvtColor_1_U0_p_dst_data_stream_1_V_din),
    .p_dst_data_stream_1_V_full_n(img5_data_stream_1_s_full_n),
    .p_dst_data_stream_1_V_write(CvtColor_1_U0_p_dst_data_stream_1_V_write),
    .p_dst_data_stream_2_V_din(CvtColor_1_U0_p_dst_data_stream_2_V_din),
    .p_dst_data_stream_2_V_full_n(img5_data_stream_2_s_full_n),
    .p_dst_data_stream_2_V_write(CvtColor_1_U0_p_dst_data_stream_2_V_write)
);

Mat2AXIvideo Mat2AXIvideo_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Mat2AXIvideo_U0_ap_start),
    .ap_done(Mat2AXIvideo_U0_ap_done),
    .ap_continue(Mat2AXIvideo_U0_ap_continue),
    .ap_idle(Mat2AXIvideo_U0_ap_idle),
    .ap_ready(Mat2AXIvideo_U0_ap_ready),
    .img_data_stream_0_V_dout(img5_data_stream_0_s_dout),
    .img_data_stream_0_V_empty_n(img5_data_stream_0_s_empty_n),
    .img_data_stream_0_V_read(Mat2AXIvideo_U0_img_data_stream_0_V_read),
    .img_data_stream_1_V_dout(img5_data_stream_1_s_dout),
    .img_data_stream_1_V_empty_n(img5_data_stream_1_s_empty_n),
    .img_data_stream_1_V_read(Mat2AXIvideo_U0_img_data_stream_1_V_read),
    .img_data_stream_2_V_dout(img5_data_stream_2_s_dout),
    .img_data_stream_2_V_empty_n(img5_data_stream_2_s_empty_n),
    .img_data_stream_2_V_read(Mat2AXIvideo_U0_img_data_stream_2_V_read),
    .outputStream_TDATA(Mat2AXIvideo_U0_outputStream_TDATA),
    .outputStream_TVALID(Mat2AXIvideo_U0_outputStream_TVALID),
    .outputStream_TREADY(outputStream_TREADY),
    .outputStream_TKEEP(Mat2AXIvideo_U0_outputStream_TKEEP),
    .outputStream_TSTRB(Mat2AXIvideo_U0_outputStream_TSTRB),
    .outputStream_TUSER(Mat2AXIvideo_U0_outputStream_TUSER),
    .outputStream_TLAST(Mat2AXIvideo_U0_outputStream_TLAST),
    .outputStream_TID(Mat2AXIvideo_U0_outputStream_TID),
    .outputStream_TDEST(Mat2AXIvideo_U0_outputStream_TDEST)
);

fifo_w10_d2_A img0_rows_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(method1_Block_proc_U0_img0_rows_V_out_din),
    .if_full_n(img0_rows_V_c_full_n),
    .if_write(method1_Block_proc_U0_img0_rows_V_out_write),
    .if_dout(img0_rows_V_c_dout),
    .if_empty_n(img0_rows_V_c_empty_n),
    .if_read(AXIvideo2Mat_U0_img_rows_V_read)
);

fifo_w10_d2_A img0_cols_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(method1_Block_proc_U0_img0_cols_V_out_din),
    .if_full_n(img0_cols_V_c_full_n),
    .if_write(method1_Block_proc_U0_img0_cols_V_out_write),
    .if_dout(img0_cols_V_c_dout),
    .if_empty_n(img0_cols_V_c_empty_n),
    .if_read(AXIvideo2Mat_U0_img_cols_V_read)
);

fifo_w8_d8_A img4_rows_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(method1_Block_proc_U0_img4_rows_V_out_din),
    .if_full_n(img4_rows_V_c_full_n),
    .if_write(method1_Block_proc_U0_img4_rows_V_out_write),
    .if_dout(img4_rows_V_c_dout),
    .if_empty_n(img4_rows_V_c_empty_n),
    .if_read(Array2Mat_U0_img_rows_V_read)
);

fifo_w10_d8_A img4_cols_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(method1_Block_proc_U0_img4_cols_V_out_din),
    .if_full_n(img4_cols_V_c_full_n),
    .if_write(method1_Block_proc_U0_img4_cols_V_out_write),
    .if_dout(img4_cols_V_c_dout),
    .if_empty_n(img4_cols_V_c_empty_n),
    .if_read(Array2Mat_U0_img_cols_V_read)
);

fifo_w8_d2_A img0_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .if_full_n(img0_data_stream_0_s_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .if_dout(img0_data_stream_0_s_dout),
    .if_empty_n(img0_data_stream_0_s_empty_n),
    .if_read(CvtColor_U0_p_src_data_stream_0_V_read)
);

fifo_w8_d2_A img0_data_stream_1_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .if_full_n(img0_data_stream_1_s_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .if_dout(img0_data_stream_1_s_dout),
    .if_empty_n(img0_data_stream_1_s_empty_n),
    .if_read(CvtColor_U0_p_src_data_stream_1_V_read)
);

fifo_w8_d2_A img0_data_stream_2_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .if_full_n(img0_data_stream_2_s_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .if_dout(img0_data_stream_2_s_dout),
    .if_empty_n(img0_data_stream_2_s_empty_n),
    .if_read(CvtColor_U0_p_src_data_stream_2_V_read)
);

fifo_w10_d2_A img0_rows_V_c16_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_rows_V_out_din),
    .if_full_n(img0_rows_V_c16_full_n),
    .if_write(AXIvideo2Mat_U0_img_rows_V_out_write),
    .if_dout(img0_rows_V_c16_dout),
    .if_empty_n(img0_rows_V_c16_empty_n),
    .if_read(CvtColor_U0_p_src_rows_V_read)
);

fifo_w10_d2_A img0_cols_V_c17_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_cols_V_out_din),
    .if_full_n(img0_cols_V_c17_full_n),
    .if_write(AXIvideo2Mat_U0_img_cols_V_out_write),
    .if_dout(img0_cols_V_c17_dout),
    .if_empty_n(img0_cols_V_c17_empty_n),
    .if_read(CvtColor_U0_p_src_cols_V_read)
);

fifo_w8_d2_A img1_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_U0_p_dst_data_stream_V_din),
    .if_full_n(img1_data_stream_0_s_full_n),
    .if_write(CvtColor_U0_p_dst_data_stream_V_write),
    .if_dout(img1_data_stream_0_s_dout),
    .if_empty_n(img1_data_stream_0_s_empty_n),
    .if_read(findPupil_U0_img_data_stream_V_read)
);

fifo_w8_d2_A img2_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(findPupil_U0_dst_img_data_stream_V_din),
    .if_full_n(img2_data_stream_0_s_full_n),
    .if_write(findPupil_U0_dst_img_data_stream_V_write),
    .if_dout(img2_data_stream_0_s_dout),
    .if_empty_n(img2_data_stream_0_s_empty_n),
    .if_read(find_iris_high_accur_U0_img_data_stream_V_read)
);

fifo_w32_d3_A r1_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(findPupil_U0_r_out_din),
    .if_full_n(r1_c_full_n),
    .if_write(findPupil_U0_r_out_write),
    .if_dout(r1_c_dout),
    .if_empty_n(r1_c_empty_n),
    .if_read(writeValues_U0_r1_read)
);

fifo_w32_d2_A x_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(findPupil_U0_x_out_din),
    .if_full_n(x_c_full_n),
    .if_write(findPupil_U0_x_out_write),
    .if_dout(x_c_dout),
    .if_empty_n(x_c_empty_n),
    .if_read(find_iris_high_accur_U0_x_read)
);

fifo_w32_d2_A y_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(findPupil_U0_y_out_din),
    .if_full_n(y_c_full_n),
    .if_write(findPupil_U0_y_out_write),
    .if_dout(y_c_dout),
    .if_empty_n(y_c_empty_n),
    .if_read(find_iris_high_accur_U0_y_read)
);

fifo_w8_d2_A img3_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(find_iris_high_accur_U0_dst_img_data_stream_V_din),
    .if_full_n(img3_data_stream_0_s_full_n),
    .if_write(find_iris_high_accur_U0_dst_img_data_stream_V_write),
    .if_dout(img3_data_stream_0_s_dout),
    .if_empty_n(img3_data_stream_0_s_empty_n),
    .if_read(Mat2Array_U0_img_data_stream_V_read)
);

fifo_w32_d2_A x_c18_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(find_iris_high_accur_U0_x_out_din),
    .if_full_n(x_c18_full_n),
    .if_write(find_iris_high_accur_U0_x_out_write),
    .if_dout(x_c18_dout),
    .if_empty_n(x_c18_empty_n),
    .if_read(writeValues_U0_x_read)
);

fifo_w32_d2_A y_c19_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(find_iris_high_accur_U0_y_out_din),
    .if_full_n(y_c19_full_n),
    .if_write(find_iris_high_accur_U0_y_out_write),
    .if_dout(y_c19_dout),
    .if_empty_n(y_c19_empty_n),
    .if_read(writeValues_U0_y_read)
);

fifo_w32_d2_A r2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(find_iris_high_accur_U0_ap_return),
    .if_full_n(r2_full_n),
    .if_write(find_iris_high_accur_U0_ap_done),
    .if_dout(r2_dout),
    .if_empty_n(r2_empty_n),
    .if_read(writeValues_U0_ap_ready)
);

fifo_w32_d2_A val_0_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writeValues_U0_ap_return_0),
    .if_full_n(val_0_channel_full_n),
    .if_write(ap_channel_done_val_0_channel),
    .if_dout(val_0_channel_dout),
    .if_empty_n(val_0_channel_empty_n),
    .if_read(core_low_U0_ap_ready)
);

fifo_w32_d2_A val_1_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writeValues_U0_ap_return_1),
    .if_full_n(val_1_channel_full_n),
    .if_write(ap_channel_done_val_1_channel),
    .if_dout(val_1_channel_dout),
    .if_empty_n(val_1_channel_empty_n),
    .if_read(core_low_U0_ap_ready)
);

fifo_w32_d2_A val_2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writeValues_U0_ap_return_2),
    .if_full_n(val_2_channel_full_n),
    .if_write(ap_channel_done_val_2_channel),
    .if_dout(val_2_channel_dout),
    .if_empty_n(val_2_channel_empty_n),
    .if_read(core_low_U0_ap_ready)
);

fifo_w32_d2_A val_3_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(writeValues_U0_ap_return_3),
    .if_full_n(val_3_channel_full_n),
    .if_write(ap_channel_done_val_3_channel),
    .if_dout(val_3_channel_dout),
    .if_empty_n(val_3_channel_empty_n),
    .if_read(core_low_U0_ap_ready)
);

fifo_w8_d2_A img4_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Array2Mat_U0_img_data_stream_V_din),
    .if_full_n(img4_data_stream_0_s_full_n),
    .if_write(Array2Mat_U0_img_data_stream_V_write),
    .if_dout(img4_data_stream_0_s_dout),
    .if_empty_n(img4_data_stream_0_s_empty_n),
    .if_read(CvtColor_1_U0_p_src_data_stream_V_read)
);

fifo_w8_d2_A img4_rows_V_c20_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Array2Mat_U0_img_rows_V_out_din),
    .if_full_n(img4_rows_V_c20_full_n),
    .if_write(Array2Mat_U0_img_rows_V_out_write),
    .if_dout(img4_rows_V_c20_dout),
    .if_empty_n(img4_rows_V_c20_empty_n),
    .if_read(CvtColor_1_U0_p_src_rows_V_read)
);

fifo_w10_d2_A img4_cols_V_c21_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Array2Mat_U0_img_cols_V_out_din),
    .if_full_n(img4_cols_V_c21_full_n),
    .if_write(Array2Mat_U0_img_cols_V_out_write),
    .if_dout(img4_cols_V_c21_dout),
    .if_empty_n(img4_cols_V_c21_empty_n),
    .if_read(CvtColor_1_U0_p_src_cols_V_read)
);

fifo_w8_d2_A img5_data_stream_0_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_1_U0_p_dst_data_stream_0_V_din),
    .if_full_n(img5_data_stream_0_s_full_n),
    .if_write(CvtColor_1_U0_p_dst_data_stream_0_V_write),
    .if_dout(img5_data_stream_0_s_dout),
    .if_empty_n(img5_data_stream_0_s_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_0_V_read)
);

fifo_w8_d2_A img5_data_stream_1_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_1_U0_p_dst_data_stream_1_V_din),
    .if_full_n(img5_data_stream_1_s_full_n),
    .if_write(CvtColor_1_U0_p_dst_data_stream_1_V_write),
    .if_dout(img5_data_stream_1_s_dout),
    .if_empty_n(img5_data_stream_1_s_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_1_V_read)
);

fifo_w8_d2_A img5_data_stream_2_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(CvtColor_1_U0_p_dst_data_stream_2_V_din),
    .if_full_n(img5_data_stream_2_s_full_n),
    .if_write(CvtColor_1_U0_p_dst_data_stream_2_V_write),
    .if_dout(img5_data_stream_2_s_dout),
    .if_empty_n(img5_data_stream_2_s_empty_n),
    .if_read(Mat2AXIvideo_U0_img_data_stream_2_V_read)
);

start_for_CvtColoudo start_for_CvtColoudo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_CvtColor_U0_din),
    .if_full_n(start_for_CvtColor_U0_full_n),
    .if_write(AXIvideo2Mat_U0_start_write),
    .if_dout(start_for_CvtColor_U0_dout),
    .if_empty_n(start_for_CvtColor_U0_empty_n),
    .if_read(CvtColor_U0_ap_ready)
);

start_for_findPupvdy start_for_findPupvdy_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_findPupil_U0_din),
    .if_full_n(start_for_findPupil_U0_full_n),
    .if_write(CvtColor_U0_start_write),
    .if_dout(start_for_findPupil_U0_dout),
    .if_empty_n(start_for_findPupil_U0_empty_n),
    .if_read(findPupil_U0_ap_ready)
);

start_for_find_irwdI start_for_find_irwdI_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_find_iris_high_accur_U0_din),
    .if_full_n(start_for_find_iris_high_accur_U0_full_n),
    .if_write(findPupil_U0_start_write),
    .if_dout(start_for_find_iris_high_accur_U0_dout),
    .if_empty_n(start_for_find_iris_high_accur_U0_empty_n),
    .if_read(find_iris_high_accur_U0_ap_ready)
);

start_for_Mat2ArrxdS start_for_Mat2ArrxdS_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Mat2Array_U0_din),
    .if_full_n(start_for_Mat2Array_U0_full_n),
    .if_write(find_iris_high_accur_U0_start_write),
    .if_dout(start_for_Mat2Array_U0_dout),
    .if_empty_n(start_for_Mat2Array_U0_empty_n),
    .if_read(Mat2Array_U0_ap_ready)
);

start_for_CvtColoyd2 start_for_CvtColoyd2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_CvtColor_1_U0_din),
    .if_full_n(start_for_CvtColor_1_U0_full_n),
    .if_write(Array2Mat_U0_start_write),
    .if_dout(start_for_CvtColor_1_U0_dout),
    .if_empty_n(start_for_CvtColor_1_U0_empty_n),
    .if_read(CvtColor_1_U0_ap_ready)
);

start_for_Mat2AXIzec start_for_Mat2AXIzec_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Mat2AXIvideo_U0_din),
    .if_full_n(start_for_Mat2AXIvideo_U0_full_n),
    .if_write(CvtColor_1_U0_start_write),
    .if_dout(start_for_Mat2AXIvideo_U0_dout),
    .if_empty_n(start_for_Mat2AXIvideo_U0_empty_n),
    .if_read(Mat2AXIvideo_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_val_0_channel <= 1'b0;
    end else begin
        if (((writeValues_U0_ap_done & writeValues_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_val_0_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_val_0_channel <= ap_sync_channel_write_val_0_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_val_1_channel <= 1'b0;
    end else begin
        if (((writeValues_U0_ap_done & writeValues_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_val_1_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_val_1_channel <= ap_sync_channel_write_val_1_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_val_2_channel <= 1'b0;
    end else begin
        if (((writeValues_U0_ap_done & writeValues_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_val_2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_val_2_channel <= ap_sync_channel_write_val_2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_val_3_channel <= 1'b0;
    end else begin
        if (((writeValues_U0_ap_done & writeValues_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_val_3_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_val_3_channel <= ap_sync_channel_write_val_3_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_method1_Block_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_method1_Block_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_method1_Block_proc_U0_ap_ready <= ap_sync_method1_Block_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == AXIvideo2Mat_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == AXIvideo2Mat_U0_ap_ready))) begin
        AXIvideo2Mat_U0_ap_ready_count <= (AXIvideo2Mat_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((method1_Block_proc_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        method1_Block_proc_U0_ap_ready_count <= (method1_Block_proc_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (method1_Block_proc_U0_ap_ready == 1'b1))) begin
        method1_Block_proc_U0_ap_ready_count <= (method1_Block_proc_U0_ap_ready_count + 2'd1);
    end
end

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = ((ap_sync_reg_AXIvideo2Mat_U0_ap_ready ^ 1'b1) & ap_start);

assign Array2Mat_U0_ap_continue = 1'b1;

assign Array2Mat_U0_ap_start = imageOut_t_empty_n;

assign CvtColor_1_U0_ap_continue = 1'b1;

assign CvtColor_1_U0_ap_start = start_for_CvtColor_1_U0_empty_n;

assign CvtColor_U0_ap_continue = 1'b1;

assign CvtColor_U0_ap_start = start_for_CvtColor_U0_empty_n;

assign Mat2AXIvideo_U0_ap_continue = ap_continue;

assign Mat2AXIvideo_U0_ap_start = start_for_Mat2AXIvideo_U0_empty_n;

assign Mat2AXIvideo_U0_start_full_n = 1'b1;

assign Mat2AXIvideo_U0_start_write = 1'b0;

assign Mat2Array_U0_ap_continue = imageIn_i_full_n;

assign Mat2Array_U0_ap_start = start_for_Mat2Array_U0_empty_n;

assign Mat2Array_U0_fb_full_n = imageIn_i_full_n;

assign Mat2Array_U0_start_full_n = 1'b1;

assign Mat2Array_U0_start_write = 1'b0;

assign ap_channel_done_imageIn = Mat2Array_U0_ap_done;

assign ap_channel_done_imageOut = core_low_U0_ap_done;

assign ap_channel_done_r2 = find_iris_high_accur_U0_ap_done;

assign ap_channel_done_val_0_channel = (writeValues_U0_ap_done & (ap_sync_reg_channel_write_val_0_channel ^ 1'b1));

assign ap_channel_done_val_1_channel = (writeValues_U0_ap_done & (ap_sync_reg_channel_write_val_1_channel ^ 1'b1));

assign ap_channel_done_val_2_channel = (writeValues_U0_ap_done & (ap_sync_reg_channel_write_val_2_channel ^ 1'b1));

assign ap_channel_done_val_3_channel = (writeValues_U0_ap_done & (ap_sync_reg_channel_write_val_3_channel ^ 1'b1));

assign ap_done = Mat2AXIvideo_U0_ap_done;

assign ap_idle = (writeValues_U0_ap_idle & method1_Block_proc_U0_ap_idle & find_iris_high_accur_U0_ap_idle & findPupil_U0_ap_idle & (val_3_channel_empty_n ^ 1'b1) & (val_2_channel_empty_n ^ 1'b1) & (val_1_channel_empty_n ^ 1'b1) & (val_0_channel_empty_n ^ 1'b1) & (r2_empty_n ^ 1'b1) & (imageOut_t_empty_n ^ 1'b1) & (imageIn_t_empty_n ^ 1'b1) & core_low_U0_ap_idle & Mat2Array_U0_ap_idle & Mat2AXIvideo_U0_ap_idle & CvtColor_U0_ap_idle & CvtColor_1_U0_ap_idle & Array2Mat_U0_ap_idle & AXIvideo2Mat_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_AXIvideo2Mat_U0_ap_ready = (ap_sync_reg_AXIvideo2Mat_U0_ap_ready | AXIvideo2Mat_U0_ap_ready);

assign ap_sync_channel_write_val_0_channel = ((val_0_channel_full_n & ap_channel_done_val_0_channel) | ap_sync_reg_channel_write_val_0_channel);

assign ap_sync_channel_write_val_1_channel = ((val_1_channel_full_n & ap_channel_done_val_1_channel) | ap_sync_reg_channel_write_val_1_channel);

assign ap_sync_channel_write_val_2_channel = ((val_2_channel_full_n & ap_channel_done_val_2_channel) | ap_sync_reg_channel_write_val_2_channel);

assign ap_sync_channel_write_val_3_channel = ((val_3_channel_full_n & ap_channel_done_val_3_channel) | ap_sync_reg_channel_write_val_3_channel);

assign ap_sync_continue = ap_continue;

assign ap_sync_done = Mat2AXIvideo_U0_ap_done;

assign ap_sync_method1_Block_proc_U0_ap_ready = (method1_Block_proc_U0_ap_ready | ap_sync_reg_method1_Block_proc_U0_ap_ready);

assign ap_sync_ready = (ap_sync_method1_Block_proc_U0_ap_ready & ap_sync_AXIvideo2Mat_U0_ap_ready);

assign core_low_U0_ap_continue = imageOut_i_full_n;

assign core_low_U0_ap_start = (val_3_channel_empty_n & val_2_channel_empty_n & val_1_channel_empty_n & val_0_channel_empty_n & imageIn_t_empty_n);

assign core_low_U0_image_out_full_n = imageOut_i_full_n;

assign core_low_U0_start_full_n = 1'b1;

assign core_low_U0_start_write = 1'b0;

assign findPupil_U0_ap_continue = 1'b1;

assign findPupil_U0_ap_start = start_for_findPupil_U0_empty_n;

assign find_iris_high_accur_U0_ap_continue = r2_full_n;

assign find_iris_high_accur_U0_ap_start = start_for_find_iris_high_accur_U0_empty_n;

assign inputStream_TREADY = AXIvideo2Mat_U0_inputStream_TREADY;

assign method1_Block_proc_U0_ap_continue = 1'b1;

assign method1_Block_proc_U0_ap_start = ((ap_sync_reg_method1_Block_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign method1_Block_proc_U0_start_full_n = 1'b1;

assign method1_Block_proc_U0_start_write = 1'b0;

assign outputStream_TDATA = Mat2AXIvideo_U0_outputStream_TDATA;

assign outputStream_TDEST = Mat2AXIvideo_U0_outputStream_TDEST;

assign outputStream_TID = Mat2AXIvideo_U0_outputStream_TID;

assign outputStream_TKEEP = Mat2AXIvideo_U0_outputStream_TKEEP;

assign outputStream_TLAST = Mat2AXIvideo_U0_outputStream_TLAST;

assign outputStream_TSTRB = Mat2AXIvideo_U0_outputStream_TSTRB;

assign outputStream_TUSER = Mat2AXIvideo_U0_outputStream_TUSER;

assign outputStream_TVALID = Mat2AXIvideo_U0_outputStream_TVALID;

assign start_for_CvtColor_1_U0_din = 1'b1;

assign start_for_CvtColor_U0_din = 1'b1;

assign start_for_Mat2AXIvideo_U0_din = 1'b1;

assign start_for_Mat2Array_U0_din = 1'b1;

assign start_for_findPupil_U0_din = 1'b1;

assign start_for_find_iris_high_accur_U0_din = 1'b1;

assign writeValues_U0_ap_continue = (ap_sync_channel_write_val_3_channel & ap_sync_channel_write_val_2_channel & ap_sync_channel_write_val_1_channel & ap_sync_channel_write_val_0_channel);

assign writeValues_U0_ap_start = r2_empty_n;

assign writeValues_U0_start_full_n = 1'b1;

assign writeValues_U0_start_write = 1'b0;

endmodule //method1
