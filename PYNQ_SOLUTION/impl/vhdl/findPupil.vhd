-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity findPupil is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    img_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_V_empty_n : IN STD_LOGIC;
    img_data_stream_V_read : OUT STD_LOGIC;
    dst_img_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_img_data_stream_V_full_n : IN STD_LOGIC;
    dst_img_data_stream_V_write : OUT STD_LOGIC;
    r_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    r_out_full_n : IN STD_LOGIC;
    r_out_write : OUT STD_LOGIC;
    x_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    x_out_full_n : IN STD_LOGIC;
    x_out_write : OUT STD_LOGIC;
    y_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    y_out_full_n : IN STD_LOGIC;
    y_out_write : OUT STD_LOGIC );
end;


architecture behav of findPupil is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv9_118 : STD_LOGIC_VECTOR (8 downto 0) := "100011000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv9_140 : STD_LOGIC_VECTOR (8 downto 0) := "101000000";
    constant ap_const_lv8_47 : STD_LOGIC_VECTOR (7 downto 0) := "01000111";
    constant ap_const_lv32_FFFFFFFC : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111100";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal img_data_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln21_reg_733 : STD_LOGIC_VECTOR (0 downto 0);
    signal dst_img_data_stream_V_blk_n : STD_LOGIC;
    signal r_out_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal x_out_blk_n : STD_LOGIC;
    signal y_out_blk_n : STD_LOGIC;
    signal startX_line_reg_160 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln53_fu_221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln53_reg_708 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln20_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_fu_231_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal y_reg_717 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln64_fu_285_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln64_reg_722 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln52_fu_293_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln52_reg_728 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal zext_ln52_reg_728_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln21_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln21_reg_733_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal x_fu_303_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal length_line_0_i_load_reg_742 : STD_LOGIC_VECTOR (31 downto 0);
    signal is_line_0_i_load_reg_748 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_reg_755 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln41_reg_762 : STD_LOGIC_VECTOR (0 downto 0);
    signal total_longest_line_fu_336_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_longest_line_reg_767 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp2_fu_348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_reg_776 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_demorgan_fu_354_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_demorgan_reg_781 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_fu_366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln41_reg_792 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln41_fu_380_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln41_reg_803 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal total_y_reg_149 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal total_x_0_i_fu_82 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln41_5_fu_600_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_dc_0_fu_86 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln41_4_fu_578_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_longest_line_0_fu_90 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln41_3_fu_556_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal start_longest_lineX_fu_94 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_x_4_fu_534_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal length_line_0_i_fu_98 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln41_1_fu_505_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_length_line_0_i_load : STD_LOGIC_VECTOR (31 downto 0);
    signal gap_count_0_i_fu_102 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_gap_count_0_i_load : STD_LOGIC_VECTOR (31 downto 0);
    signal is_line_0_i_fu_106 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_is_line_0_i_load : STD_LOGIC_VECTOR (0 downto 0);
    signal longest_line_in_row_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal longest_line_in_row_4_fu_468_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_state7 : BOOLEAN;
    signal sub_ln64_fu_245_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln64_1_fu_251_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln64_fu_261_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln64_2_fu_271_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_1_fu_237_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln64_1_fu_265_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln64_2_fu_281_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal gap_count_fu_324_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln26_fu_342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln41_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp39_fu_372_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal length_line_fu_394_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln50_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_fu_412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln46_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln46_1_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal longest_line_in_row_2_fu_454_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal longest_line_in_row_3_fu_461_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp24_fu_475_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal length_line_1_fu_399_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln26_fu_485_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln46_fu_491_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp54_fu_499_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_x_1_fu_406_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_x_fu_512_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_x_2_fu_519_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_x_3_fu_527_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln50_fu_422_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln46_2_fu_541_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp84_fu_549_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln50_1_fu_429_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln46_3_fu_563_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp99_fu_571_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln50_2_fu_436_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln46_4_fu_585_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp114_fu_593_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((y_out_full_n = ap_const_logic_0) or (x_out_full_n = ap_const_logic_0) or (r_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln20_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((icmp_ln20_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    gap_count_0_i_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                gap_count_0_i_fu_102 <= select_ln41_reg_803;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                gap_count_0_i_fu_102 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    is_line_0_i_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                is_line_0_i_fu_106 <= or_ln41_fu_480_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                is_line_0_i_fu_106 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    length_line_0_i_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                length_line_0_i_fu_98 <= select_ln41_1_fu_505_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                length_line_0_i_fu_98 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    longest_line_in_row_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                longest_line_in_row_fu_110 <= longest_line_in_row_4_fu_468_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                longest_line_in_row_fu_110 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    startX_line_reg_160_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_fu_297_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                startX_line_reg_160 <= x_fu_303_p2;
            elsif (((icmp_ln20_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                startX_line_reg_160 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    start_longest_lineX_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                start_longest_lineX_fu_94 <= total_x_4_fu_534_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                start_longest_lineX_fu_94 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    total_longest_line_0_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                total_longest_line_0_fu_90 <= select_ln41_3_fu_556_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                total_longest_line_0_fu_90 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    total_x_0_i_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                total_x_0_i_fu_82 <= select_ln41_5_fu_600_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                total_x_0_i_fu_82 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    total_y_reg_149_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                total_y_reg_149 <= y_reg_717;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                total_y_reg_149 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    y_dc_0_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                y_dc_0_fu_86 <= select_ln41_4_fu_578_p3;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                y_dc_0_fu_86 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln21_reg_733 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln41_reg_792 <= and_ln41_fu_366_p2;
                icmp_ln26_reg_755 <= icmp_ln26_fu_318_p2;
                icmp_ln41_reg_762 <= icmp_ln41_fu_330_p2;
                is_line_0_i_load_reg_748 <= ap_sig_allocacmp_is_line_0_i_load;
                length_line_0_i_load_reg_742 <= ap_sig_allocacmp_length_line_0_i_load;
                sel_tmp2_reg_776 <= sel_tmp2_fu_348_p2;
                sel_tmp8_demorgan_reg_781 <= sel_tmp8_demorgan_fu_354_p2;
                select_ln41_reg_803 <= select_ln41_fu_380_p3;
                total_longest_line_reg_767 <= total_longest_line_fu_336_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln21_reg_733 <= icmp_ln21_fu_297_p2;
                icmp_ln21_reg_733_pp0_iter1_reg <= icmp_ln21_reg_733;
                    zext_ln52_reg_728(8 downto 0) <= zext_ln52_fu_293_p1(8 downto 0);
                    zext_ln52_reg_728_pp0_iter1_reg(8 downto 0) <= zext_ln52_reg_728(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln20_fu_225_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                select_ln64_reg_722 <= select_ln64_fu_285_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                y_reg_717 <= y_fu_231_p2;
                    zext_ln53_reg_708(8 downto 0) <= zext_ln53_fu_221_p1(8 downto 0);
            end if;
        end if;
    end process;
    zext_ln53_reg_708(31 downto 9) <= "00000000000000000000000";
    zext_ln52_reg_728(31 downto 9) <= "00000000000000000000000";
    zext_ln52_reg_728_pp0_iter1_reg(31 downto 9) <= "00000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, r_out_full_n, x_out_full_n, y_out_full_n, ap_enable_reg_pp0_iter1, ap_CS_fsm_state7, ap_CS_fsm_state2, icmp_ln20_fu_225_p2, icmp_ln21_fu_297_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln20_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln21_fu_297_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln21_fu_297_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state7 => 
                if ((not(((y_out_full_n = ap_const_logic_0) or (x_out_full_n = ap_const_logic_0) or (r_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    and_ln41_fu_366_p2 <= (xor_ln41_fu_360_p2 and sel_tmp2_fu_348_p2);
    and_ln46_1_fu_449_p2 <= (sel_tmp2_reg_776 and and_ln46_fu_444_p2);
    and_ln46_fu_444_p2 <= (icmp_ln46_fu_412_p2 and icmp_ln41_reg_762);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(img_data_stream_V_empty_n, dst_img_data_stream_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln21_reg_733)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln21_reg_733 = ap_const_lv1_0) and (dst_img_data_stream_V_full_n = ap_const_logic_0)) or ((icmp_ln21_reg_733 = ap_const_lv1_0) and (img_data_stream_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(img_data_stream_V_empty_n, dst_img_data_stream_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln21_reg_733)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln21_reg_733 = ap_const_lv1_0) and (dst_img_data_stream_V_full_n = ap_const_logic_0)) or ((icmp_ln21_reg_733 = ap_const_lv1_0) and (img_data_stream_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(img_data_stream_V_empty_n, dst_img_data_stream_V_full_n, ap_enable_reg_pp0_iter1, icmp_ln21_reg_733)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln21_reg_733 = ap_const_lv1_0) and (dst_img_data_stream_V_full_n = ap_const_logic_0)) or ((icmp_ln21_reg_733 = ap_const_lv1_0) and (img_data_stream_V_empty_n = ap_const_logic_0))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter1_assign_proc : process(img_data_stream_V_empty_n, dst_img_data_stream_V_full_n, icmp_ln21_reg_733)
    begin
                ap_block_state4_pp0_stage0_iter1 <= (((icmp_ln21_reg_733 = ap_const_lv1_0) and (dst_img_data_stream_V_full_n = ap_const_logic_0)) or ((icmp_ln21_reg_733 = ap_const_lv1_0) and (img_data_stream_V_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state5_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_assign_proc : process(r_out_full_n, x_out_full_n, y_out_full_n)
    begin
                ap_block_state7 <= ((y_out_full_n = ap_const_logic_0) or (x_out_full_n = ap_const_logic_0) or (r_out_full_n = ap_const_logic_0));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln21_fu_297_p2)
    begin
        if ((icmp_ln21_fu_297_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, r_out_full_n, x_out_full_n, y_out_full_n, ap_CS_fsm_state7)
    begin
        if ((not(((y_out_full_n = ap_const_logic_0) or (x_out_full_n = ap_const_logic_0) or (r_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    ap_sig_allocacmp_gap_count_0_i_load_assign_proc : process(ap_block_pp0_stage0, icmp_ln21_reg_733_pp0_iter1_reg, select_ln41_reg_803, ap_enable_reg_pp0_iter2, gap_count_0_i_fu_102)
    begin
        if (((icmp_ln21_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_gap_count_0_i_load <= select_ln41_reg_803;
        else 
            ap_sig_allocacmp_gap_count_0_i_load <= gap_count_0_i_fu_102;
        end if; 
    end process;


    ap_sig_allocacmp_is_line_0_i_load_assign_proc : process(ap_block_pp0_stage0, icmp_ln21_reg_733_pp0_iter1_reg, ap_enable_reg_pp0_iter2, is_line_0_i_fu_106, or_ln41_fu_480_p2)
    begin
        if (((icmp_ln21_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_is_line_0_i_load <= or_ln41_fu_480_p2;
        else 
            ap_sig_allocacmp_is_line_0_i_load <= is_line_0_i_fu_106;
        end if; 
    end process;


    ap_sig_allocacmp_length_line_0_i_load_assign_proc : process(ap_block_pp0_stage0, icmp_ln21_reg_733_pp0_iter1_reg, ap_enable_reg_pp0_iter2, length_line_0_i_fu_98, select_ln41_1_fu_505_p3)
    begin
        if (((icmp_ln21_reg_733_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_length_line_0_i_load <= select_ln41_1_fu_505_p3;
        else 
            ap_sig_allocacmp_length_line_0_i_load <= length_line_0_i_fu_98;
        end if; 
    end process;


    dst_img_data_stream_V_blk_n_assign_proc : process(dst_img_data_stream_V_full_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln21_reg_733)
    begin
        if (((icmp_ln21_reg_733 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dst_img_data_stream_V_blk_n <= dst_img_data_stream_V_full_n;
        else 
            dst_img_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_img_data_stream_V_din <= img_data_stream_V_dout;

    dst_img_data_stream_V_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln21_reg_733, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln21_reg_733 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dst_img_data_stream_V_write <= ap_const_logic_1;
        else 
            dst_img_data_stream_V_write <= ap_const_logic_0;
        end if; 
    end process;

    gap_count_fu_324_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_gap_count_0_i_load) + unsigned(ap_const_lv32_1));
    icmp_ln20_fu_225_p2 <= "1" when (total_y_reg_149 = ap_const_lv9_118) else "0";
    icmp_ln21_fu_297_p2 <= "1" when (startX_line_reg_160 = ap_const_lv9_140) else "0";
    icmp_ln26_fu_318_p2 <= "1" when (unsigned(img_data_stream_V_dout) < unsigned(ap_const_lv8_47)) else "0";
    icmp_ln41_fu_330_p2 <= "1" when (signed(gap_count_fu_324_p2) > signed(ap_const_lv32_4)) else "0";
    icmp_ln46_fu_412_p2 <= "1" when (signed(total_longest_line_reg_767) > signed(longest_line_in_row_fu_110)) else "0";
    icmp_ln50_fu_417_p2 <= "1" when (signed(total_longest_line_reg_767) > signed(total_longest_line_0_fu_90)) else "0";

    img_data_stream_V_blk_n_assign_proc : process(img_data_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln21_reg_733)
    begin
        if (((icmp_ln21_reg_733 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            img_data_stream_V_blk_n <= img_data_stream_V_empty_n;
        else 
            img_data_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_data_stream_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln21_reg_733, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln21_reg_733 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            img_data_stream_V_read <= ap_const_logic_1;
        else 
            img_data_stream_V_read <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(r_out_full_n, x_out_full_n, y_out_full_n, ap_CS_fsm_state7)
    begin
        if ((not(((y_out_full_n = ap_const_logic_0) or (x_out_full_n = ap_const_logic_0) or (r_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    length_line_1_fu_399_p3 <= 
        length_line_fu_394_p2 when (is_line_0_i_load_reg_748(0) = '1') else 
        ap_const_lv32_1;
    length_line_fu_394_p2 <= std_logic_vector(unsigned(length_line_0_i_load_reg_742) + unsigned(ap_const_lv32_1));
    longest_line_in_row_2_fu_454_p3 <= 
        total_longest_line_reg_767 when (and_ln46_1_fu_449_p2(0) = '1') else 
        longest_line_in_row_fu_110;
    longest_line_in_row_3_fu_461_p3 <= 
        longest_line_in_row_2_fu_454_p3 when (sel_tmp8_demorgan_reg_781(0) = '1') else 
        longest_line_in_row_fu_110;
    longest_line_in_row_4_fu_468_p3 <= 
        longest_line_in_row_fu_110 when (and_ln41_reg_792(0) = '1') else 
        longest_line_in_row_3_fu_461_p3;
    lshr_ln64_1_fu_251_p4 <= sub_ln64_fu_245_p2(31 downto 1);
    lshr_ln64_2_fu_271_p4 <= total_longest_line_0_fu_90(31 downto 1);
    or_ln41_fu_480_p2 <= (sel_tmp24_fu_475_p3 or and_ln41_reg_792);

    r_out_blk_n_assign_proc : process(r_out_full_n, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            r_out_blk_n <= r_out_full_n;
        else 
            r_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    r_out_din <= select_ln64_reg_722;

    r_out_write_assign_proc : process(r_out_full_n, x_out_full_n, y_out_full_n, ap_CS_fsm_state7)
    begin
        if ((not(((y_out_full_n = ap_const_logic_0) or (x_out_full_n = ap_const_logic_0) or (r_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            r_out_write <= ap_const_logic_1;
        else 
            r_out_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    sel_tmp114_fu_593_p3 <= 
        select_ln46_4_fu_585_p3 when (sel_tmp8_demorgan_reg_781(0) = '1') else 
        total_x_0_i_fu_82;
    sel_tmp24_fu_475_p3 <= 
        icmp_ln26_reg_755 when (sel_tmp8_demorgan_reg_781(0) = '1') else 
        is_line_0_i_load_reg_748;
    sel_tmp2_fu_348_p2 <= (xor_ln26_fu_342_p2 and ap_sig_allocacmp_is_line_0_i_load);
    sel_tmp39_fu_372_p3 <= 
        ap_const_lv32_0 when (sel_tmp8_demorgan_fu_354_p2(0) = '1') else 
        ap_sig_allocacmp_gap_count_0_i_load;
    sel_tmp54_fu_499_p3 <= 
        select_ln46_fu_491_p3 when (sel_tmp8_demorgan_reg_781(0) = '1') else 
        length_line_0_i_load_reg_742;
    sel_tmp84_fu_549_p3 <= 
        select_ln46_2_fu_541_p3 when (sel_tmp8_demorgan_reg_781(0) = '1') else 
        total_longest_line_0_fu_90;
    sel_tmp8_demorgan_fu_354_p2 <= (icmp_ln26_fu_318_p2 or ap_sig_allocacmp_is_line_0_i_load);
    sel_tmp99_fu_571_p3 <= 
        select_ln46_3_fu_563_p3 when (sel_tmp8_demorgan_reg_781(0) = '1') else 
        y_dc_0_fu_86;
    select_ln26_fu_485_p3 <= 
        length_line_1_fu_399_p3 when (icmp_ln26_reg_755(0) = '1') else 
        total_longest_line_reg_767;
    select_ln41_1_fu_505_p3 <= 
        length_line_fu_394_p2 when (and_ln41_reg_792(0) = '1') else 
        sel_tmp54_fu_499_p3;
    select_ln41_3_fu_556_p3 <= 
        total_longest_line_0_fu_90 when (and_ln41_reg_792(0) = '1') else 
        sel_tmp84_fu_549_p3;
    select_ln41_4_fu_578_p3 <= 
        y_dc_0_fu_86 when (and_ln41_reg_792(0) = '1') else 
        sel_tmp99_fu_571_p3;
    select_ln41_5_fu_600_p3 <= 
        total_x_0_i_fu_82 when (and_ln41_reg_792(0) = '1') else 
        sel_tmp114_fu_593_p3;
    select_ln41_fu_380_p3 <= 
        gap_count_fu_324_p2 when (and_ln41_fu_366_p2(0) = '1') else 
        sel_tmp39_fu_372_p3;
    select_ln46_2_fu_541_p3 <= 
        select_ln50_fu_422_p3 when (and_ln46_1_fu_449_p2(0) = '1') else 
        total_longest_line_0_fu_90;
    select_ln46_3_fu_563_p3 <= 
        select_ln50_1_fu_429_p3 when (and_ln46_1_fu_449_p2(0) = '1') else 
        y_dc_0_fu_86;
    select_ln46_4_fu_585_p3 <= 
        select_ln50_2_fu_436_p3 when (and_ln46_1_fu_449_p2(0) = '1') else 
        total_x_0_i_fu_82;
    select_ln46_fu_491_p3 <= 
        ap_const_lv32_0 when (and_ln46_1_fu_449_p2(0) = '1') else 
        select_ln26_fu_485_p3;
    select_ln50_1_fu_429_p3 <= 
        zext_ln53_reg_708 when (icmp_ln50_fu_417_p2(0) = '1') else 
        y_dc_0_fu_86;
    select_ln50_2_fu_436_p3 <= 
        start_longest_lineX_fu_94 when (icmp_ln50_fu_417_p2(0) = '1') else 
        total_x_0_i_fu_82;
    select_ln50_fu_422_p3 <= 
        total_longest_line_reg_767 when (icmp_ln50_fu_417_p2(0) = '1') else 
        total_longest_line_0_fu_90;
    select_ln64_fu_285_p3 <= 
        sub_ln64_1_fu_265_p2 when (tmp_1_fu_237_p3(0) = '1') else 
        zext_ln64_2_fu_281_p1;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln64_1_fu_265_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(zext_ln64_fu_261_p1));
    sub_ln64_fu_245_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(total_longest_line_0_fu_90));
    tmp_1_fu_237_p3 <= total_longest_line_0_fu_90(31 downto 31);
    total_longest_line_fu_336_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_length_line_0_i_load) + unsigned(ap_const_lv32_FFFFFFFC));
    total_x_1_fu_406_p3 <= 
        start_longest_lineX_fu_94 when (is_line_0_i_load_reg_748(0) = '1') else 
        zext_ln52_reg_728_pp0_iter1_reg;
    total_x_2_fu_519_p3 <= 
        start_longest_lineX_fu_94 when (and_ln46_1_fu_449_p2(0) = '1') else 
        total_x_fu_512_p3;
    total_x_3_fu_527_p3 <= 
        total_x_2_fu_519_p3 when (sel_tmp8_demorgan_reg_781(0) = '1') else 
        start_longest_lineX_fu_94;
    total_x_4_fu_534_p3 <= 
        start_longest_lineX_fu_94 when (and_ln41_reg_792(0) = '1') else 
        total_x_3_fu_527_p3;
    total_x_fu_512_p3 <= 
        total_x_1_fu_406_p3 when (icmp_ln26_reg_755(0) = '1') else 
        start_longest_lineX_fu_94;
    x_fu_303_p2 <= std_logic_vector(unsigned(startX_line_reg_160) + unsigned(ap_const_lv9_1));

    x_out_blk_n_assign_proc : process(x_out_full_n, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            x_out_blk_n <= x_out_full_n;
        else 
            x_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    x_out_din <= std_logic_vector(unsigned(total_x_0_i_fu_82) + unsigned(select_ln64_reg_722));

    x_out_write_assign_proc : process(r_out_full_n, x_out_full_n, y_out_full_n, ap_CS_fsm_state7)
    begin
        if ((not(((y_out_full_n = ap_const_logic_0) or (x_out_full_n = ap_const_logic_0) or (r_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            x_out_write <= ap_const_logic_1;
        else 
            x_out_write <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln26_fu_342_p2 <= (icmp_ln26_fu_318_p2 xor ap_const_lv1_1);
    xor_ln41_fu_360_p2 <= (icmp_ln41_fu_330_p2 xor ap_const_lv1_1);
    y_fu_231_p2 <= std_logic_vector(unsigned(total_y_reg_149) + unsigned(ap_const_lv9_1));

    y_out_blk_n_assign_proc : process(y_out_full_n, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            y_out_blk_n <= y_out_full_n;
        else 
            y_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    y_out_din <= y_dc_0_fu_86;

    y_out_write_assign_proc : process(r_out_full_n, x_out_full_n, y_out_full_n, ap_CS_fsm_state7)
    begin
        if ((not(((y_out_full_n = ap_const_logic_0) or (x_out_full_n = ap_const_logic_0) or (r_out_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            y_out_write <= ap_const_logic_1;
        else 
            y_out_write <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln52_fu_293_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(startX_line_reg_160),32));
    zext_ln53_fu_221_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(total_y_reg_149),32));
    zext_ln64_2_fu_281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln64_2_fu_271_p4),32));
    zext_ln64_fu_261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln64_1_fu_251_p4),32));
end behav;
