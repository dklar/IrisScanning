// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cordic360_Sin_fixed.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cordic360_Sin_fixed::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cordic360_Sin_fixed::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state1 = "1";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state2 = "10";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state3 = "100";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state4 = "1000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state5 = "10000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state6 = "100000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state7 = "1000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state8 = "10000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state9 = "100000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state10 = "1000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state11 = "10000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state12 = "100000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<40> cordic360_Sin_fixed::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const bool cordic360_Sin_fixed::ap_const_boolean_1 = true;
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_B = "1011";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_13 = "10011";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_1B = "11011";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_23 = "100011";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_D = "1101";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_15 = "10101";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_1D = "11101";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_25 = "100101";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_1 = "1";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_3 = "11";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_4 = "100";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_5 = "101";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_6 = "110";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_7 = "111";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_17 = "10111";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_1F = "11111";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_27 = "100111";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_F = "1111";
const sc_lv<1> cordic360_Sin_fixed::ap_const_lv1_0 = "0";
const sc_lv<1> cordic360_Sin_fixed::ap_const_lv1_1 = "1";
const bool cordic360_Sin_fixed::ap_const_boolean_0 = false;
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_E = "1110";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_16 = "10110";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_1E = "11110";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_26 = "100110";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_C = "1100";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_14 = "10100";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_1C = "11100";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_24 = "100100";
const sc_lv<64> cordic360_Sin_fixed::ap_const_lv64_C01921FB54442D18 = "1100000000011001001000011111101101010100010001000010110100011000";
const sc_lv<64> cordic360_Sin_fixed::ap_const_lv64_C00921FB54442D11 = "1100000000001001001000011111101101010100010001000010110100010001";
const sc_lv<64> cordic360_Sin_fixed::ap_const_lv64_400921FB54442D11 = "100000000001001001000011111101101010100010001000010110100010001";
const sc_lv<64> cordic360_Sin_fixed::ap_const_lv64_4012D97C7F3321D2 = "100000000010010110110010111110001111111001100110010000111010010";
const sc_lv<64> cordic360_Sin_fixed::ap_const_lv64_3FF921FB54524550 = "11111111111001001000011111101101010100010100100100010101010000";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_2 = "10";
const sc_lv<64> cordic360_Sin_fixed::ap_const_lv64_BFF921FB54524550 = "1011111111111001001000011111101101010100010100100100010101010000";
const sc_lv<8> cordic360_Sin_fixed::ap_const_lv8_0 = "00000000";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_34 = "110100";
const sc_lv<32> cordic360_Sin_fixed::ap_const_lv32_3E = "111110";
const sc_lv<11> cordic360_Sin_fixed::ap_const_lv11_7FF = "11111111111";
const sc_lv<52> cordic360_Sin_fixed::ap_const_lv52_0 = "0000000000000000000000000000000000000000000000000000";
const sc_lv<5> cordic360_Sin_fixed::ap_const_lv5_3 = "11";
const sc_lv<5> cordic360_Sin_fixed::ap_const_lv5_2 = "10";
const sc_lv<5> cordic360_Sin_fixed::ap_const_lv5_5 = "101";

cordic360_Sin_fixed::cordic360_Sin_fixed(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_cordicSin_fix_fu_53 = new cordicSin_fix("grp_cordicSin_fix_fu_53");
    grp_cordicSin_fix_fu_53->ap_clk(ap_clk);
    grp_cordicSin_fix_fu_53->ap_rst(ap_rst);
    grp_cordicSin_fix_fu_53->ap_start(grp_cordicSin_fix_fu_53_ap_start);
    grp_cordicSin_fix_fu_53->ap_done(grp_cordicSin_fix_fu_53_ap_done);
    grp_cordicSin_fix_fu_53->ap_idle(grp_cordicSin_fix_fu_53_ap_idle);
    grp_cordicSin_fix_fu_53->ap_ready(grp_cordicSin_fix_fu_53_ap_ready);
    grp_cordicSin_fix_fu_53->x(grp_cordicSin_fix_fu_53_x);
    grp_cordicSin_fix_fu_53->ap_return(grp_cordicSin_fix_fu_53_ap_return);
    top_level2_fptrunncg_U65 = new top_level2_fptrunncg<1,2,64,32>("top_level2_fptrunncg_U65");
    top_level2_fptrunncg_U65->clk(ap_clk);
    top_level2_fptrunncg_U65->reset(ap_rst);
    top_level2_fptrunncg_U65->din0(reg_99);
    top_level2_fptrunncg_U65->ce(ap_var_for_const0);
    top_level2_fptrunncg_U65->dout(grp_fu_60_p1);
    top_level2_fpext_lbW_U66 = new top_level2_fpext_lbW<1,2,32,64>("top_level2_fpext_lbW_U66");
    top_level2_fpext_lbW_U66->clk(ap_clk);
    top_level2_fpext_lbW_U66->reset(ap_rst);
    top_level2_fpext_lbW_U66->din0(x);
    top_level2_fpext_lbW_U66->ce(ap_var_for_const0);
    top_level2_fpext_lbW_U66->dout(grp_fu_63_p1);
    top_level2_dadd_6ocq_U67 = new top_level2_dadd_6ocq<1,5,64,64,64>("top_level2_dadd_6ocq_U67");
    top_level2_dadd_6ocq_U67->clk(ap_clk);
    top_level2_dadd_6ocq_U67->reset(ap_rst);
    top_level2_dadd_6ocq_U67->din0(tmp_reg_162);
    top_level2_dadd_6ocq_U67->din1(grp_fu_67_p1);
    top_level2_dadd_6ocq_U67->ce(ap_var_for_const0);
    top_level2_dadd_6ocq_U67->dout(grp_fu_67_p2);
    top_level2_dcmp_6pcA_U68 = new top_level2_dcmp_6pcA<1,2,64,64,1>("top_level2_dcmp_6pcA_U68");
    top_level2_dcmp_6pcA_U68->clk(ap_clk);
    top_level2_dcmp_6pcA_U68->reset(ap_rst);
    top_level2_dcmp_6pcA_U68->din0(tmp_reg_162);
    top_level2_dcmp_6pcA_U68->din1(grp_fu_74_p1);
    top_level2_dcmp_6pcA_U68->ce(ap_var_for_const0);
    top_level2_dcmp_6pcA_U68->opcode(grp_fu_74_opcode);
    top_level2_dcmp_6pcA_U68->dout(grp_fu_74_p2);
    top_level2_dcmp_6pcA_U69 = new top_level2_dcmp_6pcA<1,2,64,64,1>("top_level2_dcmp_6pcA_U69");
    top_level2_dcmp_6pcA_U69->clk(ap_clk);
    top_level2_dcmp_6pcA_U69->reset(ap_rst);
    top_level2_dcmp_6pcA_U69->din0(tmp_reg_162);
    top_level2_dcmp_6pcA_U69->din1(ap_var_for_const1);
    top_level2_dcmp_6pcA_U69->ce(ap_var_for_const0);
    top_level2_dcmp_6pcA_U69->opcode(ap_var_for_const2);
    top_level2_dcmp_6pcA_U69->dout(grp_fu_82_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln157_1_fu_150_p2);
    sensitive << ( and_ln157_fu_145_p2 );
    sensitive << ( grp_fu_82_p2 );

    SC_METHOD(thread_and_ln157_fu_145_p2);
    sensitive << ( or_ln148_reg_170 );
    sensitive << ( grp_fu_74_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state16_on_subcall_done);
    sensitive << ( grp_cordicSin_fix_fu_53_ap_done );
    sensitive << ( ap_predicate_op83_call_state16 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_block_state16_on_subcall_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_agg_result_0_phi_fu_41_p10);
    sensitive << ( and_ln148_reg_176 );
    sensitive << ( and_ln151_reg_180 );
    sensitive << ( and_ln154_reg_184 );
    sensitive << ( and_ln157_1_reg_188 );
    sensitive << ( grp_fu_92_p2 );
    sensitive << ( agg_result_0_reg_38 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_ap_predicate_op83_call_state16);
    sensitive << ( and_ln148_reg_176 );
    sensitive << ( and_ln151_reg_180 );
    sensitive << ( and_ln154_reg_184 );
    sensitive << ( and_ln157_1_reg_188 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_block_state16_on_subcall_done );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_phi_mux_agg_result_0_phi_fu_41_p10 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_block_state16_on_subcall_done );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_bitcast_ln148_fu_109_p1);
    sensitive << ( tmp_reg_162 );

    SC_METHOD(thread_grp_cordicSin_fix_fu_53_ap_start);
    sensitive << ( grp_cordicSin_fix_fu_53_ap_start_reg );

    SC_METHOD(thread_grp_cordicSin_fix_fu_53_x);
    sensitive << ( x );
    sensitive << ( reg_104 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_predicate_op83_call_state16 );

    SC_METHOD(thread_grp_fu_67_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_74_opcode);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_fu_87_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_74_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_87_p0);
    sensitive << ( or_ln148_fu_138_p2 );
    sensitive << ( or_ln148_reg_170 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_fu_87_p2);
    sensitive << ( grp_fu_87_p0 );
    sensitive << ( grp_fu_74_p2 );

    SC_METHOD(thread_grp_fu_92_p2);
    sensitive << ( grp_cordicSin_fix_fu_53_ap_return );

    SC_METHOD(thread_icmp_ln148_1_fu_132_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( trunc_ln148_fu_122_p1 );

    SC_METHOD(thread_icmp_ln148_fu_126_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_6_fu_112_p4 );

    SC_METHOD(thread_or_ln148_fu_138_p2);
    sensitive << ( icmp_ln148_1_fu_132_p2 );
    sensitive << ( icmp_ln148_fu_126_p2 );

    SC_METHOD(thread_tmp_6_fu_112_p4);
    sensitive << ( bitcast_ln148_fu_109_p1 );

    SC_METHOD(thread_trunc_ln148_fu_122_p1);
    sensitive << ( bitcast_ln148_fu_109_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_fu_87_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( and_ln157_1_fu_150_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_cordicSin_fix_fu_53_ap_done );
    sensitive << ( ap_CS_fsm_state24 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_block_state16_on_subcall_done );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "0000000000000000000000000000000000000001";
    grp_cordicSin_fix_fu_53_ap_start_reg = SC_LOGIC_0;
    ap_return_preg = "00000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cordic360_Sin_fixed_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_67_p2, "grp_fu_67_p2");
    sc_trace(mVcdFile, reg_99, "reg_99");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, grp_fu_60_p1, "grp_fu_60_p1");
    sc_trace(mVcdFile, reg_104, "reg_104");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, grp_fu_63_p1, "grp_fu_63_p1");
    sc_trace(mVcdFile, tmp_reg_162, "tmp_reg_162");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, or_ln148_fu_138_p2, "or_ln148_fu_138_p2");
    sc_trace(mVcdFile, or_ln148_reg_170, "or_ln148_reg_170");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_fu_87_p2, "grp_fu_87_p2");
    sc_trace(mVcdFile, and_ln148_reg_176, "and_ln148_reg_176");
    sc_trace(mVcdFile, and_ln151_reg_180, "and_ln151_reg_180");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, and_ln154_reg_184, "and_ln154_reg_184");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, and_ln157_1_fu_150_p2, "and_ln157_1_fu_150_p2");
    sc_trace(mVcdFile, and_ln157_1_reg_188, "and_ln157_1_reg_188");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_cordicSin_fix_fu_53_ap_return, "grp_cordicSin_fix_fu_53_ap_return");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_cordicSin_fix_fu_53_ap_ready, "grp_cordicSin_fix_fu_53_ap_ready");
    sc_trace(mVcdFile, grp_cordicSin_fix_fu_53_ap_done, "grp_cordicSin_fix_fu_53_ap_done");
    sc_trace(mVcdFile, grp_fu_92_p2, "grp_fu_92_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, grp_cordicSin_fix_fu_53_ap_start, "grp_cordicSin_fix_fu_53_ap_start");
    sc_trace(mVcdFile, grp_cordicSin_fix_fu_53_ap_idle, "grp_cordicSin_fix_fu_53_ap_idle");
    sc_trace(mVcdFile, grp_cordicSin_fix_fu_53_x, "grp_cordicSin_fix_fu_53_x");
    sc_trace(mVcdFile, ap_phi_mux_agg_result_0_phi_fu_41_p10, "ap_phi_mux_agg_result_0_phi_fu_41_p10");
    sc_trace(mVcdFile, agg_result_0_reg_38, "agg_result_0_reg_38");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_predicate_op83_call_state16, "ap_predicate_op83_call_state16");
    sc_trace(mVcdFile, ap_block_state16_on_subcall_done, "ap_block_state16_on_subcall_done");
    sc_trace(mVcdFile, grp_cordicSin_fix_fu_53_ap_start_reg, "grp_cordicSin_fix_fu_53_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, grp_fu_67_p1, "grp_fu_67_p1");
    sc_trace(mVcdFile, grp_fu_74_p1, "grp_fu_74_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, grp_fu_87_p0, "grp_fu_87_p0");
    sc_trace(mVcdFile, grp_fu_74_p2, "grp_fu_74_p2");
    sc_trace(mVcdFile, bitcast_ln148_fu_109_p1, "bitcast_ln148_fu_109_p1");
    sc_trace(mVcdFile, tmp_6_fu_112_p4, "tmp_6_fu_112_p4");
    sc_trace(mVcdFile, trunc_ln148_fu_122_p1, "trunc_ln148_fu_122_p1");
    sc_trace(mVcdFile, icmp_ln148_1_fu_132_p2, "icmp_ln148_1_fu_132_p2");
    sc_trace(mVcdFile, icmp_ln148_fu_126_p2, "icmp_ln148_fu_126_p2");
    sc_trace(mVcdFile, and_ln157_fu_145_p2, "and_ln157_fu_145_p2");
    sc_trace(mVcdFile, grp_fu_82_p2, "grp_fu_82_p2");
    sc_trace(mVcdFile, grp_fu_74_opcode, "grp_fu_74_opcode");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

cordic360_Sin_fixed::~cordic360_Sin_fixed() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_cordicSin_fix_fu_53;
    delete top_level2_fptrunncg_U65;
    delete top_level2_fpext_lbW_U66;
    delete top_level2_dadd_6ocq_U67;
    delete top_level2_dcmp_6pcA_U68;
    delete top_level2_dcmp_6pcA_U69;
}

void cordic360_Sin_fixed::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void cordic360_Sin_fixed::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_BFF921FB54524550;
}

void cordic360_Sin_fixed::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_5;
}

void cordic360_Sin_fixed::thread_ap_clk_no_reset_() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(grp_cordicSin_fix_fu_53_ap_done.read(), ap_const_logic_1)) || 
         (esl_seteq<1,1,1>(grp_cordicSin_fix_fu_53_ap_done.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())))) {
        agg_result_0_reg_38 = grp_cordicSin_fix_fu_53_ap_return.read();
    } else if (((esl_seteq<1,1,1>(grp_cordicSin_fix_fu_53_ap_done.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) || 
                (esl_seteq<1,1,1>(grp_cordicSin_fix_fu_53_ap_done.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
                 esl_seteq<1,1,1>(and_ln148_reg_176.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(and_ln151_reg_180.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(and_ln154_reg_184.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(and_ln157_1_reg_188.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_block_state16_on_subcall_done.read(), ap_const_boolean_0)))) {
        agg_result_0_reg_38 = grp_fu_92_p2.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv8_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
             esl_seteq<1,1,1>(ap_block_state16_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_return_preg = ap_phi_mux_agg_result_0_phi_fu_41_p10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_cordicSin_fix_fu_53_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
              esl_seteq<1,1,1>(and_ln157_1_fu_150_p2.read(), ap_const_lv1_0)) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
            grp_cordicSin_fix_fu_53_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_cordicSin_fix_fu_53_ap_ready.read())) {
            grp_cordicSin_fix_fu_53_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        and_ln148_reg_176 = grp_fu_87_p2.read();
        or_ln148_reg_170 = or_ln148_fu_138_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        and_ln151_reg_180 = grp_fu_87_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        and_ln154_reg_184 = grp_fu_87_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        and_ln157_1_reg_188 = and_ln157_1_fu_150_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        reg_104 = grp_fu_60_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        reg_99 = grp_fu_67_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_reg_162 = grp_fu_63_p1.read();
    }
}

void cordic360_Sin_fixed::thread_and_ln157_1_fu_150_p2() {
    and_ln157_1_fu_150_p2 = (and_ln157_fu_145_p2.read() & grp_fu_82_p2.read());
}

void cordic360_Sin_fixed::thread_and_ln157_fu_145_p2() {
    and_ln157_fu_145_p2 = (or_ln148_reg_170.read() & grp_fu_74_p2.read());
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void cordic360_Sin_fixed::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void cordic360_Sin_fixed::thread_ap_block_state16_on_subcall_done() {
    ap_block_state16_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_cordicSin_fix_fu_53_ap_done.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_call_state16.read()));
}

void cordic360_Sin_fixed::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_block_state16_on_subcall_done.read(), ap_const_boolean_0)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cordic360_Sin_fixed::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cordic360_Sin_fixed::thread_ap_phi_mux_agg_result_0_phi_fu_41_p10() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(and_ln148_reg_176.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(and_ln151_reg_180.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(and_ln154_reg_184.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(and_ln157_1_reg_188.read(), ap_const_lv1_1))) {
        ap_phi_mux_agg_result_0_phi_fu_41_p10 = grp_fu_92_p2.read();
    } else {
        ap_phi_mux_agg_result_0_phi_fu_41_p10 = agg_result_0_reg_38.read();
    }
}

void cordic360_Sin_fixed::thread_ap_predicate_op83_call_state16() {
    ap_predicate_op83_call_state16 = (esl_seteq<1,1,1>(and_ln148_reg_176.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(and_ln151_reg_180.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(and_ln154_reg_184.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(and_ln157_1_reg_188.read(), ap_const_lv1_1));
}

void cordic360_Sin_fixed::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_block_state16_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cordic360_Sin_fixed::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
         esl_seteq<1,1,1>(ap_block_state16_on_subcall_done.read(), ap_const_boolean_0))) {
        ap_return = ap_phi_mux_agg_result_0_phi_fu_41_p10.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void cordic360_Sin_fixed::thread_bitcast_ln148_fu_109_p1() {
    bitcast_ln148_fu_109_p1 = tmp_reg_162.read();
}

void cordic360_Sin_fixed::thread_grp_cordicSin_fix_fu_53_ap_start() {
    grp_cordicSin_fix_fu_53_ap_start = grp_cordicSin_fix_fu_53_ap_start_reg.read();
}

void cordic360_Sin_fixed::thread_grp_cordicSin_fix_fu_53_x() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op83_call_state16.read())))) {
        grp_cordicSin_fix_fu_53_x = reg_104.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_cordicSin_fix_fu_53_x = x.read();
    } else {
        grp_cordicSin_fix_fu_53_x = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void cordic360_Sin_fixed::thread_grp_fu_67_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_67_p1 = ap_const_lv64_400921FB54442D11;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        grp_fu_67_p1 = ap_const_lv64_C00921FB54442D11;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_67_p1 = ap_const_lv64_C01921FB54442D18;
    } else {
        grp_fu_67_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void cordic360_Sin_fixed::thread_grp_fu_74_opcode() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(grp_fu_87_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(grp_fu_87_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          esl_seteq<1,1,1>(grp_fu_87_p2.read(), ap_const_lv1_0)))) {
        grp_fu_74_opcode = ap_const_lv5_2;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_74_opcode = ap_const_lv5_3;
    } else {
        grp_fu_74_opcode =  (sc_lv<5>) ("XXXXX");
    }
}

void cordic360_Sin_fixed::thread_grp_fu_74_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_74_p1 = ap_const_lv64_C00921FB54442D11;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_74_p1 = ap_const_lv64_3FF921FB54524550;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_74_p1 = ap_const_lv64_400921FB54442D11;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_74_p1 = ap_const_lv64_4012D97C7F3321D2;
    } else {
        grp_fu_74_p1 =  (sc_lv<64>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void cordic360_Sin_fixed::thread_grp_fu_87_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        grp_fu_87_p0 = or_ln148_reg_170.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_87_p0 = or_ln148_fu_138_p2.read();
    } else {
        grp_fu_87_p0 =  (sc_lv<1>) ("X");
    }
}

void cordic360_Sin_fixed::thread_grp_fu_87_p2() {
    grp_fu_87_p2 = (grp_fu_87_p0.read() & grp_fu_74_p2.read());
}

void cordic360_Sin_fixed::thread_grp_fu_92_p2() {
    grp_fu_92_p2 = (!ap_const_lv8_0.is_01() || !grp_cordicSin_fix_fu_53_ap_return.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_0) - sc_biguint<8>(grp_cordicSin_fix_fu_53_ap_return.read()));
}

void cordic360_Sin_fixed::thread_icmp_ln148_1_fu_132_p2() {
    icmp_ln148_1_fu_132_p2 = (!trunc_ln148_fu_122_p1.read().is_01() || !ap_const_lv52_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln148_fu_122_p1.read() == ap_const_lv52_0);
}

void cordic360_Sin_fixed::thread_icmp_ln148_fu_126_p2() {
    icmp_ln148_fu_126_p2 = (!tmp_6_fu_112_p4.read().is_01() || !ap_const_lv11_7FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_112_p4.read() != ap_const_lv11_7FF);
}

void cordic360_Sin_fixed::thread_or_ln148_fu_138_p2() {
    or_ln148_fu_138_p2 = (icmp_ln148_1_fu_132_p2.read() | icmp_ln148_fu_126_p2.read());
}

void cordic360_Sin_fixed::thread_tmp_6_fu_112_p4() {
    tmp_6_fu_112_p4 = bitcast_ln148_fu_109_p1.read().range(62, 52);
}

void cordic360_Sin_fixed::thread_trunc_ln148_fu_122_p1() {
    trunc_ln148_fu_122_p1 = bitcast_ln148_fu_109_p1.read().range(52-1, 0);
}

void cordic360_Sin_fixed::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_fu_87_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state33;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_fu_87_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_fu_87_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(and_ln157_1_fu_150_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_cordicSin_fix_fu_53_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_block_state16_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            if ((esl_seteq<1,1,1>(grp_cordicSin_fix_fu_53_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state24;
            }
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            if ((esl_seteq<1,1,1>(grp_cordicSin_fix_fu_53_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state32;
            }
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            if ((esl_seteq<1,1,1>(grp_cordicSin_fix_fu_53_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state40;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<40>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

