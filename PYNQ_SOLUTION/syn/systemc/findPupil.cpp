// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "findPupil.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic findPupil::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic findPupil::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> findPupil::ap_ST_fsm_state1 = "1";
const sc_lv<5> findPupil::ap_ST_fsm_state2 = "10";
const sc_lv<5> findPupil::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<5> findPupil::ap_ST_fsm_state6 = "1000";
const sc_lv<5> findPupil::ap_ST_fsm_state7 = "10000";
const bool findPupil::ap_const_boolean_1 = true;
const sc_lv<32> findPupil::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> findPupil::ap_const_lv32_2 = "10";
const bool findPupil::ap_const_boolean_0 = false;
const sc_lv<1> findPupil::ap_const_lv1_0 = "0";
const sc_lv<32> findPupil::ap_const_lv32_4 = "100";
const sc_lv<32> findPupil::ap_const_lv32_1 = "1";
const sc_lv<1> findPupil::ap_const_lv1_1 = "1";
const sc_lv<9> findPupil::ap_const_lv9_0 = "000000000";
const sc_lv<32> findPupil::ap_const_lv32_3 = "11";
const sc_lv<9> findPupil::ap_const_lv9_118 = "100011000";
const sc_lv<9> findPupil::ap_const_lv9_1 = "1";
const sc_lv<32> findPupil::ap_const_lv32_1F = "11111";
const sc_lv<9> findPupil::ap_const_lv9_140 = "101000000";
const sc_lv<8> findPupil::ap_const_lv8_47 = "1000111";
const sc_lv<32> findPupil::ap_const_lv32_FFFFFFFC = "11111111111111111111111111111100";

findPupil::findPupil(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln50_fu_418_p2);
    sensitive << ( sel_tmp2_fu_400_p2 );
    sensitive << ( xor_ln50_fu_412_p2 );

    SC_METHOD(thread_and_ln55_1_fu_501_p2);
    sensitive << ( sel_tmp2_reg_828 );
    sensitive << ( and_ln55_fu_496_p2 );

    SC_METHOD(thread_and_ln55_fu_496_p2);
    sensitive << ( icmp_ln50_reg_814 );
    sensitive << ( icmp_ln55_fu_464_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( dst_img_data_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln30_reg_785 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( dst_img_data_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln30_reg_785 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( dst_img_data_stream_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln30_reg_785 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( dst_img_data_stream_V_full_n );
    sensitive << ( icmp_ln30_reg_785 );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state7);
    sensitive << ( r_out_full_n );
    sensitive << ( x_out_full_n );
    sensitive << ( y_out_full_n );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln30_fu_349_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( r_out_full_n );
    sensitive << ( x_out_full_n );
    sensitive << ( y_out_full_n );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_ap_sig_allocacmp_gap_count_0_i_load);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln30_reg_785_pp0_iter1_reg );
    sensitive << ( select_ln50_reg_855 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( gap_count_0_i_fu_154 );

    SC_METHOD(thread_ap_sig_allocacmp_is_line_0_i_load);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln30_reg_785_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( is_line_0_i_fu_158 );
    sensitive << ( or_ln50_fu_532_p2 );

    SC_METHOD(thread_ap_sig_allocacmp_length_line_0_i_load);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln30_reg_785_pp0_iter1_reg );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( length_line_0_i_fu_150 );
    sensitive << ( select_ln50_1_fu_557_p3 );

    SC_METHOD(thread_dst_img_data_stream_V_blk_n);
    sensitive << ( dst_img_data_stream_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln30_reg_785 );

    SC_METHOD(thread_dst_img_data_stream_V_din);
    sensitive << ( img_data_stream_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln30_reg_785 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_dst_img_data_stream_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln30_reg_785 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_gap_count_fu_376_p2);
    sensitive << ( ap_sig_allocacmp_gap_count_0_i_load );

    SC_METHOD(thread_icmp_ln29_fu_277_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( total_y_reg_201 );

    SC_METHOD(thread_icmp_ln30_fu_349_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( startX_line_reg_212 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln35_fu_370_p2);
    sensitive << ( img_data_stream_V_dout );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln30_reg_785 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln50_fu_382_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln30_reg_785 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( gap_count_fu_376_p2 );

    SC_METHOD(thread_icmp_ln55_fu_464_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln30_reg_785_pp0_iter1_reg );
    sensitive << ( total_longest_line_reg_819 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( longest_line_in_row_fu_162 );

    SC_METHOD(thread_icmp_ln59_fu_469_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln30_reg_785_pp0_iter1_reg );
    sensitive << ( total_longest_line_reg_819 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( total_longest_line_0_fu_142 );

    SC_METHOD(thread_img_data_stream_V_blk_n);
    sensitive << ( img_data_stream_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln30_reg_785 );

    SC_METHOD(thread_img_data_stream_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln30_reg_785 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( r_out_full_n );
    sensitive << ( x_out_full_n );
    sensitive << ( y_out_full_n );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_length_line_1_fu_451_p3);
    sensitive << ( is_line_0_i_load_reg_800 );
    sensitive << ( length_line_fu_446_p2 );

    SC_METHOD(thread_length_line_fu_446_p2);
    sensitive << ( length_line_0_i_load_reg_794 );

    SC_METHOD(thread_longest_line_in_row_2_fu_506_p3);
    sensitive << ( total_longest_line_reg_819 );
    sensitive << ( longest_line_in_row_fu_162 );
    sensitive << ( and_ln55_1_fu_501_p2 );

    SC_METHOD(thread_longest_line_in_row_3_fu_513_p3);
    sensitive << ( sel_tmp8_demorgan_reg_833 );
    sensitive << ( longest_line_in_row_fu_162 );
    sensitive << ( longest_line_in_row_2_fu_506_p3 );

    SC_METHOD(thread_longest_line_in_row_4_fu_520_p3);
    sensitive << ( and_ln50_reg_844 );
    sensitive << ( longest_line_in_row_fu_162 );
    sensitive << ( longest_line_in_row_3_fu_513_p3 );

    SC_METHOD(thread_lshr_ln73_1_fu_303_p4);
    sensitive << ( sub_ln73_fu_297_p2 );

    SC_METHOD(thread_lshr_ln73_2_fu_323_p4);
    sensitive << ( total_longest_line_0_fu_142 );

    SC_METHOD(thread_or_ln50_fu_532_p2);
    sensitive << ( and_ln50_reg_844 );
    sensitive << ( sel_tmp24_fu_527_p3 );

    SC_METHOD(thread_r_out_blk_n);
    sensitive << ( r_out_full_n );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_r_out_din);
    sensitive << ( r_out_full_n );
    sensitive << ( x_out_full_n );
    sensitive << ( y_out_full_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( select_ln73_reg_774 );

    SC_METHOD(thread_r_out_write);
    sensitive << ( r_out_full_n );
    sensitive << ( x_out_full_n );
    sensitive << ( y_out_full_n );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sel_tmp114_fu_645_p3);
    sensitive << ( sel_tmp8_demorgan_reg_833 );
    sensitive << ( total_x_0_i_fu_134 );
    sensitive << ( select_ln55_4_fu_637_p3 );

    SC_METHOD(thread_sel_tmp24_fu_527_p3);
    sensitive << ( is_line_0_i_load_reg_800 );
    sensitive << ( icmp_ln35_reg_807 );
    sensitive << ( sel_tmp8_demorgan_reg_833 );

    SC_METHOD(thread_sel_tmp2_fu_400_p2);
    sensitive << ( ap_sig_allocacmp_is_line_0_i_load );
    sensitive << ( xor_ln35_fu_394_p2 );

    SC_METHOD(thread_sel_tmp39_fu_424_p3);
    sensitive << ( sel_tmp8_demorgan_fu_406_p2 );
    sensitive << ( ap_sig_allocacmp_gap_count_0_i_load );

    SC_METHOD(thread_sel_tmp54_fu_551_p3);
    sensitive << ( length_line_0_i_load_reg_794 );
    sensitive << ( sel_tmp8_demorgan_reg_833 );
    sensitive << ( select_ln55_fu_543_p3 );

    SC_METHOD(thread_sel_tmp84_fu_601_p3);
    sensitive << ( sel_tmp8_demorgan_reg_833 );
    sensitive << ( total_longest_line_0_fu_142 );
    sensitive << ( select_ln55_2_fu_593_p3 );

    SC_METHOD(thread_sel_tmp8_demorgan_fu_406_p2);
    sensitive << ( icmp_ln35_fu_370_p2 );
    sensitive << ( ap_sig_allocacmp_is_line_0_i_load );

    SC_METHOD(thread_sel_tmp99_fu_623_p3);
    sensitive << ( sel_tmp8_demorgan_reg_833 );
    sensitive << ( y_dc_0_fu_138 );
    sensitive << ( select_ln55_3_fu_615_p3 );

    SC_METHOD(thread_select_ln35_fu_537_p3);
    sensitive << ( icmp_ln35_reg_807 );
    sensitive << ( total_longest_line_reg_819 );
    sensitive << ( length_line_1_fu_451_p3 );

    SC_METHOD(thread_select_ln50_1_fu_557_p3);
    sensitive << ( and_ln50_reg_844 );
    sensitive << ( length_line_fu_446_p2 );
    sensitive << ( sel_tmp54_fu_551_p3 );

    SC_METHOD(thread_select_ln50_3_fu_608_p3);
    sensitive << ( and_ln50_reg_844 );
    sensitive << ( total_longest_line_0_fu_142 );
    sensitive << ( sel_tmp84_fu_601_p3 );

    SC_METHOD(thread_select_ln50_4_fu_630_p3);
    sensitive << ( and_ln50_reg_844 );
    sensitive << ( y_dc_0_fu_138 );
    sensitive << ( sel_tmp99_fu_623_p3 );

    SC_METHOD(thread_select_ln50_5_fu_652_p3);
    sensitive << ( and_ln50_reg_844 );
    sensitive << ( total_x_0_i_fu_134 );
    sensitive << ( sel_tmp114_fu_645_p3 );

    SC_METHOD(thread_select_ln50_fu_432_p3);
    sensitive << ( and_ln50_fu_418_p2 );
    sensitive << ( gap_count_fu_376_p2 );
    sensitive << ( sel_tmp39_fu_424_p3 );

    SC_METHOD(thread_select_ln55_2_fu_593_p3);
    sensitive << ( total_longest_line_0_fu_142 );
    sensitive << ( and_ln55_1_fu_501_p2 );
    sensitive << ( select_ln59_fu_474_p3 );

    SC_METHOD(thread_select_ln55_3_fu_615_p3);
    sensitive << ( y_dc_0_fu_138 );
    sensitive << ( and_ln55_1_fu_501_p2 );
    sensitive << ( select_ln59_1_fu_481_p3 );

    SC_METHOD(thread_select_ln55_4_fu_637_p3);
    sensitive << ( total_x_0_i_fu_134 );
    sensitive << ( and_ln55_1_fu_501_p2 );
    sensitive << ( select_ln59_2_fu_488_p3 );

    SC_METHOD(thread_select_ln55_fu_543_p3);
    sensitive << ( and_ln55_1_fu_501_p2 );
    sensitive << ( select_ln35_fu_537_p3 );

    SC_METHOD(thread_select_ln59_1_fu_481_p3);
    sensitive << ( zext_ln62_reg_760 );
    sensitive << ( y_dc_0_fu_138 );
    sensitive << ( icmp_ln59_fu_469_p2 );

    SC_METHOD(thread_select_ln59_2_fu_488_p3);
    sensitive << ( total_x_0_i_fu_134 );
    sensitive << ( start_longest_lineX_fu_146 );
    sensitive << ( icmp_ln59_fu_469_p2 );

    SC_METHOD(thread_select_ln59_fu_474_p3);
    sensitive << ( total_longest_line_reg_819 );
    sensitive << ( total_longest_line_0_fu_142 );
    sensitive << ( icmp_ln59_fu_469_p2 );

    SC_METHOD(thread_select_ln73_fu_337_p3);
    sensitive << ( tmp_fu_289_p3 );
    sensitive << ( sub_ln73_1_fu_317_p2 );
    sensitive << ( zext_ln73_1_fu_333_p1 );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_sub_ln73_1_fu_317_p2);
    sensitive << ( zext_ln73_fu_313_p1 );

    SC_METHOD(thread_sub_ln73_fu_297_p2);
    sensitive << ( total_longest_line_0_fu_142 );

    SC_METHOD(thread_tmp_fu_289_p3);
    sensitive << ( total_longest_line_0_fu_142 );

    SC_METHOD(thread_total_longest_line_fu_388_p2);
    sensitive << ( ap_sig_allocacmp_length_line_0_i_load );

    SC_METHOD(thread_total_x_1_fu_458_p3);
    sensitive << ( zext_ln61_reg_780_pp0_iter1_reg );
    sensitive << ( is_line_0_i_load_reg_800 );
    sensitive << ( start_longest_lineX_fu_146 );

    SC_METHOD(thread_total_x_2_fu_571_p3);
    sensitive << ( start_longest_lineX_fu_146 );
    sensitive << ( and_ln55_1_fu_501_p2 );
    sensitive << ( total_x_fu_564_p3 );

    SC_METHOD(thread_total_x_3_fu_579_p3);
    sensitive << ( sel_tmp8_demorgan_reg_833 );
    sensitive << ( start_longest_lineX_fu_146 );
    sensitive << ( total_x_2_fu_571_p3 );

    SC_METHOD(thread_total_x_4_fu_586_p3);
    sensitive << ( and_ln50_reg_844 );
    sensitive << ( start_longest_lineX_fu_146 );
    sensitive << ( total_x_3_fu_579_p3 );

    SC_METHOD(thread_total_x_fu_564_p3);
    sensitive << ( icmp_ln35_reg_807 );
    sensitive << ( start_longest_lineX_fu_146 );
    sensitive << ( total_x_1_fu_458_p3 );

    SC_METHOD(thread_x_fu_355_p2);
    sensitive << ( startX_line_reg_212 );

    SC_METHOD(thread_x_out_blk_n);
    sensitive << ( x_out_full_n );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_x_out_din);
    sensitive << ( r_out_full_n );
    sensitive << ( x_out_full_n );
    sensitive << ( y_out_full_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( select_ln73_reg_774 );
    sensitive << ( total_x_0_i_fu_134 );

    SC_METHOD(thread_x_out_write);
    sensitive << ( r_out_full_n );
    sensitive << ( x_out_full_n );
    sensitive << ( y_out_full_n );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_xor_ln35_fu_394_p2);
    sensitive << ( icmp_ln35_fu_370_p2 );

    SC_METHOD(thread_xor_ln50_fu_412_p2);
    sensitive << ( icmp_ln50_fu_382_p2 );

    SC_METHOD(thread_y_fu_283_p2);
    sensitive << ( total_y_reg_201 );

    SC_METHOD(thread_y_out_blk_n);
    sensitive << ( y_out_full_n );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_y_out_din);
    sensitive << ( r_out_full_n );
    sensitive << ( x_out_full_n );
    sensitive << ( y_out_full_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( y_dc_0_fu_138 );

    SC_METHOD(thread_y_out_write);
    sensitive << ( r_out_full_n );
    sensitive << ( x_out_full_n );
    sensitive << ( y_out_full_n );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_zext_ln61_fu_345_p1);
    sensitive << ( startX_line_reg_212 );

    SC_METHOD(thread_zext_ln62_fu_273_p1);
    sensitive << ( total_y_reg_201 );

    SC_METHOD(thread_zext_ln73_1_fu_333_p1);
    sensitive << ( lshr_ln73_2_fu_323_p4 );

    SC_METHOD(thread_zext_ln73_fu_313_p1);
    sensitive << ( lshr_ln73_1_fu_303_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( r_out_full_n );
    sensitive << ( x_out_full_n );
    sensitive << ( y_out_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln29_fu_277_p2 );
    sensitive << ( icmp_ln30_fu_349_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "findPupil_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, img_data_stream_V_dout, "(port)img_data_stream_V_dout");
    sc_trace(mVcdFile, img_data_stream_V_empty_n, "(port)img_data_stream_V_empty_n");
    sc_trace(mVcdFile, img_data_stream_V_read, "(port)img_data_stream_V_read");
    sc_trace(mVcdFile, dst_img_data_stream_V_din, "(port)dst_img_data_stream_V_din");
    sc_trace(mVcdFile, dst_img_data_stream_V_full_n, "(port)dst_img_data_stream_V_full_n");
    sc_trace(mVcdFile, dst_img_data_stream_V_write, "(port)dst_img_data_stream_V_write");
    sc_trace(mVcdFile, r_out_din, "(port)r_out_din");
    sc_trace(mVcdFile, r_out_full_n, "(port)r_out_full_n");
    sc_trace(mVcdFile, r_out_write, "(port)r_out_write");
    sc_trace(mVcdFile, x_out_din, "(port)x_out_din");
    sc_trace(mVcdFile, x_out_full_n, "(port)x_out_full_n");
    sc_trace(mVcdFile, x_out_write, "(port)x_out_write");
    sc_trace(mVcdFile, y_out_din, "(port)y_out_din");
    sc_trace(mVcdFile, y_out_full_n, "(port)y_out_full_n");
    sc_trace(mVcdFile, y_out_write, "(port)y_out_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, img_data_stream_V_blk_n, "img_data_stream_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln30_reg_785, "icmp_ln30_reg_785");
    sc_trace(mVcdFile, dst_img_data_stream_V_blk_n, "dst_img_data_stream_V_blk_n");
    sc_trace(mVcdFile, r_out_blk_n, "r_out_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, x_out_blk_n, "x_out_blk_n");
    sc_trace(mVcdFile, y_out_blk_n, "y_out_blk_n");
    sc_trace(mVcdFile, startX_line_reg_212, "startX_line_reg_212");
    sc_trace(mVcdFile, zext_ln62_fu_273_p1, "zext_ln62_fu_273_p1");
    sc_trace(mVcdFile, zext_ln62_reg_760, "zext_ln62_reg_760");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln29_fu_277_p2, "icmp_ln29_fu_277_p2");
    sc_trace(mVcdFile, y_fu_283_p2, "y_fu_283_p2");
    sc_trace(mVcdFile, y_reg_769, "y_reg_769");
    sc_trace(mVcdFile, select_ln73_fu_337_p3, "select_ln73_fu_337_p3");
    sc_trace(mVcdFile, select_ln73_reg_774, "select_ln73_reg_774");
    sc_trace(mVcdFile, zext_ln61_fu_345_p1, "zext_ln61_fu_345_p1");
    sc_trace(mVcdFile, zext_ln61_reg_780, "zext_ln61_reg_780");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, zext_ln61_reg_780_pp0_iter1_reg, "zext_ln61_reg_780_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln30_fu_349_p2, "icmp_ln30_fu_349_p2");
    sc_trace(mVcdFile, icmp_ln30_reg_785_pp0_iter1_reg, "icmp_ln30_reg_785_pp0_iter1_reg");
    sc_trace(mVcdFile, x_fu_355_p2, "x_fu_355_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, length_line_0_i_load_reg_794, "length_line_0_i_load_reg_794");
    sc_trace(mVcdFile, is_line_0_i_load_reg_800, "is_line_0_i_load_reg_800");
    sc_trace(mVcdFile, icmp_ln35_fu_370_p2, "icmp_ln35_fu_370_p2");
    sc_trace(mVcdFile, icmp_ln35_reg_807, "icmp_ln35_reg_807");
    sc_trace(mVcdFile, icmp_ln50_fu_382_p2, "icmp_ln50_fu_382_p2");
    sc_trace(mVcdFile, icmp_ln50_reg_814, "icmp_ln50_reg_814");
    sc_trace(mVcdFile, total_longest_line_fu_388_p2, "total_longest_line_fu_388_p2");
    sc_trace(mVcdFile, total_longest_line_reg_819, "total_longest_line_reg_819");
    sc_trace(mVcdFile, sel_tmp2_fu_400_p2, "sel_tmp2_fu_400_p2");
    sc_trace(mVcdFile, sel_tmp2_reg_828, "sel_tmp2_reg_828");
    sc_trace(mVcdFile, sel_tmp8_demorgan_fu_406_p2, "sel_tmp8_demorgan_fu_406_p2");
    sc_trace(mVcdFile, sel_tmp8_demorgan_reg_833, "sel_tmp8_demorgan_reg_833");
    sc_trace(mVcdFile, and_ln50_fu_418_p2, "and_ln50_fu_418_p2");
    sc_trace(mVcdFile, and_ln50_reg_844, "and_ln50_reg_844");
    sc_trace(mVcdFile, select_ln50_fu_432_p3, "select_ln50_fu_432_p3");
    sc_trace(mVcdFile, select_ln50_reg_855, "select_ln50_reg_855");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, total_y_reg_201, "total_y_reg_201");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, total_x_0_i_fu_134, "total_x_0_i_fu_134");
    sc_trace(mVcdFile, select_ln50_5_fu_652_p3, "select_ln50_5_fu_652_p3");
    sc_trace(mVcdFile, y_dc_0_fu_138, "y_dc_0_fu_138");
    sc_trace(mVcdFile, select_ln50_4_fu_630_p3, "select_ln50_4_fu_630_p3");
    sc_trace(mVcdFile, total_longest_line_0_fu_142, "total_longest_line_0_fu_142");
    sc_trace(mVcdFile, select_ln50_3_fu_608_p3, "select_ln50_3_fu_608_p3");
    sc_trace(mVcdFile, start_longest_lineX_fu_146, "start_longest_lineX_fu_146");
    sc_trace(mVcdFile, total_x_4_fu_586_p3, "total_x_4_fu_586_p3");
    sc_trace(mVcdFile, length_line_0_i_fu_150, "length_line_0_i_fu_150");
    sc_trace(mVcdFile, select_ln50_1_fu_557_p3, "select_ln50_1_fu_557_p3");
    sc_trace(mVcdFile, ap_sig_allocacmp_length_line_0_i_load, "ap_sig_allocacmp_length_line_0_i_load");
    sc_trace(mVcdFile, gap_count_0_i_fu_154, "gap_count_0_i_fu_154");
    sc_trace(mVcdFile, ap_sig_allocacmp_gap_count_0_i_load, "ap_sig_allocacmp_gap_count_0_i_load");
    sc_trace(mVcdFile, is_line_0_i_fu_158, "is_line_0_i_fu_158");
    sc_trace(mVcdFile, or_ln50_fu_532_p2, "or_ln50_fu_532_p2");
    sc_trace(mVcdFile, ap_sig_allocacmp_is_line_0_i_load, "ap_sig_allocacmp_is_line_0_i_load");
    sc_trace(mVcdFile, longest_line_in_row_fu_162, "longest_line_in_row_fu_162");
    sc_trace(mVcdFile, longest_line_in_row_4_fu_520_p3, "longest_line_in_row_4_fu_520_p3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, ap_block_state7, "ap_block_state7");
    sc_trace(mVcdFile, sub_ln73_fu_297_p2, "sub_ln73_fu_297_p2");
    sc_trace(mVcdFile, lshr_ln73_1_fu_303_p4, "lshr_ln73_1_fu_303_p4");
    sc_trace(mVcdFile, zext_ln73_fu_313_p1, "zext_ln73_fu_313_p1");
    sc_trace(mVcdFile, lshr_ln73_2_fu_323_p4, "lshr_ln73_2_fu_323_p4");
    sc_trace(mVcdFile, tmp_fu_289_p3, "tmp_fu_289_p3");
    sc_trace(mVcdFile, sub_ln73_1_fu_317_p2, "sub_ln73_1_fu_317_p2");
    sc_trace(mVcdFile, zext_ln73_1_fu_333_p1, "zext_ln73_1_fu_333_p1");
    sc_trace(mVcdFile, gap_count_fu_376_p2, "gap_count_fu_376_p2");
    sc_trace(mVcdFile, xor_ln35_fu_394_p2, "xor_ln35_fu_394_p2");
    sc_trace(mVcdFile, xor_ln50_fu_412_p2, "xor_ln50_fu_412_p2");
    sc_trace(mVcdFile, sel_tmp39_fu_424_p3, "sel_tmp39_fu_424_p3");
    sc_trace(mVcdFile, length_line_fu_446_p2, "length_line_fu_446_p2");
    sc_trace(mVcdFile, icmp_ln59_fu_469_p2, "icmp_ln59_fu_469_p2");
    sc_trace(mVcdFile, icmp_ln55_fu_464_p2, "icmp_ln55_fu_464_p2");
    sc_trace(mVcdFile, and_ln55_fu_496_p2, "and_ln55_fu_496_p2");
    sc_trace(mVcdFile, and_ln55_1_fu_501_p2, "and_ln55_1_fu_501_p2");
    sc_trace(mVcdFile, longest_line_in_row_2_fu_506_p3, "longest_line_in_row_2_fu_506_p3");
    sc_trace(mVcdFile, longest_line_in_row_3_fu_513_p3, "longest_line_in_row_3_fu_513_p3");
    sc_trace(mVcdFile, sel_tmp24_fu_527_p3, "sel_tmp24_fu_527_p3");
    sc_trace(mVcdFile, length_line_1_fu_451_p3, "length_line_1_fu_451_p3");
    sc_trace(mVcdFile, select_ln35_fu_537_p3, "select_ln35_fu_537_p3");
    sc_trace(mVcdFile, select_ln55_fu_543_p3, "select_ln55_fu_543_p3");
    sc_trace(mVcdFile, sel_tmp54_fu_551_p3, "sel_tmp54_fu_551_p3");
    sc_trace(mVcdFile, total_x_1_fu_458_p3, "total_x_1_fu_458_p3");
    sc_trace(mVcdFile, total_x_fu_564_p3, "total_x_fu_564_p3");
    sc_trace(mVcdFile, total_x_2_fu_571_p3, "total_x_2_fu_571_p3");
    sc_trace(mVcdFile, total_x_3_fu_579_p3, "total_x_3_fu_579_p3");
    sc_trace(mVcdFile, select_ln59_fu_474_p3, "select_ln59_fu_474_p3");
    sc_trace(mVcdFile, select_ln55_2_fu_593_p3, "select_ln55_2_fu_593_p3");
    sc_trace(mVcdFile, sel_tmp84_fu_601_p3, "sel_tmp84_fu_601_p3");
    sc_trace(mVcdFile, select_ln59_1_fu_481_p3, "select_ln59_1_fu_481_p3");
    sc_trace(mVcdFile, select_ln55_3_fu_615_p3, "select_ln55_3_fu_615_p3");
    sc_trace(mVcdFile, sel_tmp99_fu_623_p3, "sel_tmp99_fu_623_p3");
    sc_trace(mVcdFile, select_ln59_2_fu_488_p3, "select_ln59_2_fu_488_p3");
    sc_trace(mVcdFile, select_ln55_4_fu_637_p3, "select_ln55_4_fu_637_p3");
    sc_trace(mVcdFile, sel_tmp114_fu_645_p3, "sel_tmp114_fu_645_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

findPupil::~findPupil() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void findPupil::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, r_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_out_full_n.read())))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_277_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_277_p2.read()))) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_785_pp0_iter1_reg.read()))) {
        gap_count_0_i_fu_154 = select_ln50_reg_855.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        gap_count_0_i_fu_154 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_785_pp0_iter1_reg.read()))) {
        is_line_0_i_fu_158 = or_ln50_fu_532_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        is_line_0_i_fu_158 = ap_const_lv1_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_785_pp0_iter1_reg.read()))) {
        length_line_0_i_fu_150 = select_ln50_1_fu_557_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        length_line_0_i_fu_150 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_785_pp0_iter1_reg.read()))) {
        longest_line_in_row_fu_162 = longest_line_in_row_4_fu_520_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        longest_line_in_row_fu_162 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_fu_349_p2.read()))) {
        startX_line_reg_212 = x_fu_355_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_277_p2.read()))) {
        startX_line_reg_212 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_785_pp0_iter1_reg.read()))) {
        start_longest_lineX_fu_146 = total_x_4_fu_586_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        start_longest_lineX_fu_146 = ap_const_lv32_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_785_pp0_iter1_reg.read()))) {
        total_longest_line_0_fu_142 = select_ln50_3_fu_608_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        total_longest_line_0_fu_142 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_785_pp0_iter1_reg.read()))) {
        total_x_0_i_fu_134 = select_ln50_5_fu_652_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        total_x_0_i_fu_134 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        total_y_reg_201 = y_reg_769.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        total_y_reg_201 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_785_pp0_iter1_reg.read()))) {
        y_dc_0_fu_138 = select_ln50_4_fu_630_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        y_dc_0_fu_138 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln30_reg_785.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        and_ln50_reg_844 = and_ln50_fu_418_p2.read();
        icmp_ln35_reg_807 = icmp_ln35_fu_370_p2.read();
        icmp_ln50_reg_814 = icmp_ln50_fu_382_p2.read();
        is_line_0_i_load_reg_800 = ap_sig_allocacmp_is_line_0_i_load.read();
        length_line_0_i_load_reg_794 = ap_sig_allocacmp_length_line_0_i_load.read();
        sel_tmp2_reg_828 = sel_tmp2_fu_400_p2.read();
        sel_tmp8_demorgan_reg_833 = sel_tmp8_demorgan_fu_406_p2.read();
        select_ln50_reg_855 = select_ln50_fu_432_p3.read();
        total_longest_line_reg_819 = total_longest_line_fu_388_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln30_reg_785 = icmp_ln30_fu_349_p2.read();
        icmp_ln30_reg_785_pp0_iter1_reg = icmp_ln30_reg_785.read();
        zext_ln61_reg_780 = zext_ln61_fu_345_p1.read();
        zext_ln61_reg_780_pp0_iter1_reg = zext_ln61_reg_780.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln29_fu_277_p2.read(), ap_const_lv1_1))) {
        select_ln73_reg_774 = select_ln73_fu_337_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        y_reg_769 = y_fu_283_p2.read();
        zext_ln62_reg_760 = zext_ln62_fu_273_p1.read();
    }
}

void findPupil::thread_and_ln50_fu_418_p2() {
    and_ln50_fu_418_p2 = (sel_tmp2_fu_400_p2.read() & xor_ln50_fu_412_p2.read());
}

void findPupil::thread_and_ln55_1_fu_501_p2() {
    and_ln55_1_fu_501_p2 = (and_ln55_fu_496_p2.read() & sel_tmp2_reg_828.read());
}

void findPupil::thread_and_ln55_fu_496_p2() {
    and_ln55_fu_496_p2 = (icmp_ln50_reg_814.read() & icmp_ln55_fu_464_p2.read());
}

void findPupil::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void findPupil::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void findPupil::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void findPupil::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[3];
}

void findPupil::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[4];
}

void findPupil::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void findPupil::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln30_reg_785.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln30_reg_785.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_img_data_stream_V_full_n.read()))));
}

void findPupil::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln30_reg_785.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln30_reg_785.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_img_data_stream_V_full_n.read()))));
}

void findPupil::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln30_reg_785.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln30_reg_785.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_img_data_stream_V_full_n.read()))));
}

void findPupil::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void findPupil::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void findPupil::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(icmp_ln30_reg_785.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_stream_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln30_reg_785.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_img_data_stream_V_full_n.read())));
}

void findPupil::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void findPupil::thread_ap_block_state7() {
    ap_block_state7 = (esl_seteq<1,1,1>(ap_const_logic_0, r_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_out_full_n.read()));
}

void findPupil::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln30_fu_349_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void findPupil::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, r_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_out_full_n.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void findPupil::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void findPupil::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void findPupil::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void findPupil::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void findPupil::thread_ap_sig_allocacmp_gap_count_0_i_load() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_785_pp0_iter1_reg.read()))) {
        ap_sig_allocacmp_gap_count_0_i_load = select_ln50_reg_855.read();
    } else {
        ap_sig_allocacmp_gap_count_0_i_load = gap_count_0_i_fu_154.read();
    }
}

void findPupil::thread_ap_sig_allocacmp_is_line_0_i_load() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_785_pp0_iter1_reg.read()))) {
        ap_sig_allocacmp_is_line_0_i_load = or_ln50_fu_532_p2.read();
    } else {
        ap_sig_allocacmp_is_line_0_i_load = is_line_0_i_fu_158.read();
    }
}

void findPupil::thread_ap_sig_allocacmp_length_line_0_i_load() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln30_reg_785_pp0_iter1_reg.read()))) {
        ap_sig_allocacmp_length_line_0_i_load = select_ln50_1_fu_557_p3.read();
    } else {
        ap_sig_allocacmp_length_line_0_i_load = length_line_0_i_fu_150.read();
    }
}

void findPupil::thread_dst_img_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln30_reg_785.read(), ap_const_lv1_0))) {
        dst_img_data_stream_V_blk_n = dst_img_data_stream_V_full_n.read();
    } else {
        dst_img_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void findPupil::thread_dst_img_data_stream_V_din() {
    dst_img_data_stream_V_din = img_data_stream_V_dout.read();
}

void findPupil::thread_dst_img_data_stream_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln30_reg_785.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_img_data_stream_V_write = ap_const_logic_1;
    } else {
        dst_img_data_stream_V_write = ap_const_logic_0;
    }
}

void findPupil::thread_gap_count_fu_376_p2() {
    gap_count_fu_376_p2 = (!ap_sig_allocacmp_gap_count_0_i_load.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_sig_allocacmp_gap_count_0_i_load.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void findPupil::thread_icmp_ln29_fu_277_p2() {
    icmp_ln29_fu_277_p2 = (!total_y_reg_201.read().is_01() || !ap_const_lv9_118.is_01())? sc_lv<1>(): sc_lv<1>(total_y_reg_201.read() == ap_const_lv9_118);
}

void findPupil::thread_icmp_ln30_fu_349_p2() {
    icmp_ln30_fu_349_p2 = (!startX_line_reg_212.read().is_01() || !ap_const_lv9_140.is_01())? sc_lv<1>(): sc_lv<1>(startX_line_reg_212.read() == ap_const_lv9_140);
}

void findPupil::thread_icmp_ln35_fu_370_p2() {
    icmp_ln35_fu_370_p2 = (!img_data_stream_V_dout.read().is_01() || !ap_const_lv8_47.is_01())? sc_lv<1>(): (sc_biguint<8>(img_data_stream_V_dout.read()) < sc_biguint<8>(ap_const_lv8_47));
}

void findPupil::thread_icmp_ln50_fu_382_p2() {
    icmp_ln50_fu_382_p2 = (!gap_count_fu_376_p2.read().is_01() || !ap_const_lv32_4.is_01())? sc_lv<1>(): (sc_bigint<32>(gap_count_fu_376_p2.read()) > sc_bigint<32>(ap_const_lv32_4));
}

void findPupil::thread_icmp_ln55_fu_464_p2() {
    icmp_ln55_fu_464_p2 = (!total_longest_line_reg_819.read().is_01() || !longest_line_in_row_fu_162.read().is_01())? sc_lv<1>(): (sc_bigint<32>(total_longest_line_reg_819.read()) > sc_bigint<32>(longest_line_in_row_fu_162.read()));
}

void findPupil::thread_icmp_ln59_fu_469_p2() {
    icmp_ln59_fu_469_p2 = (!total_longest_line_reg_819.read().is_01() || !total_longest_line_0_fu_142.read().is_01())? sc_lv<1>(): (sc_bigint<32>(total_longest_line_reg_819.read()) > sc_bigint<32>(total_longest_line_0_fu_142.read()));
}

void findPupil::thread_img_data_stream_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln30_reg_785.read(), ap_const_lv1_0))) {
        img_data_stream_V_blk_n = img_data_stream_V_empty_n.read();
    } else {
        img_data_stream_V_blk_n = ap_const_logic_1;
    }
}

void findPupil::thread_img_data_stream_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln30_reg_785.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_stream_V_read = ap_const_logic_1;
    } else {
        img_data_stream_V_read = ap_const_logic_0;
    }
}

void findPupil::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, r_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_out_full_n.read())))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void findPupil::thread_length_line_1_fu_451_p3() {
    length_line_1_fu_451_p3 = (!is_line_0_i_load_reg_800.read()[0].is_01())? sc_lv<32>(): ((is_line_0_i_load_reg_800.read()[0].to_bool())? length_line_fu_446_p2.read(): ap_const_lv32_1);
}

void findPupil::thread_length_line_fu_446_p2() {
    length_line_fu_446_p2 = (!length_line_0_i_load_reg_794.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(length_line_0_i_load_reg_794.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void findPupil::thread_longest_line_in_row_2_fu_506_p3() {
    longest_line_in_row_2_fu_506_p3 = (!and_ln55_1_fu_501_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln55_1_fu_501_p2.read()[0].to_bool())? total_longest_line_reg_819.read(): longest_line_in_row_fu_162.read());
}

void findPupil::thread_longest_line_in_row_3_fu_513_p3() {
    longest_line_in_row_3_fu_513_p3 = (!sel_tmp8_demorgan_reg_833.read()[0].is_01())? sc_lv<32>(): ((sel_tmp8_demorgan_reg_833.read()[0].to_bool())? longest_line_in_row_2_fu_506_p3.read(): longest_line_in_row_fu_162.read());
}

void findPupil::thread_longest_line_in_row_4_fu_520_p3() {
    longest_line_in_row_4_fu_520_p3 = (!and_ln50_reg_844.read()[0].is_01())? sc_lv<32>(): ((and_ln50_reg_844.read()[0].to_bool())? longest_line_in_row_fu_162.read(): longest_line_in_row_3_fu_513_p3.read());
}

void findPupil::thread_lshr_ln73_1_fu_303_p4() {
    lshr_ln73_1_fu_303_p4 = sub_ln73_fu_297_p2.read().range(31, 1);
}

void findPupil::thread_lshr_ln73_2_fu_323_p4() {
    lshr_ln73_2_fu_323_p4 = total_longest_line_0_fu_142.read().range(31, 1);
}

void findPupil::thread_or_ln50_fu_532_p2() {
    or_ln50_fu_532_p2 = (and_ln50_reg_844.read() | sel_tmp24_fu_527_p3.read());
}

void findPupil::thread_r_out_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        r_out_blk_n = r_out_full_n.read();
    } else {
        r_out_blk_n = ap_const_logic_1;
    }
}

void findPupil::thread_r_out_din() {
    r_out_din = select_ln73_reg_774.read();
}

void findPupil::thread_r_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, r_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_out_full_n.read())))) {
        r_out_write = ap_const_logic_1;
    } else {
        r_out_write = ap_const_logic_0;
    }
}

void findPupil::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void findPupil::thread_sel_tmp114_fu_645_p3() {
    sel_tmp114_fu_645_p3 = (!sel_tmp8_demorgan_reg_833.read()[0].is_01())? sc_lv<32>(): ((sel_tmp8_demorgan_reg_833.read()[0].to_bool())? select_ln55_4_fu_637_p3.read(): total_x_0_i_fu_134.read());
}

void findPupil::thread_sel_tmp24_fu_527_p3() {
    sel_tmp24_fu_527_p3 = (!sel_tmp8_demorgan_reg_833.read()[0].is_01())? sc_lv<1>(): ((sel_tmp8_demorgan_reg_833.read()[0].to_bool())? icmp_ln35_reg_807.read(): is_line_0_i_load_reg_800.read());
}

void findPupil::thread_sel_tmp2_fu_400_p2() {
    sel_tmp2_fu_400_p2 = (ap_sig_allocacmp_is_line_0_i_load.read() & xor_ln35_fu_394_p2.read());
}

void findPupil::thread_sel_tmp39_fu_424_p3() {
    sel_tmp39_fu_424_p3 = (!sel_tmp8_demorgan_fu_406_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp8_demorgan_fu_406_p2.read()[0].to_bool())? ap_const_lv32_0: ap_sig_allocacmp_gap_count_0_i_load.read());
}

void findPupil::thread_sel_tmp54_fu_551_p3() {
    sel_tmp54_fu_551_p3 = (!sel_tmp8_demorgan_reg_833.read()[0].is_01())? sc_lv<32>(): ((sel_tmp8_demorgan_reg_833.read()[0].to_bool())? select_ln55_fu_543_p3.read(): length_line_0_i_load_reg_794.read());
}

void findPupil::thread_sel_tmp84_fu_601_p3() {
    sel_tmp84_fu_601_p3 = (!sel_tmp8_demorgan_reg_833.read()[0].is_01())? sc_lv<32>(): ((sel_tmp8_demorgan_reg_833.read()[0].to_bool())? select_ln55_2_fu_593_p3.read(): total_longest_line_0_fu_142.read());
}

void findPupil::thread_sel_tmp8_demorgan_fu_406_p2() {
    sel_tmp8_demorgan_fu_406_p2 = (icmp_ln35_fu_370_p2.read() | ap_sig_allocacmp_is_line_0_i_load.read());
}

void findPupil::thread_sel_tmp99_fu_623_p3() {
    sel_tmp99_fu_623_p3 = (!sel_tmp8_demorgan_reg_833.read()[0].is_01())? sc_lv<32>(): ((sel_tmp8_demorgan_reg_833.read()[0].to_bool())? select_ln55_3_fu_615_p3.read(): y_dc_0_fu_138.read());
}

void findPupil::thread_select_ln35_fu_537_p3() {
    select_ln35_fu_537_p3 = (!icmp_ln35_reg_807.read()[0].is_01())? sc_lv<32>(): ((icmp_ln35_reg_807.read()[0].to_bool())? length_line_1_fu_451_p3.read(): total_longest_line_reg_819.read());
}

void findPupil::thread_select_ln50_1_fu_557_p3() {
    select_ln50_1_fu_557_p3 = (!and_ln50_reg_844.read()[0].is_01())? sc_lv<32>(): ((and_ln50_reg_844.read()[0].to_bool())? length_line_fu_446_p2.read(): sel_tmp54_fu_551_p3.read());
}

void findPupil::thread_select_ln50_3_fu_608_p3() {
    select_ln50_3_fu_608_p3 = (!and_ln50_reg_844.read()[0].is_01())? sc_lv<32>(): ((and_ln50_reg_844.read()[0].to_bool())? total_longest_line_0_fu_142.read(): sel_tmp84_fu_601_p3.read());
}

void findPupil::thread_select_ln50_4_fu_630_p3() {
    select_ln50_4_fu_630_p3 = (!and_ln50_reg_844.read()[0].is_01())? sc_lv<32>(): ((and_ln50_reg_844.read()[0].to_bool())? y_dc_0_fu_138.read(): sel_tmp99_fu_623_p3.read());
}

void findPupil::thread_select_ln50_5_fu_652_p3() {
    select_ln50_5_fu_652_p3 = (!and_ln50_reg_844.read()[0].is_01())? sc_lv<32>(): ((and_ln50_reg_844.read()[0].to_bool())? total_x_0_i_fu_134.read(): sel_tmp114_fu_645_p3.read());
}

void findPupil::thread_select_ln50_fu_432_p3() {
    select_ln50_fu_432_p3 = (!and_ln50_fu_418_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln50_fu_418_p2.read()[0].to_bool())? gap_count_fu_376_p2.read(): sel_tmp39_fu_424_p3.read());
}

void findPupil::thread_select_ln55_2_fu_593_p3() {
    select_ln55_2_fu_593_p3 = (!and_ln55_1_fu_501_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln55_1_fu_501_p2.read()[0].to_bool())? select_ln59_fu_474_p3.read(): total_longest_line_0_fu_142.read());
}

void findPupil::thread_select_ln55_3_fu_615_p3() {
    select_ln55_3_fu_615_p3 = (!and_ln55_1_fu_501_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln55_1_fu_501_p2.read()[0].to_bool())? select_ln59_1_fu_481_p3.read(): y_dc_0_fu_138.read());
}

void findPupil::thread_select_ln55_4_fu_637_p3() {
    select_ln55_4_fu_637_p3 = (!and_ln55_1_fu_501_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln55_1_fu_501_p2.read()[0].to_bool())? select_ln59_2_fu_488_p3.read(): total_x_0_i_fu_134.read());
}

void findPupil::thread_select_ln55_fu_543_p3() {
    select_ln55_fu_543_p3 = (!and_ln55_1_fu_501_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln55_1_fu_501_p2.read()[0].to_bool())? ap_const_lv32_0: select_ln35_fu_537_p3.read());
}

void findPupil::thread_select_ln59_1_fu_481_p3() {
    select_ln59_1_fu_481_p3 = (!icmp_ln59_fu_469_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln59_fu_469_p2.read()[0].to_bool())? zext_ln62_reg_760.read(): y_dc_0_fu_138.read());
}

void findPupil::thread_select_ln59_2_fu_488_p3() {
    select_ln59_2_fu_488_p3 = (!icmp_ln59_fu_469_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln59_fu_469_p2.read()[0].to_bool())? start_longest_lineX_fu_146.read(): total_x_0_i_fu_134.read());
}

void findPupil::thread_select_ln59_fu_474_p3() {
    select_ln59_fu_474_p3 = (!icmp_ln59_fu_469_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln59_fu_469_p2.read()[0].to_bool())? total_longest_line_reg_819.read(): total_longest_line_0_fu_142.read());
}

void findPupil::thread_select_ln73_fu_337_p3() {
    select_ln73_fu_337_p3 = (!tmp_fu_289_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_fu_289_p3.read()[0].to_bool())? sub_ln73_1_fu_317_p2.read(): zext_ln73_1_fu_333_p1.read());
}

void findPupil::thread_start_out() {
    start_out = real_start.read();
}

void findPupil::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void findPupil::thread_sub_ln73_1_fu_317_p2() {
    sub_ln73_1_fu_317_p2 = (!ap_const_lv32_0.is_01() || !zext_ln73_fu_313_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(zext_ln73_fu_313_p1.read()));
}

void findPupil::thread_sub_ln73_fu_297_p2() {
    sub_ln73_fu_297_p2 = (!ap_const_lv32_0.is_01() || !total_longest_line_0_fu_142.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(total_longest_line_0_fu_142.read()));
}

void findPupil::thread_tmp_fu_289_p3() {
    tmp_fu_289_p3 = total_longest_line_0_fu_142.read().range(31, 31);
}

void findPupil::thread_total_longest_line_fu_388_p2() {
    total_longest_line_fu_388_p2 = (!ap_sig_allocacmp_length_line_0_i_load.read().is_01() || !ap_const_lv32_FFFFFFFC.is_01())? sc_lv<32>(): (sc_biguint<32>(ap_sig_allocacmp_length_line_0_i_load.read()) + sc_bigint<32>(ap_const_lv32_FFFFFFFC));
}

void findPupil::thread_total_x_1_fu_458_p3() {
    total_x_1_fu_458_p3 = (!is_line_0_i_load_reg_800.read()[0].is_01())? sc_lv<32>(): ((is_line_0_i_load_reg_800.read()[0].to_bool())? start_longest_lineX_fu_146.read(): zext_ln61_reg_780_pp0_iter1_reg.read());
}

void findPupil::thread_total_x_2_fu_571_p3() {
    total_x_2_fu_571_p3 = (!and_ln55_1_fu_501_p2.read()[0].is_01())? sc_lv<32>(): ((and_ln55_1_fu_501_p2.read()[0].to_bool())? start_longest_lineX_fu_146.read(): total_x_fu_564_p3.read());
}

void findPupil::thread_total_x_3_fu_579_p3() {
    total_x_3_fu_579_p3 = (!sel_tmp8_demorgan_reg_833.read()[0].is_01())? sc_lv<32>(): ((sel_tmp8_demorgan_reg_833.read()[0].to_bool())? total_x_2_fu_571_p3.read(): start_longest_lineX_fu_146.read());
}

void findPupil::thread_total_x_4_fu_586_p3() {
    total_x_4_fu_586_p3 = (!and_ln50_reg_844.read()[0].is_01())? sc_lv<32>(): ((and_ln50_reg_844.read()[0].to_bool())? start_longest_lineX_fu_146.read(): total_x_3_fu_579_p3.read());
}

void findPupil::thread_total_x_fu_564_p3() {
    total_x_fu_564_p3 = (!icmp_ln35_reg_807.read()[0].is_01())? sc_lv<32>(): ((icmp_ln35_reg_807.read()[0].to_bool())? total_x_1_fu_458_p3.read(): start_longest_lineX_fu_146.read());
}

void findPupil::thread_x_fu_355_p2() {
    x_fu_355_p2 = (!startX_line_reg_212.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(startX_line_reg_212.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void findPupil::thread_x_out_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        x_out_blk_n = x_out_full_n.read();
    } else {
        x_out_blk_n = ap_const_logic_1;
    }
}

void findPupil::thread_x_out_din() {
    x_out_din = (!total_x_0_i_fu_134.read().is_01() || !select_ln73_reg_774.read().is_01())? sc_lv<32>(): (sc_biguint<32>(total_x_0_i_fu_134.read()) + sc_biguint<32>(select_ln73_reg_774.read()));
}

void findPupil::thread_x_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, r_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_out_full_n.read())))) {
        x_out_write = ap_const_logic_1;
    } else {
        x_out_write = ap_const_logic_0;
    }
}

void findPupil::thread_xor_ln35_fu_394_p2() {
    xor_ln35_fu_394_p2 = (icmp_ln35_fu_370_p2.read() ^ ap_const_lv1_1);
}

void findPupil::thread_xor_ln50_fu_412_p2() {
    xor_ln50_fu_412_p2 = (icmp_ln50_fu_382_p2.read() ^ ap_const_lv1_1);
}

void findPupil::thread_y_fu_283_p2() {
    y_fu_283_p2 = (!total_y_reg_201.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(total_y_reg_201.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void findPupil::thread_y_out_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        y_out_blk_n = y_out_full_n.read();
    } else {
        y_out_blk_n = ap_const_logic_1;
    }
}

void findPupil::thread_y_out_din() {
    y_out_din = y_dc_0_fu_138.read();
}

void findPupil::thread_y_out_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, r_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_out_full_n.read())))) {
        y_out_write = ap_const_logic_1;
    } else {
        y_out_write = ap_const_logic_0;
    }
}

void findPupil::thread_zext_ln61_fu_345_p1() {
    zext_ln61_fu_345_p1 = esl_zext<32,9>(startX_line_reg_212.read());
}

void findPupil::thread_zext_ln62_fu_273_p1() {
    zext_ln62_fu_273_p1 = esl_zext<32,9>(total_y_reg_201.read());
}

void findPupil::thread_zext_ln73_1_fu_333_p1() {
    zext_ln73_1_fu_333_p1 = esl_zext<32,31>(lshr_ln73_2_fu_323_p4.read());
}

void findPupil::thread_zext_ln73_fu_313_p1() {
    zext_ln73_fu_313_p1 = esl_zext<32,31>(lshr_ln73_1_fu_303_p4.read());
}

void findPupil::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_277_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln30_fu_349_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln30_fu_349_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, r_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, x_out_full_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, y_out_full_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

