// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _findPupil_HH_
#define _findPupil_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct findPupil : public sc_module {
    // Port declarations 25
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > img_data_stream_V_dout;
    sc_in< sc_logic > img_data_stream_V_empty_n;
    sc_out< sc_logic > img_data_stream_V_read;
    sc_out< sc_lv<8> > dst_img_data_stream_V_din;
    sc_in< sc_logic > dst_img_data_stream_V_full_n;
    sc_out< sc_logic > dst_img_data_stream_V_write;
    sc_out< sc_lv<32> > r_out_din;
    sc_in< sc_logic > r_out_full_n;
    sc_out< sc_logic > r_out_write;
    sc_out< sc_lv<32> > x_out_din;
    sc_in< sc_logic > x_out_full_n;
    sc_out< sc_logic > x_out_write;
    sc_out< sc_lv<32> > y_out_din;
    sc_in< sc_logic > y_out_full_n;
    sc_out< sc_logic > y_out_write;


    // Module declarations
    findPupil(sc_module_name name);
    SC_HAS_PROCESS(findPupil);

    ~findPupil();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > img_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln30_reg_785;
    sc_signal< sc_logic > dst_img_data_stream_V_blk_n;
    sc_signal< sc_logic > r_out_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > x_out_blk_n;
    sc_signal< sc_logic > y_out_blk_n;
    sc_signal< sc_lv<9> > startX_line_reg_212;
    sc_signal< sc_lv<32> > zext_ln62_fu_273_p1;
    sc_signal< sc_lv<32> > zext_ln62_reg_760;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln29_fu_277_p2;
    sc_signal< sc_lv<9> > y_fu_283_p2;
    sc_signal< sc_lv<9> > y_reg_769;
    sc_signal< sc_lv<32> > select_ln73_fu_337_p3;
    sc_signal< sc_lv<32> > select_ln73_reg_774;
    sc_signal< sc_lv<32> > zext_ln61_fu_345_p1;
    sc_signal< sc_lv<32> > zext_ln61_reg_780;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<32> > zext_ln61_reg_780_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln30_fu_349_p2;
    sc_signal< sc_lv<1> > icmp_ln30_reg_785_pp0_iter1_reg;
    sc_signal< sc_lv<9> > x_fu_355_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<32> > length_line_0_i_load_reg_794;
    sc_signal< sc_lv<1> > is_line_0_i_load_reg_800;
    sc_signal< sc_lv<1> > icmp_ln35_fu_370_p2;
    sc_signal< sc_lv<1> > icmp_ln35_reg_807;
    sc_signal< sc_lv<1> > icmp_ln50_fu_382_p2;
    sc_signal< sc_lv<1> > icmp_ln50_reg_814;
    sc_signal< sc_lv<32> > total_longest_line_fu_388_p2;
    sc_signal< sc_lv<32> > total_longest_line_reg_819;
    sc_signal< sc_lv<1> > sel_tmp2_fu_400_p2;
    sc_signal< sc_lv<1> > sel_tmp2_reg_828;
    sc_signal< sc_lv<1> > sel_tmp8_demorgan_fu_406_p2;
    sc_signal< sc_lv<1> > sel_tmp8_demorgan_reg_833;
    sc_signal< sc_lv<1> > and_ln50_fu_418_p2;
    sc_signal< sc_lv<1> > and_ln50_reg_844;
    sc_signal< sc_lv<32> > select_ln50_fu_432_p3;
    sc_signal< sc_lv<32> > select_ln50_reg_855;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<9> > total_y_reg_201;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > total_x_0_i_fu_134;
    sc_signal< sc_lv<32> > select_ln50_5_fu_652_p3;
    sc_signal< sc_lv<32> > y_dc_0_fu_138;
    sc_signal< sc_lv<32> > select_ln50_4_fu_630_p3;
    sc_signal< sc_lv<32> > total_longest_line_0_fu_142;
    sc_signal< sc_lv<32> > select_ln50_3_fu_608_p3;
    sc_signal< sc_lv<32> > start_longest_lineX_fu_146;
    sc_signal< sc_lv<32> > total_x_4_fu_586_p3;
    sc_signal< sc_lv<32> > length_line_0_i_fu_150;
    sc_signal< sc_lv<32> > select_ln50_1_fu_557_p3;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_length_line_0_i_load;
    sc_signal< sc_lv<32> > gap_count_0_i_fu_154;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_gap_count_0_i_load;
    sc_signal< sc_lv<1> > is_line_0_i_fu_158;
    sc_signal< sc_lv<1> > or_ln50_fu_532_p2;
    sc_signal< sc_lv<1> > ap_sig_allocacmp_is_line_0_i_load;
    sc_signal< sc_lv<32> > longest_line_in_row_fu_162;
    sc_signal< sc_lv<32> > longest_line_in_row_4_fu_520_p3;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< bool > ap_block_state7;
    sc_signal< sc_lv<32> > sub_ln73_fu_297_p2;
    sc_signal< sc_lv<31> > lshr_ln73_1_fu_303_p4;
    sc_signal< sc_lv<32> > zext_ln73_fu_313_p1;
    sc_signal< sc_lv<31> > lshr_ln73_2_fu_323_p4;
    sc_signal< sc_lv<1> > tmp_fu_289_p3;
    sc_signal< sc_lv<32> > sub_ln73_1_fu_317_p2;
    sc_signal< sc_lv<32> > zext_ln73_1_fu_333_p1;
    sc_signal< sc_lv<32> > gap_count_fu_376_p2;
    sc_signal< sc_lv<1> > xor_ln35_fu_394_p2;
    sc_signal< sc_lv<1> > xor_ln50_fu_412_p2;
    sc_signal< sc_lv<32> > sel_tmp39_fu_424_p3;
    sc_signal< sc_lv<32> > length_line_fu_446_p2;
    sc_signal< sc_lv<1> > icmp_ln59_fu_469_p2;
    sc_signal< sc_lv<1> > icmp_ln55_fu_464_p2;
    sc_signal< sc_lv<1> > and_ln55_fu_496_p2;
    sc_signal< sc_lv<1> > and_ln55_1_fu_501_p2;
    sc_signal< sc_lv<32> > longest_line_in_row_2_fu_506_p3;
    sc_signal< sc_lv<32> > longest_line_in_row_3_fu_513_p3;
    sc_signal< sc_lv<1> > sel_tmp24_fu_527_p3;
    sc_signal< sc_lv<32> > length_line_1_fu_451_p3;
    sc_signal< sc_lv<32> > select_ln35_fu_537_p3;
    sc_signal< sc_lv<32> > select_ln55_fu_543_p3;
    sc_signal< sc_lv<32> > sel_tmp54_fu_551_p3;
    sc_signal< sc_lv<32> > total_x_1_fu_458_p3;
    sc_signal< sc_lv<32> > total_x_fu_564_p3;
    sc_signal< sc_lv<32> > total_x_2_fu_571_p3;
    sc_signal< sc_lv<32> > total_x_3_fu_579_p3;
    sc_signal< sc_lv<32> > select_ln59_fu_474_p3;
    sc_signal< sc_lv<32> > select_ln55_2_fu_593_p3;
    sc_signal< sc_lv<32> > sel_tmp84_fu_601_p3;
    sc_signal< sc_lv<32> > select_ln59_1_fu_481_p3;
    sc_signal< sc_lv<32> > select_ln55_3_fu_615_p3;
    sc_signal< sc_lv<32> > sel_tmp99_fu_623_p3;
    sc_signal< sc_lv<32> > select_ln59_2_fu_488_p3;
    sc_signal< sc_lv<32> > select_ln55_4_fu_637_p3;
    sc_signal< sc_lv<32> > sel_tmp114_fu_645_p3;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_pp0_stage0;
    static const sc_lv<5> ap_ST_fsm_state6;
    static const sc_lv<5> ap_ST_fsm_state7;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<9> ap_const_lv9_118;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<9> ap_const_lv9_140;
    static const sc_lv<8> ap_const_lv8_47;
    static const sc_lv<32> ap_const_lv32_FFFFFFFC;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_and_ln50_fu_418_p2();
    void thread_and_ln55_1_fu_501_p2();
    void thread_and_ln55_fu_496_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state7();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_sig_allocacmp_gap_count_0_i_load();
    void thread_ap_sig_allocacmp_is_line_0_i_load();
    void thread_ap_sig_allocacmp_length_line_0_i_load();
    void thread_dst_img_data_stream_V_blk_n();
    void thread_dst_img_data_stream_V_din();
    void thread_dst_img_data_stream_V_write();
    void thread_gap_count_fu_376_p2();
    void thread_icmp_ln29_fu_277_p2();
    void thread_icmp_ln30_fu_349_p2();
    void thread_icmp_ln35_fu_370_p2();
    void thread_icmp_ln50_fu_382_p2();
    void thread_icmp_ln55_fu_464_p2();
    void thread_icmp_ln59_fu_469_p2();
    void thread_img_data_stream_V_blk_n();
    void thread_img_data_stream_V_read();
    void thread_internal_ap_ready();
    void thread_length_line_1_fu_451_p3();
    void thread_length_line_fu_446_p2();
    void thread_longest_line_in_row_2_fu_506_p3();
    void thread_longest_line_in_row_3_fu_513_p3();
    void thread_longest_line_in_row_4_fu_520_p3();
    void thread_lshr_ln73_1_fu_303_p4();
    void thread_lshr_ln73_2_fu_323_p4();
    void thread_or_ln50_fu_532_p2();
    void thread_r_out_blk_n();
    void thread_r_out_din();
    void thread_r_out_write();
    void thread_real_start();
    void thread_sel_tmp114_fu_645_p3();
    void thread_sel_tmp24_fu_527_p3();
    void thread_sel_tmp2_fu_400_p2();
    void thread_sel_tmp39_fu_424_p3();
    void thread_sel_tmp54_fu_551_p3();
    void thread_sel_tmp84_fu_601_p3();
    void thread_sel_tmp8_demorgan_fu_406_p2();
    void thread_sel_tmp99_fu_623_p3();
    void thread_select_ln35_fu_537_p3();
    void thread_select_ln50_1_fu_557_p3();
    void thread_select_ln50_3_fu_608_p3();
    void thread_select_ln50_4_fu_630_p3();
    void thread_select_ln50_5_fu_652_p3();
    void thread_select_ln50_fu_432_p3();
    void thread_select_ln55_2_fu_593_p3();
    void thread_select_ln55_3_fu_615_p3();
    void thread_select_ln55_4_fu_637_p3();
    void thread_select_ln55_fu_543_p3();
    void thread_select_ln59_1_fu_481_p3();
    void thread_select_ln59_2_fu_488_p3();
    void thread_select_ln59_fu_474_p3();
    void thread_select_ln73_fu_337_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_sub_ln73_1_fu_317_p2();
    void thread_sub_ln73_fu_297_p2();
    void thread_tmp_fu_289_p3();
    void thread_total_longest_line_fu_388_p2();
    void thread_total_x_1_fu_458_p3();
    void thread_total_x_2_fu_571_p3();
    void thread_total_x_3_fu_579_p3();
    void thread_total_x_4_fu_586_p3();
    void thread_total_x_fu_564_p3();
    void thread_x_fu_355_p2();
    void thread_x_out_blk_n();
    void thread_x_out_din();
    void thread_x_out_write();
    void thread_xor_ln35_fu_394_p2();
    void thread_xor_ln50_fu_412_p2();
    void thread_y_fu_283_p2();
    void thread_y_out_blk_n();
    void thread_y_out_din();
    void thread_y_out_write();
    void thread_zext_ln61_fu_345_p1();
    void thread_zext_ln62_fu_273_p1();
    void thread_zext_ln73_1_fu_333_p1();
    void thread_zext_ln73_fu_313_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
