// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "method1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic method1::ap_const_logic_1 = sc_dt::Log_1;
const sc_lv<32> method1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<4> method1::ap_const_lv4_0 = "0000";
const sc_lv<1> method1::ap_const_lv1_0 = "0";
const sc_logic method1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> method1::ap_const_lv8_0 = "00000000";
const sc_lv<2> method1::ap_const_lv2_0 = "00";
const sc_lv<2> method1::ap_const_lv2_1 = "1";
const bool method1::ap_const_boolean_1 = true;

method1::method1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    imageIn_U = new method1_imageIn("imageIn_U");
    imageIn_U->clk(ap_clk);
    imageIn_U->reset(ap_rst);
    imageIn_U->i_address0(Mat2Array_U0_fb_address0);
    imageIn_U->i_ce0(Mat2Array_U0_fb_ce0);
    imageIn_U->i_we0(Mat2Array_U0_fb_we0);
    imageIn_U->i_d0(Mat2Array_U0_fb_d0);
    imageIn_U->i_q0(imageIn_i_q0);
    imageIn_U->t_address0(core_low_U0_image_in_address0);
    imageIn_U->t_ce0(core_low_U0_image_in_ce0);
    imageIn_U->t_we0(ap_var_for_const0);
    imageIn_U->t_d0(ap_var_for_const1);
    imageIn_U->t_q0(imageIn_t_q0);
    imageIn_U->i_ce(ap_var_for_const2);
    imageIn_U->t_ce(ap_var_for_const2);
    imageIn_U->i_full_n(imageIn_i_full_n);
    imageIn_U->i_write(Mat2Array_U0_ap_done);
    imageIn_U->t_empty_n(imageIn_t_empty_n);
    imageIn_U->t_read(core_low_U0_ap_ready);
    imageOut_U = new method1_imageOut("imageOut_U");
    imageOut_U->clk(ap_clk);
    imageOut_U->reset(ap_rst);
    imageOut_U->i_address0(core_low_U0_image_out_address0);
    imageOut_U->i_ce0(core_low_U0_image_out_ce0);
    imageOut_U->i_we0(core_low_U0_image_out_we0);
    imageOut_U->i_d0(core_low_U0_image_out_d0);
    imageOut_U->i_q0(imageOut_i_q0);
    imageOut_U->t_address0(Array2Mat_U0_fb_address0);
    imageOut_U->t_ce0(Array2Mat_U0_fb_ce0);
    imageOut_U->t_we0(ap_var_for_const0);
    imageOut_U->t_d0(ap_var_for_const1);
    imageOut_U->t_q0(imageOut_t_q0);
    imageOut_U->i_ce(ap_var_for_const2);
    imageOut_U->t_ce(ap_var_for_const2);
    imageOut_U->i_full_n(imageOut_i_full_n);
    imageOut_U->i_write(core_low_U0_ap_done);
    imageOut_U->t_empty_n(imageOut_t_empty_n);
    imageOut_U->t_read(Array2Mat_U0_ap_ready);
    method1_Block_proc_U0 = new method1_Block_proc("method1_Block_proc_U0");
    method1_Block_proc_U0->ap_clk(ap_clk);
    method1_Block_proc_U0->ap_rst(ap_rst);
    method1_Block_proc_U0->ap_start(method1_Block_proc_U0_ap_start);
    method1_Block_proc_U0->ap_done(method1_Block_proc_U0_ap_done);
    method1_Block_proc_U0->ap_continue(method1_Block_proc_U0_ap_continue);
    method1_Block_proc_U0->ap_idle(method1_Block_proc_U0_ap_idle);
    method1_Block_proc_U0->ap_ready(method1_Block_proc_U0_ap_ready);
    method1_Block_proc_U0->img0_rows_V_out_din(method1_Block_proc_U0_img0_rows_V_out_din);
    method1_Block_proc_U0->img0_rows_V_out_full_n(img0_rows_V_c_full_n);
    method1_Block_proc_U0->img0_rows_V_out_write(method1_Block_proc_U0_img0_rows_V_out_write);
    method1_Block_proc_U0->img0_cols_V_out_din(method1_Block_proc_U0_img0_cols_V_out_din);
    method1_Block_proc_U0->img0_cols_V_out_full_n(img0_cols_V_c_full_n);
    method1_Block_proc_U0->img0_cols_V_out_write(method1_Block_proc_U0_img0_cols_V_out_write);
    method1_Block_proc_U0->img4_rows_V_out_din(method1_Block_proc_U0_img4_rows_V_out_din);
    method1_Block_proc_U0->img4_rows_V_out_full_n(img4_rows_V_c_full_n);
    method1_Block_proc_U0->img4_rows_V_out_write(method1_Block_proc_U0_img4_rows_V_out_write);
    method1_Block_proc_U0->img4_cols_V_out_din(method1_Block_proc_U0_img4_cols_V_out_din);
    method1_Block_proc_U0->img4_cols_V_out_full_n(img4_cols_V_c_full_n);
    method1_Block_proc_U0->img4_cols_V_out_write(method1_Block_proc_U0_img4_cols_V_out_write);
    AXIvideo2Mat_U0 = new AXIvideo2Mat("AXIvideo2Mat_U0");
    AXIvideo2Mat_U0->ap_clk(ap_clk);
    AXIvideo2Mat_U0->ap_rst(ap_rst);
    AXIvideo2Mat_U0->ap_start(AXIvideo2Mat_U0_ap_start);
    AXIvideo2Mat_U0->start_full_n(start_for_CvtColor_U0_full_n);
    AXIvideo2Mat_U0->ap_done(AXIvideo2Mat_U0_ap_done);
    AXIvideo2Mat_U0->ap_continue(AXIvideo2Mat_U0_ap_continue);
    AXIvideo2Mat_U0->ap_idle(AXIvideo2Mat_U0_ap_idle);
    AXIvideo2Mat_U0->ap_ready(AXIvideo2Mat_U0_ap_ready);
    AXIvideo2Mat_U0->start_out(AXIvideo2Mat_U0_start_out);
    AXIvideo2Mat_U0->start_write(AXIvideo2Mat_U0_start_write);
    AXIvideo2Mat_U0->inputStream_TDATA(inputStream_TDATA);
    AXIvideo2Mat_U0->inputStream_TVALID(inputStream_TVALID);
    AXIvideo2Mat_U0->inputStream_TREADY(AXIvideo2Mat_U0_inputStream_TREADY);
    AXIvideo2Mat_U0->inputStream_TKEEP(inputStream_TKEEP);
    AXIvideo2Mat_U0->inputStream_TSTRB(inputStream_TSTRB);
    AXIvideo2Mat_U0->inputStream_TUSER(inputStream_TUSER);
    AXIvideo2Mat_U0->inputStream_TLAST(inputStream_TLAST);
    AXIvideo2Mat_U0->inputStream_TID(inputStream_TID);
    AXIvideo2Mat_U0->inputStream_TDEST(inputStream_TDEST);
    AXIvideo2Mat_U0->img_rows_V_dout(img0_rows_V_c_dout);
    AXIvideo2Mat_U0->img_rows_V_empty_n(img0_rows_V_c_empty_n);
    AXIvideo2Mat_U0->img_rows_V_read(AXIvideo2Mat_U0_img_rows_V_read);
    AXIvideo2Mat_U0->img_cols_V_dout(img0_cols_V_c_dout);
    AXIvideo2Mat_U0->img_cols_V_empty_n(img0_cols_V_c_empty_n);
    AXIvideo2Mat_U0->img_cols_V_read(AXIvideo2Mat_U0_img_cols_V_read);
    AXIvideo2Mat_U0->img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din);
    AXIvideo2Mat_U0->img_data_stream_0_V_full_n(img0_data_stream_0_s_full_n);
    AXIvideo2Mat_U0->img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write);
    AXIvideo2Mat_U0->img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din);
    AXIvideo2Mat_U0->img_data_stream_1_V_full_n(img0_data_stream_1_s_full_n);
    AXIvideo2Mat_U0->img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write);
    AXIvideo2Mat_U0->img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din);
    AXIvideo2Mat_U0->img_data_stream_2_V_full_n(img0_data_stream_2_s_full_n);
    AXIvideo2Mat_U0->img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write);
    AXIvideo2Mat_U0->img_rows_V_out_din(AXIvideo2Mat_U0_img_rows_V_out_din);
    AXIvideo2Mat_U0->img_rows_V_out_full_n(img0_rows_V_c16_full_n);
    AXIvideo2Mat_U0->img_rows_V_out_write(AXIvideo2Mat_U0_img_rows_V_out_write);
    AXIvideo2Mat_U0->img_cols_V_out_din(AXIvideo2Mat_U0_img_cols_V_out_din);
    AXIvideo2Mat_U0->img_cols_V_out_full_n(img0_cols_V_c17_full_n);
    AXIvideo2Mat_U0->img_cols_V_out_write(AXIvideo2Mat_U0_img_cols_V_out_write);
    CvtColor_U0 = new CvtColor("CvtColor_U0");
    CvtColor_U0->ap_clk(ap_clk);
    CvtColor_U0->ap_rst(ap_rst);
    CvtColor_U0->ap_start(CvtColor_U0_ap_start);
    CvtColor_U0->start_full_n(start_for_findPupil_U0_full_n);
    CvtColor_U0->ap_done(CvtColor_U0_ap_done);
    CvtColor_U0->ap_continue(CvtColor_U0_ap_continue);
    CvtColor_U0->ap_idle(CvtColor_U0_ap_idle);
    CvtColor_U0->ap_ready(CvtColor_U0_ap_ready);
    CvtColor_U0->start_out(CvtColor_U0_start_out);
    CvtColor_U0->start_write(CvtColor_U0_start_write);
    CvtColor_U0->p_src_rows_V_dout(img0_rows_V_c16_dout);
    CvtColor_U0->p_src_rows_V_empty_n(img0_rows_V_c16_empty_n);
    CvtColor_U0->p_src_rows_V_read(CvtColor_U0_p_src_rows_V_read);
    CvtColor_U0->p_src_cols_V_dout(img0_cols_V_c17_dout);
    CvtColor_U0->p_src_cols_V_empty_n(img0_cols_V_c17_empty_n);
    CvtColor_U0->p_src_cols_V_read(CvtColor_U0_p_src_cols_V_read);
    CvtColor_U0->p_src_data_stream_0_V_dout(img0_data_stream_0_s_dout);
    CvtColor_U0->p_src_data_stream_0_V_empty_n(img0_data_stream_0_s_empty_n);
    CvtColor_U0->p_src_data_stream_0_V_read(CvtColor_U0_p_src_data_stream_0_V_read);
    CvtColor_U0->p_src_data_stream_1_V_dout(img0_data_stream_1_s_dout);
    CvtColor_U0->p_src_data_stream_1_V_empty_n(img0_data_stream_1_s_empty_n);
    CvtColor_U0->p_src_data_stream_1_V_read(CvtColor_U0_p_src_data_stream_1_V_read);
    CvtColor_U0->p_src_data_stream_2_V_dout(img0_data_stream_2_s_dout);
    CvtColor_U0->p_src_data_stream_2_V_empty_n(img0_data_stream_2_s_empty_n);
    CvtColor_U0->p_src_data_stream_2_V_read(CvtColor_U0_p_src_data_stream_2_V_read);
    CvtColor_U0->p_dst_data_stream_V_din(CvtColor_U0_p_dst_data_stream_V_din);
    CvtColor_U0->p_dst_data_stream_V_full_n(img1_data_stream_0_s_full_n);
    CvtColor_U0->p_dst_data_stream_V_write(CvtColor_U0_p_dst_data_stream_V_write);
    findPupil_U0 = new findPupil("findPupil_U0");
    findPupil_U0->ap_clk(ap_clk);
    findPupil_U0->ap_rst(ap_rst);
    findPupil_U0->ap_start(findPupil_U0_ap_start);
    findPupil_U0->start_full_n(start_for_find_iris_high_accur_U0_full_n);
    findPupil_U0->ap_done(findPupil_U0_ap_done);
    findPupil_U0->ap_continue(findPupil_U0_ap_continue);
    findPupil_U0->ap_idle(findPupil_U0_ap_idle);
    findPupil_U0->ap_ready(findPupil_U0_ap_ready);
    findPupil_U0->start_out(findPupil_U0_start_out);
    findPupil_U0->start_write(findPupil_U0_start_write);
    findPupil_U0->img_data_stream_V_dout(img1_data_stream_0_s_dout);
    findPupil_U0->img_data_stream_V_empty_n(img1_data_stream_0_s_empty_n);
    findPupil_U0->img_data_stream_V_read(findPupil_U0_img_data_stream_V_read);
    findPupil_U0->dst_img_data_stream_V_din(findPupil_U0_dst_img_data_stream_V_din);
    findPupil_U0->dst_img_data_stream_V_full_n(img2_data_stream_0_s_full_n);
    findPupil_U0->dst_img_data_stream_V_write(findPupil_U0_dst_img_data_stream_V_write);
    findPupil_U0->r_out_din(findPupil_U0_r_out_din);
    findPupil_U0->r_out_full_n(r1_c_full_n);
    findPupil_U0->r_out_write(findPupil_U0_r_out_write);
    findPupil_U0->x_out_din(findPupil_U0_x_out_din);
    findPupil_U0->x_out_full_n(x_c_full_n);
    findPupil_U0->x_out_write(findPupil_U0_x_out_write);
    findPupil_U0->y_out_din(findPupil_U0_y_out_din);
    findPupil_U0->y_out_full_n(y_c_full_n);
    findPupil_U0->y_out_write(findPupil_U0_y_out_write);
    find_iris_high_accur_U0 = new find_iris_high_accur("find_iris_high_accur_U0");
    find_iris_high_accur_U0->ap_clk(ap_clk);
    find_iris_high_accur_U0->ap_rst(ap_rst);
    find_iris_high_accur_U0->ap_start(find_iris_high_accur_U0_ap_start);
    find_iris_high_accur_U0->start_full_n(start_for_Mat2Array_U0_full_n);
    find_iris_high_accur_U0->ap_done(find_iris_high_accur_U0_ap_done);
    find_iris_high_accur_U0->ap_continue(find_iris_high_accur_U0_ap_continue);
    find_iris_high_accur_U0->ap_idle(find_iris_high_accur_U0_ap_idle);
    find_iris_high_accur_U0->ap_ready(find_iris_high_accur_U0_ap_ready);
    find_iris_high_accur_U0->start_out(find_iris_high_accur_U0_start_out);
    find_iris_high_accur_U0->start_write(find_iris_high_accur_U0_start_write);
    find_iris_high_accur_U0->img_data_stream_V_dout(img2_data_stream_0_s_dout);
    find_iris_high_accur_U0->img_data_stream_V_empty_n(img2_data_stream_0_s_empty_n);
    find_iris_high_accur_U0->img_data_stream_V_read(find_iris_high_accur_U0_img_data_stream_V_read);
    find_iris_high_accur_U0->x_dout(x_c_dout);
    find_iris_high_accur_U0->x_empty_n(x_c_empty_n);
    find_iris_high_accur_U0->x_read(find_iris_high_accur_U0_x_read);
    find_iris_high_accur_U0->y_dout(y_c_dout);
    find_iris_high_accur_U0->y_empty_n(y_c_empty_n);
    find_iris_high_accur_U0->y_read(find_iris_high_accur_U0_y_read);
    find_iris_high_accur_U0->dst_img_data_stream_V_din(find_iris_high_accur_U0_dst_img_data_stream_V_din);
    find_iris_high_accur_U0->dst_img_data_stream_V_full_n(img3_data_stream_0_s_full_n);
    find_iris_high_accur_U0->dst_img_data_stream_V_write(find_iris_high_accur_U0_dst_img_data_stream_V_write);
    find_iris_high_accur_U0->x_out_din(find_iris_high_accur_U0_x_out_din);
    find_iris_high_accur_U0->x_out_full_n(x_c18_full_n);
    find_iris_high_accur_U0->x_out_write(find_iris_high_accur_U0_x_out_write);
    find_iris_high_accur_U0->y_out_din(find_iris_high_accur_U0_y_out_din);
    find_iris_high_accur_U0->y_out_full_n(y_c19_full_n);
    find_iris_high_accur_U0->y_out_write(find_iris_high_accur_U0_y_out_write);
    find_iris_high_accur_U0->ap_return(find_iris_high_accur_U0_ap_return);
    Mat2Array_U0 = new Mat2Array("Mat2Array_U0");
    Mat2Array_U0->ap_clk(ap_clk);
    Mat2Array_U0->ap_rst(ap_rst);
    Mat2Array_U0->ap_start(Mat2Array_U0_ap_start);
    Mat2Array_U0->ap_done(Mat2Array_U0_ap_done);
    Mat2Array_U0->ap_continue(Mat2Array_U0_ap_continue);
    Mat2Array_U0->ap_idle(Mat2Array_U0_ap_idle);
    Mat2Array_U0->ap_ready(Mat2Array_U0_ap_ready);
    Mat2Array_U0->img_data_stream_V_dout(img3_data_stream_0_s_dout);
    Mat2Array_U0->img_data_stream_V_empty_n(img3_data_stream_0_s_empty_n);
    Mat2Array_U0->img_data_stream_V_read(Mat2Array_U0_img_data_stream_V_read);
    Mat2Array_U0->fb_address0(Mat2Array_U0_fb_address0);
    Mat2Array_U0->fb_ce0(Mat2Array_U0_fb_ce0);
    Mat2Array_U0->fb_we0(Mat2Array_U0_fb_we0);
    Mat2Array_U0->fb_d0(Mat2Array_U0_fb_d0);
    writeValues_U0 = new writeValues("writeValues_U0");
    writeValues_U0->ap_clk(ap_clk);
    writeValues_U0->ap_rst(ap_rst);
    writeValues_U0->ap_start(writeValues_U0_ap_start);
    writeValues_U0->ap_done(writeValues_U0_ap_done);
    writeValues_U0->ap_continue(writeValues_U0_ap_continue);
    writeValues_U0->ap_idle(writeValues_U0_ap_idle);
    writeValues_U0->ap_ready(writeValues_U0_ap_ready);
    writeValues_U0->x_dout(x_c18_dout);
    writeValues_U0->x_empty_n(x_c18_empty_n);
    writeValues_U0->x_read(writeValues_U0_x_read);
    writeValues_U0->y_dout(y_c19_dout);
    writeValues_U0->y_empty_n(y_c19_empty_n);
    writeValues_U0->y_read(writeValues_U0_y_read);
    writeValues_U0->r1_dout(r1_c_dout);
    writeValues_U0->r1_empty_n(r1_c_empty_n);
    writeValues_U0->r1_read(writeValues_U0_r1_read);
    writeValues_U0->r2(r2_dout);
    writeValues_U0->ap_return_0(writeValues_U0_ap_return_0);
    writeValues_U0->ap_return_1(writeValues_U0_ap_return_1);
    writeValues_U0->ap_return_2(writeValues_U0_ap_return_2);
    writeValues_U0->ap_return_3(writeValues_U0_ap_return_3);
    core_low_U0 = new core_low("core_low_U0");
    core_low_U0->ap_clk(ap_clk);
    core_low_U0->ap_rst(ap_rst);
    core_low_U0->ap_start(core_low_U0_ap_start);
    core_low_U0->ap_done(core_low_U0_ap_done);
    core_low_U0->ap_continue(core_low_U0_ap_continue);
    core_low_U0->ap_idle(core_low_U0_ap_idle);
    core_low_U0->ap_ready(core_low_U0_ap_ready);
    core_low_U0->image_in_address0(core_low_U0_image_in_address0);
    core_low_U0->image_in_ce0(core_low_U0_image_in_ce0);
    core_low_U0->image_in_q0(imageIn_t_q0);
    core_low_U0->image_out_address0(core_low_U0_image_out_address0);
    core_low_U0->image_out_ce0(core_low_U0_image_out_ce0);
    core_low_U0->image_out_we0(core_low_U0_image_out_we0);
    core_low_U0->image_out_d0(core_low_U0_image_out_d0);
    core_low_U0->p_read(val_0_channel_dout);
    core_low_U0->p_read1(val_1_channel_dout);
    core_low_U0->p_read2(val_2_channel_dout);
    core_low_U0->p_read3(val_3_channel_dout);
    Array2Mat_U0 = new Array2Mat("Array2Mat_U0");
    Array2Mat_U0->ap_clk(ap_clk);
    Array2Mat_U0->ap_rst(ap_rst);
    Array2Mat_U0->ap_start(Array2Mat_U0_ap_start);
    Array2Mat_U0->start_full_n(start_for_CvtColor_1_U0_full_n);
    Array2Mat_U0->ap_done(Array2Mat_U0_ap_done);
    Array2Mat_U0->ap_continue(Array2Mat_U0_ap_continue);
    Array2Mat_U0->ap_idle(Array2Mat_U0_ap_idle);
    Array2Mat_U0->ap_ready(Array2Mat_U0_ap_ready);
    Array2Mat_U0->start_out(Array2Mat_U0_start_out);
    Array2Mat_U0->start_write(Array2Mat_U0_start_write);
    Array2Mat_U0->fb_address0(Array2Mat_U0_fb_address0);
    Array2Mat_U0->fb_ce0(Array2Mat_U0_fb_ce0);
    Array2Mat_U0->fb_q0(imageOut_t_q0);
    Array2Mat_U0->img_rows_V_dout(img4_rows_V_c_dout);
    Array2Mat_U0->img_rows_V_empty_n(img4_rows_V_c_empty_n);
    Array2Mat_U0->img_rows_V_read(Array2Mat_U0_img_rows_V_read);
    Array2Mat_U0->img_cols_V_dout(img4_cols_V_c_dout);
    Array2Mat_U0->img_cols_V_empty_n(img4_cols_V_c_empty_n);
    Array2Mat_U0->img_cols_V_read(Array2Mat_U0_img_cols_V_read);
    Array2Mat_U0->img_data_stream_V_din(Array2Mat_U0_img_data_stream_V_din);
    Array2Mat_U0->img_data_stream_V_full_n(img4_data_stream_0_s_full_n);
    Array2Mat_U0->img_data_stream_V_write(Array2Mat_U0_img_data_stream_V_write);
    Array2Mat_U0->img_rows_V_out_din(Array2Mat_U0_img_rows_V_out_din);
    Array2Mat_U0->img_rows_V_out_full_n(img4_rows_V_c20_full_n);
    Array2Mat_U0->img_rows_V_out_write(Array2Mat_U0_img_rows_V_out_write);
    Array2Mat_U0->img_cols_V_out_din(Array2Mat_U0_img_cols_V_out_din);
    Array2Mat_U0->img_cols_V_out_full_n(img4_cols_V_c21_full_n);
    Array2Mat_U0->img_cols_V_out_write(Array2Mat_U0_img_cols_V_out_write);
    CvtColor_1_U0 = new CvtColor_1("CvtColor_1_U0");
    CvtColor_1_U0->ap_clk(ap_clk);
    CvtColor_1_U0->ap_rst(ap_rst);
    CvtColor_1_U0->ap_start(CvtColor_1_U0_ap_start);
    CvtColor_1_U0->start_full_n(start_for_Mat2AXIvideo_U0_full_n);
    CvtColor_1_U0->ap_done(CvtColor_1_U0_ap_done);
    CvtColor_1_U0->ap_continue(CvtColor_1_U0_ap_continue);
    CvtColor_1_U0->ap_idle(CvtColor_1_U0_ap_idle);
    CvtColor_1_U0->ap_ready(CvtColor_1_U0_ap_ready);
    CvtColor_1_U0->start_out(CvtColor_1_U0_start_out);
    CvtColor_1_U0->start_write(CvtColor_1_U0_start_write);
    CvtColor_1_U0->p_src_rows_V_dout(img4_rows_V_c20_dout);
    CvtColor_1_U0->p_src_rows_V_empty_n(img4_rows_V_c20_empty_n);
    CvtColor_1_U0->p_src_rows_V_read(CvtColor_1_U0_p_src_rows_V_read);
    CvtColor_1_U0->p_src_cols_V_dout(img4_cols_V_c21_dout);
    CvtColor_1_U0->p_src_cols_V_empty_n(img4_cols_V_c21_empty_n);
    CvtColor_1_U0->p_src_cols_V_read(CvtColor_1_U0_p_src_cols_V_read);
    CvtColor_1_U0->p_src_data_stream_V_dout(img4_data_stream_0_s_dout);
    CvtColor_1_U0->p_src_data_stream_V_empty_n(img4_data_stream_0_s_empty_n);
    CvtColor_1_U0->p_src_data_stream_V_read(CvtColor_1_U0_p_src_data_stream_V_read);
    CvtColor_1_U0->p_dst_data_stream_0_V_din(CvtColor_1_U0_p_dst_data_stream_0_V_din);
    CvtColor_1_U0->p_dst_data_stream_0_V_full_n(img5_data_stream_0_s_full_n);
    CvtColor_1_U0->p_dst_data_stream_0_V_write(CvtColor_1_U0_p_dst_data_stream_0_V_write);
    CvtColor_1_U0->p_dst_data_stream_1_V_din(CvtColor_1_U0_p_dst_data_stream_1_V_din);
    CvtColor_1_U0->p_dst_data_stream_1_V_full_n(img5_data_stream_1_s_full_n);
    CvtColor_1_U0->p_dst_data_stream_1_V_write(CvtColor_1_U0_p_dst_data_stream_1_V_write);
    CvtColor_1_U0->p_dst_data_stream_2_V_din(CvtColor_1_U0_p_dst_data_stream_2_V_din);
    CvtColor_1_U0->p_dst_data_stream_2_V_full_n(img5_data_stream_2_s_full_n);
    CvtColor_1_U0->p_dst_data_stream_2_V_write(CvtColor_1_U0_p_dst_data_stream_2_V_write);
    Mat2AXIvideo_U0 = new Mat2AXIvideo("Mat2AXIvideo_U0");
    Mat2AXIvideo_U0->ap_clk(ap_clk);
    Mat2AXIvideo_U0->ap_rst(ap_rst);
    Mat2AXIvideo_U0->ap_start(Mat2AXIvideo_U0_ap_start);
    Mat2AXIvideo_U0->ap_done(Mat2AXIvideo_U0_ap_done);
    Mat2AXIvideo_U0->ap_continue(Mat2AXIvideo_U0_ap_continue);
    Mat2AXIvideo_U0->ap_idle(Mat2AXIvideo_U0_ap_idle);
    Mat2AXIvideo_U0->ap_ready(Mat2AXIvideo_U0_ap_ready);
    Mat2AXIvideo_U0->img_data_stream_0_V_dout(img5_data_stream_0_s_dout);
    Mat2AXIvideo_U0->img_data_stream_0_V_empty_n(img5_data_stream_0_s_empty_n);
    Mat2AXIvideo_U0->img_data_stream_0_V_read(Mat2AXIvideo_U0_img_data_stream_0_V_read);
    Mat2AXIvideo_U0->img_data_stream_1_V_dout(img5_data_stream_1_s_dout);
    Mat2AXIvideo_U0->img_data_stream_1_V_empty_n(img5_data_stream_1_s_empty_n);
    Mat2AXIvideo_U0->img_data_stream_1_V_read(Mat2AXIvideo_U0_img_data_stream_1_V_read);
    Mat2AXIvideo_U0->img_data_stream_2_V_dout(img5_data_stream_2_s_dout);
    Mat2AXIvideo_U0->img_data_stream_2_V_empty_n(img5_data_stream_2_s_empty_n);
    Mat2AXIvideo_U0->img_data_stream_2_V_read(Mat2AXIvideo_U0_img_data_stream_2_V_read);
    Mat2AXIvideo_U0->outputStream_TDATA(Mat2AXIvideo_U0_outputStream_TDATA);
    Mat2AXIvideo_U0->outputStream_TVALID(Mat2AXIvideo_U0_outputStream_TVALID);
    Mat2AXIvideo_U0->outputStream_TREADY(outputStream_TREADY);
    Mat2AXIvideo_U0->outputStream_TKEEP(Mat2AXIvideo_U0_outputStream_TKEEP);
    Mat2AXIvideo_U0->outputStream_TSTRB(Mat2AXIvideo_U0_outputStream_TSTRB);
    Mat2AXIvideo_U0->outputStream_TUSER(Mat2AXIvideo_U0_outputStream_TUSER);
    Mat2AXIvideo_U0->outputStream_TLAST(Mat2AXIvideo_U0_outputStream_TLAST);
    Mat2AXIvideo_U0->outputStream_TID(Mat2AXIvideo_U0_outputStream_TID);
    Mat2AXIvideo_U0->outputStream_TDEST(Mat2AXIvideo_U0_outputStream_TDEST);
    img0_rows_V_c_U = new fifo_w10_d2_A("img0_rows_V_c_U");
    img0_rows_V_c_U->clk(ap_clk);
    img0_rows_V_c_U->reset(ap_rst);
    img0_rows_V_c_U->if_read_ce(ap_var_for_const2);
    img0_rows_V_c_U->if_write_ce(ap_var_for_const2);
    img0_rows_V_c_U->if_din(method1_Block_proc_U0_img0_rows_V_out_din);
    img0_rows_V_c_U->if_full_n(img0_rows_V_c_full_n);
    img0_rows_V_c_U->if_write(method1_Block_proc_U0_img0_rows_V_out_write);
    img0_rows_V_c_U->if_dout(img0_rows_V_c_dout);
    img0_rows_V_c_U->if_empty_n(img0_rows_V_c_empty_n);
    img0_rows_V_c_U->if_read(AXIvideo2Mat_U0_img_rows_V_read);
    img0_cols_V_c_U = new fifo_w10_d2_A("img0_cols_V_c_U");
    img0_cols_V_c_U->clk(ap_clk);
    img0_cols_V_c_U->reset(ap_rst);
    img0_cols_V_c_U->if_read_ce(ap_var_for_const2);
    img0_cols_V_c_U->if_write_ce(ap_var_for_const2);
    img0_cols_V_c_U->if_din(method1_Block_proc_U0_img0_cols_V_out_din);
    img0_cols_V_c_U->if_full_n(img0_cols_V_c_full_n);
    img0_cols_V_c_U->if_write(method1_Block_proc_U0_img0_cols_V_out_write);
    img0_cols_V_c_U->if_dout(img0_cols_V_c_dout);
    img0_cols_V_c_U->if_empty_n(img0_cols_V_c_empty_n);
    img0_cols_V_c_U->if_read(AXIvideo2Mat_U0_img_cols_V_read);
    img4_rows_V_c_U = new fifo_w8_d8_A("img4_rows_V_c_U");
    img4_rows_V_c_U->clk(ap_clk);
    img4_rows_V_c_U->reset(ap_rst);
    img4_rows_V_c_U->if_read_ce(ap_var_for_const2);
    img4_rows_V_c_U->if_write_ce(ap_var_for_const2);
    img4_rows_V_c_U->if_din(method1_Block_proc_U0_img4_rows_V_out_din);
    img4_rows_V_c_U->if_full_n(img4_rows_V_c_full_n);
    img4_rows_V_c_U->if_write(method1_Block_proc_U0_img4_rows_V_out_write);
    img4_rows_V_c_U->if_dout(img4_rows_V_c_dout);
    img4_rows_V_c_U->if_empty_n(img4_rows_V_c_empty_n);
    img4_rows_V_c_U->if_read(Array2Mat_U0_img_rows_V_read);
    img4_cols_V_c_U = new fifo_w10_d8_A("img4_cols_V_c_U");
    img4_cols_V_c_U->clk(ap_clk);
    img4_cols_V_c_U->reset(ap_rst);
    img4_cols_V_c_U->if_read_ce(ap_var_for_const2);
    img4_cols_V_c_U->if_write_ce(ap_var_for_const2);
    img4_cols_V_c_U->if_din(method1_Block_proc_U0_img4_cols_V_out_din);
    img4_cols_V_c_U->if_full_n(img4_cols_V_c_full_n);
    img4_cols_V_c_U->if_write(method1_Block_proc_U0_img4_cols_V_out_write);
    img4_cols_V_c_U->if_dout(img4_cols_V_c_dout);
    img4_cols_V_c_U->if_empty_n(img4_cols_V_c_empty_n);
    img4_cols_V_c_U->if_read(Array2Mat_U0_img_cols_V_read);
    img0_data_stream_0_s_U = new fifo_w8_d2_A("img0_data_stream_0_s_U");
    img0_data_stream_0_s_U->clk(ap_clk);
    img0_data_stream_0_s_U->reset(ap_rst);
    img0_data_stream_0_s_U->if_read_ce(ap_var_for_const2);
    img0_data_stream_0_s_U->if_write_ce(ap_var_for_const2);
    img0_data_stream_0_s_U->if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din);
    img0_data_stream_0_s_U->if_full_n(img0_data_stream_0_s_full_n);
    img0_data_stream_0_s_U->if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write);
    img0_data_stream_0_s_U->if_dout(img0_data_stream_0_s_dout);
    img0_data_stream_0_s_U->if_empty_n(img0_data_stream_0_s_empty_n);
    img0_data_stream_0_s_U->if_read(CvtColor_U0_p_src_data_stream_0_V_read);
    img0_data_stream_1_s_U = new fifo_w8_d2_A("img0_data_stream_1_s_U");
    img0_data_stream_1_s_U->clk(ap_clk);
    img0_data_stream_1_s_U->reset(ap_rst);
    img0_data_stream_1_s_U->if_read_ce(ap_var_for_const2);
    img0_data_stream_1_s_U->if_write_ce(ap_var_for_const2);
    img0_data_stream_1_s_U->if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din);
    img0_data_stream_1_s_U->if_full_n(img0_data_stream_1_s_full_n);
    img0_data_stream_1_s_U->if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write);
    img0_data_stream_1_s_U->if_dout(img0_data_stream_1_s_dout);
    img0_data_stream_1_s_U->if_empty_n(img0_data_stream_1_s_empty_n);
    img0_data_stream_1_s_U->if_read(CvtColor_U0_p_src_data_stream_1_V_read);
    img0_data_stream_2_s_U = new fifo_w8_d2_A("img0_data_stream_2_s_U");
    img0_data_stream_2_s_U->clk(ap_clk);
    img0_data_stream_2_s_U->reset(ap_rst);
    img0_data_stream_2_s_U->if_read_ce(ap_var_for_const2);
    img0_data_stream_2_s_U->if_write_ce(ap_var_for_const2);
    img0_data_stream_2_s_U->if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din);
    img0_data_stream_2_s_U->if_full_n(img0_data_stream_2_s_full_n);
    img0_data_stream_2_s_U->if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write);
    img0_data_stream_2_s_U->if_dout(img0_data_stream_2_s_dout);
    img0_data_stream_2_s_U->if_empty_n(img0_data_stream_2_s_empty_n);
    img0_data_stream_2_s_U->if_read(CvtColor_U0_p_src_data_stream_2_V_read);
    img0_rows_V_c16_U = new fifo_w10_d2_A("img0_rows_V_c16_U");
    img0_rows_V_c16_U->clk(ap_clk);
    img0_rows_V_c16_U->reset(ap_rst);
    img0_rows_V_c16_U->if_read_ce(ap_var_for_const2);
    img0_rows_V_c16_U->if_write_ce(ap_var_for_const2);
    img0_rows_V_c16_U->if_din(AXIvideo2Mat_U0_img_rows_V_out_din);
    img0_rows_V_c16_U->if_full_n(img0_rows_V_c16_full_n);
    img0_rows_V_c16_U->if_write(AXIvideo2Mat_U0_img_rows_V_out_write);
    img0_rows_V_c16_U->if_dout(img0_rows_V_c16_dout);
    img0_rows_V_c16_U->if_empty_n(img0_rows_V_c16_empty_n);
    img0_rows_V_c16_U->if_read(CvtColor_U0_p_src_rows_V_read);
    img0_cols_V_c17_U = new fifo_w10_d2_A("img0_cols_V_c17_U");
    img0_cols_V_c17_U->clk(ap_clk);
    img0_cols_V_c17_U->reset(ap_rst);
    img0_cols_V_c17_U->if_read_ce(ap_var_for_const2);
    img0_cols_V_c17_U->if_write_ce(ap_var_for_const2);
    img0_cols_V_c17_U->if_din(AXIvideo2Mat_U0_img_cols_V_out_din);
    img0_cols_V_c17_U->if_full_n(img0_cols_V_c17_full_n);
    img0_cols_V_c17_U->if_write(AXIvideo2Mat_U0_img_cols_V_out_write);
    img0_cols_V_c17_U->if_dout(img0_cols_V_c17_dout);
    img0_cols_V_c17_U->if_empty_n(img0_cols_V_c17_empty_n);
    img0_cols_V_c17_U->if_read(CvtColor_U0_p_src_cols_V_read);
    img1_data_stream_0_s_U = new fifo_w8_d2_A("img1_data_stream_0_s_U");
    img1_data_stream_0_s_U->clk(ap_clk);
    img1_data_stream_0_s_U->reset(ap_rst);
    img1_data_stream_0_s_U->if_read_ce(ap_var_for_const2);
    img1_data_stream_0_s_U->if_write_ce(ap_var_for_const2);
    img1_data_stream_0_s_U->if_din(CvtColor_U0_p_dst_data_stream_V_din);
    img1_data_stream_0_s_U->if_full_n(img1_data_stream_0_s_full_n);
    img1_data_stream_0_s_U->if_write(CvtColor_U0_p_dst_data_stream_V_write);
    img1_data_stream_0_s_U->if_dout(img1_data_stream_0_s_dout);
    img1_data_stream_0_s_U->if_empty_n(img1_data_stream_0_s_empty_n);
    img1_data_stream_0_s_U->if_read(findPupil_U0_img_data_stream_V_read);
    img2_data_stream_0_s_U = new fifo_w8_d2_A("img2_data_stream_0_s_U");
    img2_data_stream_0_s_U->clk(ap_clk);
    img2_data_stream_0_s_U->reset(ap_rst);
    img2_data_stream_0_s_U->if_read_ce(ap_var_for_const2);
    img2_data_stream_0_s_U->if_write_ce(ap_var_for_const2);
    img2_data_stream_0_s_U->if_din(findPupil_U0_dst_img_data_stream_V_din);
    img2_data_stream_0_s_U->if_full_n(img2_data_stream_0_s_full_n);
    img2_data_stream_0_s_U->if_write(findPupil_U0_dst_img_data_stream_V_write);
    img2_data_stream_0_s_U->if_dout(img2_data_stream_0_s_dout);
    img2_data_stream_0_s_U->if_empty_n(img2_data_stream_0_s_empty_n);
    img2_data_stream_0_s_U->if_read(find_iris_high_accur_U0_img_data_stream_V_read);
    r1_c_U = new fifo_w32_d3_A("r1_c_U");
    r1_c_U->clk(ap_clk);
    r1_c_U->reset(ap_rst);
    r1_c_U->if_read_ce(ap_var_for_const2);
    r1_c_U->if_write_ce(ap_var_for_const2);
    r1_c_U->if_din(findPupil_U0_r_out_din);
    r1_c_U->if_full_n(r1_c_full_n);
    r1_c_U->if_write(findPupil_U0_r_out_write);
    r1_c_U->if_dout(r1_c_dout);
    r1_c_U->if_empty_n(r1_c_empty_n);
    r1_c_U->if_read(writeValues_U0_r1_read);
    x_c_U = new fifo_w32_d2_A("x_c_U");
    x_c_U->clk(ap_clk);
    x_c_U->reset(ap_rst);
    x_c_U->if_read_ce(ap_var_for_const2);
    x_c_U->if_write_ce(ap_var_for_const2);
    x_c_U->if_din(findPupil_U0_x_out_din);
    x_c_U->if_full_n(x_c_full_n);
    x_c_U->if_write(findPupil_U0_x_out_write);
    x_c_U->if_dout(x_c_dout);
    x_c_U->if_empty_n(x_c_empty_n);
    x_c_U->if_read(find_iris_high_accur_U0_x_read);
    y_c_U = new fifo_w32_d2_A("y_c_U");
    y_c_U->clk(ap_clk);
    y_c_U->reset(ap_rst);
    y_c_U->if_read_ce(ap_var_for_const2);
    y_c_U->if_write_ce(ap_var_for_const2);
    y_c_U->if_din(findPupil_U0_y_out_din);
    y_c_U->if_full_n(y_c_full_n);
    y_c_U->if_write(findPupil_U0_y_out_write);
    y_c_U->if_dout(y_c_dout);
    y_c_U->if_empty_n(y_c_empty_n);
    y_c_U->if_read(find_iris_high_accur_U0_y_read);
    img3_data_stream_0_s_U = new fifo_w8_d2_A("img3_data_stream_0_s_U");
    img3_data_stream_0_s_U->clk(ap_clk);
    img3_data_stream_0_s_U->reset(ap_rst);
    img3_data_stream_0_s_U->if_read_ce(ap_var_for_const2);
    img3_data_stream_0_s_U->if_write_ce(ap_var_for_const2);
    img3_data_stream_0_s_U->if_din(find_iris_high_accur_U0_dst_img_data_stream_V_din);
    img3_data_stream_0_s_U->if_full_n(img3_data_stream_0_s_full_n);
    img3_data_stream_0_s_U->if_write(find_iris_high_accur_U0_dst_img_data_stream_V_write);
    img3_data_stream_0_s_U->if_dout(img3_data_stream_0_s_dout);
    img3_data_stream_0_s_U->if_empty_n(img3_data_stream_0_s_empty_n);
    img3_data_stream_0_s_U->if_read(Mat2Array_U0_img_data_stream_V_read);
    x_c18_U = new fifo_w32_d2_A("x_c18_U");
    x_c18_U->clk(ap_clk);
    x_c18_U->reset(ap_rst);
    x_c18_U->if_read_ce(ap_var_for_const2);
    x_c18_U->if_write_ce(ap_var_for_const2);
    x_c18_U->if_din(find_iris_high_accur_U0_x_out_din);
    x_c18_U->if_full_n(x_c18_full_n);
    x_c18_U->if_write(find_iris_high_accur_U0_x_out_write);
    x_c18_U->if_dout(x_c18_dout);
    x_c18_U->if_empty_n(x_c18_empty_n);
    x_c18_U->if_read(writeValues_U0_x_read);
    y_c19_U = new fifo_w32_d2_A("y_c19_U");
    y_c19_U->clk(ap_clk);
    y_c19_U->reset(ap_rst);
    y_c19_U->if_read_ce(ap_var_for_const2);
    y_c19_U->if_write_ce(ap_var_for_const2);
    y_c19_U->if_din(find_iris_high_accur_U0_y_out_din);
    y_c19_U->if_full_n(y_c19_full_n);
    y_c19_U->if_write(find_iris_high_accur_U0_y_out_write);
    y_c19_U->if_dout(y_c19_dout);
    y_c19_U->if_empty_n(y_c19_empty_n);
    y_c19_U->if_read(writeValues_U0_y_read);
    r2_U = new fifo_w32_d2_A("r2_U");
    r2_U->clk(ap_clk);
    r2_U->reset(ap_rst);
    r2_U->if_read_ce(ap_var_for_const2);
    r2_U->if_write_ce(ap_var_for_const2);
    r2_U->if_din(find_iris_high_accur_U0_ap_return);
    r2_U->if_full_n(r2_full_n);
    r2_U->if_write(find_iris_high_accur_U0_ap_done);
    r2_U->if_dout(r2_dout);
    r2_U->if_empty_n(r2_empty_n);
    r2_U->if_read(writeValues_U0_ap_ready);
    val_0_channel_U = new fifo_w32_d2_A("val_0_channel_U");
    val_0_channel_U->clk(ap_clk);
    val_0_channel_U->reset(ap_rst);
    val_0_channel_U->if_read_ce(ap_var_for_const2);
    val_0_channel_U->if_write_ce(ap_var_for_const2);
    val_0_channel_U->if_din(writeValues_U0_ap_return_0);
    val_0_channel_U->if_full_n(val_0_channel_full_n);
    val_0_channel_U->if_write(ap_channel_done_val_0_channel);
    val_0_channel_U->if_dout(val_0_channel_dout);
    val_0_channel_U->if_empty_n(val_0_channel_empty_n);
    val_0_channel_U->if_read(core_low_U0_ap_ready);
    val_1_channel_U = new fifo_w32_d2_A("val_1_channel_U");
    val_1_channel_U->clk(ap_clk);
    val_1_channel_U->reset(ap_rst);
    val_1_channel_U->if_read_ce(ap_var_for_const2);
    val_1_channel_U->if_write_ce(ap_var_for_const2);
    val_1_channel_U->if_din(writeValues_U0_ap_return_1);
    val_1_channel_U->if_full_n(val_1_channel_full_n);
    val_1_channel_U->if_write(ap_channel_done_val_1_channel);
    val_1_channel_U->if_dout(val_1_channel_dout);
    val_1_channel_U->if_empty_n(val_1_channel_empty_n);
    val_1_channel_U->if_read(core_low_U0_ap_ready);
    val_2_channel_U = new fifo_w32_d2_A("val_2_channel_U");
    val_2_channel_U->clk(ap_clk);
    val_2_channel_U->reset(ap_rst);
    val_2_channel_U->if_read_ce(ap_var_for_const2);
    val_2_channel_U->if_write_ce(ap_var_for_const2);
    val_2_channel_U->if_din(writeValues_U0_ap_return_2);
    val_2_channel_U->if_full_n(val_2_channel_full_n);
    val_2_channel_U->if_write(ap_channel_done_val_2_channel);
    val_2_channel_U->if_dout(val_2_channel_dout);
    val_2_channel_U->if_empty_n(val_2_channel_empty_n);
    val_2_channel_U->if_read(core_low_U0_ap_ready);
    val_3_channel_U = new fifo_w32_d2_A("val_3_channel_U");
    val_3_channel_U->clk(ap_clk);
    val_3_channel_U->reset(ap_rst);
    val_3_channel_U->if_read_ce(ap_var_for_const2);
    val_3_channel_U->if_write_ce(ap_var_for_const2);
    val_3_channel_U->if_din(writeValues_U0_ap_return_3);
    val_3_channel_U->if_full_n(val_3_channel_full_n);
    val_3_channel_U->if_write(ap_channel_done_val_3_channel);
    val_3_channel_U->if_dout(val_3_channel_dout);
    val_3_channel_U->if_empty_n(val_3_channel_empty_n);
    val_3_channel_U->if_read(core_low_U0_ap_ready);
    img4_data_stream_0_s_U = new fifo_w8_d2_A("img4_data_stream_0_s_U");
    img4_data_stream_0_s_U->clk(ap_clk);
    img4_data_stream_0_s_U->reset(ap_rst);
    img4_data_stream_0_s_U->if_read_ce(ap_var_for_const2);
    img4_data_stream_0_s_U->if_write_ce(ap_var_for_const2);
    img4_data_stream_0_s_U->if_din(Array2Mat_U0_img_data_stream_V_din);
    img4_data_stream_0_s_U->if_full_n(img4_data_stream_0_s_full_n);
    img4_data_stream_0_s_U->if_write(Array2Mat_U0_img_data_stream_V_write);
    img4_data_stream_0_s_U->if_dout(img4_data_stream_0_s_dout);
    img4_data_stream_0_s_U->if_empty_n(img4_data_stream_0_s_empty_n);
    img4_data_stream_0_s_U->if_read(CvtColor_1_U0_p_src_data_stream_V_read);
    img4_rows_V_c20_U = new fifo_w8_d2_A("img4_rows_V_c20_U");
    img4_rows_V_c20_U->clk(ap_clk);
    img4_rows_V_c20_U->reset(ap_rst);
    img4_rows_V_c20_U->if_read_ce(ap_var_for_const2);
    img4_rows_V_c20_U->if_write_ce(ap_var_for_const2);
    img4_rows_V_c20_U->if_din(Array2Mat_U0_img_rows_V_out_din);
    img4_rows_V_c20_U->if_full_n(img4_rows_V_c20_full_n);
    img4_rows_V_c20_U->if_write(Array2Mat_U0_img_rows_V_out_write);
    img4_rows_V_c20_U->if_dout(img4_rows_V_c20_dout);
    img4_rows_V_c20_U->if_empty_n(img4_rows_V_c20_empty_n);
    img4_rows_V_c20_U->if_read(CvtColor_1_U0_p_src_rows_V_read);
    img4_cols_V_c21_U = new fifo_w10_d2_A("img4_cols_V_c21_U");
    img4_cols_V_c21_U->clk(ap_clk);
    img4_cols_V_c21_U->reset(ap_rst);
    img4_cols_V_c21_U->if_read_ce(ap_var_for_const2);
    img4_cols_V_c21_U->if_write_ce(ap_var_for_const2);
    img4_cols_V_c21_U->if_din(Array2Mat_U0_img_cols_V_out_din);
    img4_cols_V_c21_U->if_full_n(img4_cols_V_c21_full_n);
    img4_cols_V_c21_U->if_write(Array2Mat_U0_img_cols_V_out_write);
    img4_cols_V_c21_U->if_dout(img4_cols_V_c21_dout);
    img4_cols_V_c21_U->if_empty_n(img4_cols_V_c21_empty_n);
    img4_cols_V_c21_U->if_read(CvtColor_1_U0_p_src_cols_V_read);
    img5_data_stream_0_s_U = new fifo_w8_d2_A("img5_data_stream_0_s_U");
    img5_data_stream_0_s_U->clk(ap_clk);
    img5_data_stream_0_s_U->reset(ap_rst);
    img5_data_stream_0_s_U->if_read_ce(ap_var_for_const2);
    img5_data_stream_0_s_U->if_write_ce(ap_var_for_const2);
    img5_data_stream_0_s_U->if_din(CvtColor_1_U0_p_dst_data_stream_0_V_din);
    img5_data_stream_0_s_U->if_full_n(img5_data_stream_0_s_full_n);
    img5_data_stream_0_s_U->if_write(CvtColor_1_U0_p_dst_data_stream_0_V_write);
    img5_data_stream_0_s_U->if_dout(img5_data_stream_0_s_dout);
    img5_data_stream_0_s_U->if_empty_n(img5_data_stream_0_s_empty_n);
    img5_data_stream_0_s_U->if_read(Mat2AXIvideo_U0_img_data_stream_0_V_read);
    img5_data_stream_1_s_U = new fifo_w8_d2_A("img5_data_stream_1_s_U");
    img5_data_stream_1_s_U->clk(ap_clk);
    img5_data_stream_1_s_U->reset(ap_rst);
    img5_data_stream_1_s_U->if_read_ce(ap_var_for_const2);
    img5_data_stream_1_s_U->if_write_ce(ap_var_for_const2);
    img5_data_stream_1_s_U->if_din(CvtColor_1_U0_p_dst_data_stream_1_V_din);
    img5_data_stream_1_s_U->if_full_n(img5_data_stream_1_s_full_n);
    img5_data_stream_1_s_U->if_write(CvtColor_1_U0_p_dst_data_stream_1_V_write);
    img5_data_stream_1_s_U->if_dout(img5_data_stream_1_s_dout);
    img5_data_stream_1_s_U->if_empty_n(img5_data_stream_1_s_empty_n);
    img5_data_stream_1_s_U->if_read(Mat2AXIvideo_U0_img_data_stream_1_V_read);
    img5_data_stream_2_s_U = new fifo_w8_d2_A("img5_data_stream_2_s_U");
    img5_data_stream_2_s_U->clk(ap_clk);
    img5_data_stream_2_s_U->reset(ap_rst);
    img5_data_stream_2_s_U->if_read_ce(ap_var_for_const2);
    img5_data_stream_2_s_U->if_write_ce(ap_var_for_const2);
    img5_data_stream_2_s_U->if_din(CvtColor_1_U0_p_dst_data_stream_2_V_din);
    img5_data_stream_2_s_U->if_full_n(img5_data_stream_2_s_full_n);
    img5_data_stream_2_s_U->if_write(CvtColor_1_U0_p_dst_data_stream_2_V_write);
    img5_data_stream_2_s_U->if_dout(img5_data_stream_2_s_dout);
    img5_data_stream_2_s_U->if_empty_n(img5_data_stream_2_s_empty_n);
    img5_data_stream_2_s_U->if_read(Mat2AXIvideo_U0_img_data_stream_2_V_read);
    start_for_CvtColoudo_U = new start_for_CvtColoudo("start_for_CvtColoudo_U");
    start_for_CvtColoudo_U->clk(ap_clk);
    start_for_CvtColoudo_U->reset(ap_rst);
    start_for_CvtColoudo_U->if_read_ce(ap_var_for_const2);
    start_for_CvtColoudo_U->if_write_ce(ap_var_for_const2);
    start_for_CvtColoudo_U->if_din(start_for_CvtColor_U0_din);
    start_for_CvtColoudo_U->if_full_n(start_for_CvtColor_U0_full_n);
    start_for_CvtColoudo_U->if_write(AXIvideo2Mat_U0_start_write);
    start_for_CvtColoudo_U->if_dout(start_for_CvtColor_U0_dout);
    start_for_CvtColoudo_U->if_empty_n(start_for_CvtColor_U0_empty_n);
    start_for_CvtColoudo_U->if_read(CvtColor_U0_ap_ready);
    start_for_findPupvdy_U = new start_for_findPupvdy("start_for_findPupvdy_U");
    start_for_findPupvdy_U->clk(ap_clk);
    start_for_findPupvdy_U->reset(ap_rst);
    start_for_findPupvdy_U->if_read_ce(ap_var_for_const2);
    start_for_findPupvdy_U->if_write_ce(ap_var_for_const2);
    start_for_findPupvdy_U->if_din(start_for_findPupil_U0_din);
    start_for_findPupvdy_U->if_full_n(start_for_findPupil_U0_full_n);
    start_for_findPupvdy_U->if_write(CvtColor_U0_start_write);
    start_for_findPupvdy_U->if_dout(start_for_findPupil_U0_dout);
    start_for_findPupvdy_U->if_empty_n(start_for_findPupil_U0_empty_n);
    start_for_findPupvdy_U->if_read(findPupil_U0_ap_ready);
    start_for_find_irwdI_U = new start_for_find_irwdI("start_for_find_irwdI_U");
    start_for_find_irwdI_U->clk(ap_clk);
    start_for_find_irwdI_U->reset(ap_rst);
    start_for_find_irwdI_U->if_read_ce(ap_var_for_const2);
    start_for_find_irwdI_U->if_write_ce(ap_var_for_const2);
    start_for_find_irwdI_U->if_din(start_for_find_iris_high_accur_U0_din);
    start_for_find_irwdI_U->if_full_n(start_for_find_iris_high_accur_U0_full_n);
    start_for_find_irwdI_U->if_write(findPupil_U0_start_write);
    start_for_find_irwdI_U->if_dout(start_for_find_iris_high_accur_U0_dout);
    start_for_find_irwdI_U->if_empty_n(start_for_find_iris_high_accur_U0_empty_n);
    start_for_find_irwdI_U->if_read(find_iris_high_accur_U0_ap_ready);
    start_for_Mat2ArrxdS_U = new start_for_Mat2ArrxdS("start_for_Mat2ArrxdS_U");
    start_for_Mat2ArrxdS_U->clk(ap_clk);
    start_for_Mat2ArrxdS_U->reset(ap_rst);
    start_for_Mat2ArrxdS_U->if_read_ce(ap_var_for_const2);
    start_for_Mat2ArrxdS_U->if_write_ce(ap_var_for_const2);
    start_for_Mat2ArrxdS_U->if_din(start_for_Mat2Array_U0_din);
    start_for_Mat2ArrxdS_U->if_full_n(start_for_Mat2Array_U0_full_n);
    start_for_Mat2ArrxdS_U->if_write(find_iris_high_accur_U0_start_write);
    start_for_Mat2ArrxdS_U->if_dout(start_for_Mat2Array_U0_dout);
    start_for_Mat2ArrxdS_U->if_empty_n(start_for_Mat2Array_U0_empty_n);
    start_for_Mat2ArrxdS_U->if_read(Mat2Array_U0_ap_ready);
    start_for_CvtColoyd2_U = new start_for_CvtColoyd2("start_for_CvtColoyd2_U");
    start_for_CvtColoyd2_U->clk(ap_clk);
    start_for_CvtColoyd2_U->reset(ap_rst);
    start_for_CvtColoyd2_U->if_read_ce(ap_var_for_const2);
    start_for_CvtColoyd2_U->if_write_ce(ap_var_for_const2);
    start_for_CvtColoyd2_U->if_din(start_for_CvtColor_1_U0_din);
    start_for_CvtColoyd2_U->if_full_n(start_for_CvtColor_1_U0_full_n);
    start_for_CvtColoyd2_U->if_write(Array2Mat_U0_start_write);
    start_for_CvtColoyd2_U->if_dout(start_for_CvtColor_1_U0_dout);
    start_for_CvtColoyd2_U->if_empty_n(start_for_CvtColor_1_U0_empty_n);
    start_for_CvtColoyd2_U->if_read(CvtColor_1_U0_ap_ready);
    start_for_Mat2AXIzec_U = new start_for_Mat2AXIzec("start_for_Mat2AXIzec_U");
    start_for_Mat2AXIzec_U->clk(ap_clk);
    start_for_Mat2AXIzec_U->reset(ap_rst);
    start_for_Mat2AXIzec_U->if_read_ce(ap_var_for_const2);
    start_for_Mat2AXIzec_U->if_write_ce(ap_var_for_const2);
    start_for_Mat2AXIzec_U->if_din(start_for_Mat2AXIvideo_U0_din);
    start_for_Mat2AXIzec_U->if_full_n(start_for_Mat2AXIvideo_U0_full_n);
    start_for_Mat2AXIzec_U->if_write(CvtColor_1_U0_start_write);
    start_for_Mat2AXIzec_U->if_dout(start_for_Mat2AXIvideo_U0_dout);
    start_for_Mat2AXIzec_U->if_empty_n(start_for_Mat2AXIvideo_U0_empty_n);
    start_for_Mat2AXIzec_U->if_read(Mat2AXIvideo_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_continue);

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_Array2Mat_U0_ap_continue);

    SC_METHOD(thread_Array2Mat_U0_ap_start);
    sensitive << ( imageOut_t_empty_n );

    SC_METHOD(thread_CvtColor_1_U0_ap_continue);

    SC_METHOD(thread_CvtColor_1_U0_ap_start);
    sensitive << ( start_for_CvtColor_1_U0_empty_n );

    SC_METHOD(thread_CvtColor_U0_ap_continue);

    SC_METHOD(thread_CvtColor_U0_ap_start);
    sensitive << ( start_for_CvtColor_U0_empty_n );

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_Mat2AXIvideo_U0_ap_start);
    sensitive << ( start_for_Mat2AXIvideo_U0_empty_n );

    SC_METHOD(thread_Mat2AXIvideo_U0_start_full_n);

    SC_METHOD(thread_Mat2AXIvideo_U0_start_write);

    SC_METHOD(thread_Mat2Array_U0_ap_continue);
    sensitive << ( imageIn_i_full_n );

    SC_METHOD(thread_Mat2Array_U0_ap_start);
    sensitive << ( start_for_Mat2Array_U0_empty_n );

    SC_METHOD(thread_Mat2Array_U0_fb_full_n);
    sensitive << ( imageIn_i_full_n );

    SC_METHOD(thread_Mat2Array_U0_start_full_n);

    SC_METHOD(thread_Mat2Array_U0_start_write);

    SC_METHOD(thread_ap_channel_done_imageIn);
    sensitive << ( Mat2Array_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_imageOut);
    sensitive << ( core_low_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_r2);
    sensitive << ( find_iris_high_accur_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_val_0_channel);
    sensitive << ( writeValues_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_val_0_channel );

    SC_METHOD(thread_ap_channel_done_val_1_channel);
    sensitive << ( writeValues_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_val_1_channel );

    SC_METHOD(thread_ap_channel_done_val_2_channel);
    sensitive << ( writeValues_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_val_2_channel );

    SC_METHOD(thread_ap_channel_done_val_3_channel);
    sensitive << ( writeValues_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_val_3_channel );

    SC_METHOD(thread_ap_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( method1_Block_proc_U0_ap_idle );
    sensitive << ( AXIvideo2Mat_U0_ap_idle );
    sensitive << ( CvtColor_U0_ap_idle );
    sensitive << ( findPupil_U0_ap_idle );
    sensitive << ( find_iris_high_accur_U0_ap_idle );
    sensitive << ( Mat2Array_U0_ap_idle );
    sensitive << ( writeValues_U0_ap_idle );
    sensitive << ( core_low_U0_ap_idle );
    sensitive << ( Array2Mat_U0_ap_idle );
    sensitive << ( CvtColor_1_U0_ap_idle );
    sensitive << ( Mat2AXIvideo_U0_ap_idle );
    sensitive << ( imageIn_t_empty_n );
    sensitive << ( imageOut_t_empty_n );
    sensitive << ( r2_empty_n );
    sensitive << ( val_0_channel_empty_n );
    sensitive << ( val_1_channel_empty_n );
    sensitive << ( val_2_channel_empty_n );
    sensitive << ( val_3_channel_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sync_ready );

    SC_METHOD(thread_ap_sync_AXIvideo2Mat_U0_ap_ready);
    sensitive << ( AXIvideo2Mat_U0_ap_ready );
    sensitive << ( ap_sync_reg_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_ap_sync_channel_write_val_0_channel);
    sensitive << ( ap_channel_done_val_0_channel );
    sensitive << ( val_0_channel_full_n );
    sensitive << ( ap_sync_reg_channel_write_val_0_channel );

    SC_METHOD(thread_ap_sync_channel_write_val_1_channel);
    sensitive << ( ap_channel_done_val_1_channel );
    sensitive << ( val_1_channel_full_n );
    sensitive << ( ap_sync_reg_channel_write_val_1_channel );

    SC_METHOD(thread_ap_sync_channel_write_val_2_channel);
    sensitive << ( ap_channel_done_val_2_channel );
    sensitive << ( val_2_channel_full_n );
    sensitive << ( ap_sync_reg_channel_write_val_2_channel );

    SC_METHOD(thread_ap_sync_channel_write_val_3_channel);
    sensitive << ( ap_channel_done_val_3_channel );
    sensitive << ( val_3_channel_full_n );
    sensitive << ( ap_sync_reg_channel_write_val_3_channel );

    SC_METHOD(thread_ap_sync_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( Mat2AXIvideo_U0_ap_done );

    SC_METHOD(thread_ap_sync_method1_Block_proc_U0_ap_ready);
    sensitive << ( method1_Block_proc_U0_ap_ready );
    sensitive << ( ap_sync_reg_method1_Block_proc_U0_ap_ready );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_method1_Block_proc_U0_ap_ready );
    sensitive << ( ap_sync_AXIvideo2Mat_U0_ap_ready );

    SC_METHOD(thread_core_low_U0_ap_continue);
    sensitive << ( imageOut_i_full_n );

    SC_METHOD(thread_core_low_U0_ap_start);
    sensitive << ( imageIn_t_empty_n );
    sensitive << ( val_0_channel_empty_n );
    sensitive << ( val_1_channel_empty_n );
    sensitive << ( val_2_channel_empty_n );
    sensitive << ( val_3_channel_empty_n );

    SC_METHOD(thread_core_low_U0_image_out_full_n);
    sensitive << ( imageOut_i_full_n );

    SC_METHOD(thread_core_low_U0_start_full_n);

    SC_METHOD(thread_core_low_U0_start_write);

    SC_METHOD(thread_findPupil_U0_ap_continue);

    SC_METHOD(thread_findPupil_U0_ap_start);
    sensitive << ( start_for_findPupil_U0_empty_n );

    SC_METHOD(thread_find_iris_high_accur_U0_ap_continue);
    sensitive << ( r2_full_n );

    SC_METHOD(thread_find_iris_high_accur_U0_ap_start);
    sensitive << ( start_for_find_iris_high_accur_U0_empty_n );

    SC_METHOD(thread_inputStream_TREADY);
    sensitive << ( AXIvideo2Mat_U0_inputStream_TREADY );

    SC_METHOD(thread_method1_Block_proc_U0_ap_continue);

    SC_METHOD(thread_method1_Block_proc_U0_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_sync_reg_method1_Block_proc_U0_ap_ready );

    SC_METHOD(thread_method1_Block_proc_U0_start_full_n);

    SC_METHOD(thread_method1_Block_proc_U0_start_write);

    SC_METHOD(thread_outputStream_TDATA);
    sensitive << ( Mat2AXIvideo_U0_outputStream_TDATA );

    SC_METHOD(thread_outputStream_TDEST);
    sensitive << ( Mat2AXIvideo_U0_outputStream_TDEST );

    SC_METHOD(thread_outputStream_TID);
    sensitive << ( Mat2AXIvideo_U0_outputStream_TID );

    SC_METHOD(thread_outputStream_TKEEP);
    sensitive << ( Mat2AXIvideo_U0_outputStream_TKEEP );

    SC_METHOD(thread_outputStream_TLAST);
    sensitive << ( Mat2AXIvideo_U0_outputStream_TLAST );

    SC_METHOD(thread_outputStream_TSTRB);
    sensitive << ( Mat2AXIvideo_U0_outputStream_TSTRB );

    SC_METHOD(thread_outputStream_TUSER);
    sensitive << ( Mat2AXIvideo_U0_outputStream_TUSER );

    SC_METHOD(thread_outputStream_TVALID);
    sensitive << ( Mat2AXIvideo_U0_outputStream_TVALID );

    SC_METHOD(thread_start_for_CvtColor_1_U0_din);

    SC_METHOD(thread_start_for_CvtColor_U0_din);

    SC_METHOD(thread_start_for_Mat2AXIvideo_U0_din);

    SC_METHOD(thread_start_for_Mat2Array_U0_din);

    SC_METHOD(thread_start_for_findPupil_U0_din);

    SC_METHOD(thread_start_for_find_iris_high_accur_U0_din);

    SC_METHOD(thread_writeValues_U0_ap_continue);
    sensitive << ( ap_sync_channel_write_val_3_channel );
    sensitive << ( ap_sync_channel_write_val_2_channel );
    sensitive << ( ap_sync_channel_write_val_1_channel );
    sensitive << ( ap_sync_channel_write_val_0_channel );

    SC_METHOD(thread_writeValues_U0_ap_start);
    sensitive << ( r2_empty_n );

    SC_METHOD(thread_writeValues_U0_start_full_n);

    SC_METHOD(thread_writeValues_U0_start_write);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_sync_reg_channel_write_val_3_channel = SC_LOGIC_0;
    ap_sync_reg_channel_write_val_2_channel = SC_LOGIC_0;
    ap_sync_reg_channel_write_val_1_channel = SC_LOGIC_0;
    ap_sync_reg_channel_write_val_0_channel = SC_LOGIC_0;
    ap_sync_reg_method1_Block_proc_U0_ap_ready = SC_LOGIC_0;
    method1_Block_proc_U0_ap_ready_count = "00";
    ap_sync_reg_AXIvideo2Mat_U0_ap_ready = SC_LOGIC_0;
    AXIvideo2Mat_U0_ap_ready_count = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "method1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, inputStream_TDATA, "(port)inputStream_TDATA");
    sc_trace(mVcdFile, inputStream_TKEEP, "(port)inputStream_TKEEP");
    sc_trace(mVcdFile, inputStream_TSTRB, "(port)inputStream_TSTRB");
    sc_trace(mVcdFile, inputStream_TUSER, "(port)inputStream_TUSER");
    sc_trace(mVcdFile, inputStream_TLAST, "(port)inputStream_TLAST");
    sc_trace(mVcdFile, inputStream_TID, "(port)inputStream_TID");
    sc_trace(mVcdFile, inputStream_TDEST, "(port)inputStream_TDEST");
    sc_trace(mVcdFile, outputStream_TDATA, "(port)outputStream_TDATA");
    sc_trace(mVcdFile, outputStream_TKEEP, "(port)outputStream_TKEEP");
    sc_trace(mVcdFile, outputStream_TSTRB, "(port)outputStream_TSTRB");
    sc_trace(mVcdFile, outputStream_TUSER, "(port)outputStream_TUSER");
    sc_trace(mVcdFile, outputStream_TLAST, "(port)outputStream_TLAST");
    sc_trace(mVcdFile, outputStream_TID, "(port)outputStream_TID");
    sc_trace(mVcdFile, outputStream_TDEST, "(port)outputStream_TDEST");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, inputStream_TVALID, "(port)inputStream_TVALID");
    sc_trace(mVcdFile, inputStream_TREADY, "(port)inputStream_TREADY");
    sc_trace(mVcdFile, outputStream_TVALID, "(port)outputStream_TVALID");
    sc_trace(mVcdFile, outputStream_TREADY, "(port)outputStream_TREADY");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, imageIn_i_q0, "imageIn_i_q0");
    sc_trace(mVcdFile, imageIn_t_q0, "imageIn_t_q0");
    sc_trace(mVcdFile, imageOut_i_q0, "imageOut_i_q0");
    sc_trace(mVcdFile, imageOut_t_q0, "imageOut_t_q0");
    sc_trace(mVcdFile, method1_Block_proc_U0_ap_start, "method1_Block_proc_U0_ap_start");
    sc_trace(mVcdFile, method1_Block_proc_U0_ap_done, "method1_Block_proc_U0_ap_done");
    sc_trace(mVcdFile, method1_Block_proc_U0_ap_continue, "method1_Block_proc_U0_ap_continue");
    sc_trace(mVcdFile, method1_Block_proc_U0_ap_idle, "method1_Block_proc_U0_ap_idle");
    sc_trace(mVcdFile, method1_Block_proc_U0_ap_ready, "method1_Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, method1_Block_proc_U0_img0_rows_V_out_din, "method1_Block_proc_U0_img0_rows_V_out_din");
    sc_trace(mVcdFile, method1_Block_proc_U0_img0_rows_V_out_write, "method1_Block_proc_U0_img0_rows_V_out_write");
    sc_trace(mVcdFile, method1_Block_proc_U0_img0_cols_V_out_din, "method1_Block_proc_U0_img0_cols_V_out_din");
    sc_trace(mVcdFile, method1_Block_proc_U0_img0_cols_V_out_write, "method1_Block_proc_U0_img0_cols_V_out_write");
    sc_trace(mVcdFile, method1_Block_proc_U0_img4_rows_V_out_din, "method1_Block_proc_U0_img4_rows_V_out_din");
    sc_trace(mVcdFile, method1_Block_proc_U0_img4_rows_V_out_write, "method1_Block_proc_U0_img4_rows_V_out_write");
    sc_trace(mVcdFile, method1_Block_proc_U0_img4_cols_V_out_din, "method1_Block_proc_U0_img4_cols_V_out_din");
    sc_trace(mVcdFile, method1_Block_proc_U0_img4_cols_V_out_write, "method1_Block_proc_U0_img4_cols_V_out_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_start, "AXIvideo2Mat_U0_ap_start");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_done, "AXIvideo2Mat_U0_ap_done");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_continue, "AXIvideo2Mat_U0_ap_continue");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_idle, "AXIvideo2Mat_U0_ap_idle");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_ready, "AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_out, "AXIvideo2Mat_U0_start_out");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_write, "AXIvideo2Mat_U0_start_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_inputStream_TREADY, "AXIvideo2Mat_U0_inputStream_TREADY");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_rows_V_read, "AXIvideo2Mat_U0_img_rows_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_cols_V_read, "AXIvideo2Mat_U0_img_cols_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_0_V_din, "AXIvideo2Mat_U0_img_data_stream_0_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_0_V_write, "AXIvideo2Mat_U0_img_data_stream_0_V_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_1_V_din, "AXIvideo2Mat_U0_img_data_stream_1_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_1_V_write, "AXIvideo2Mat_U0_img_data_stream_1_V_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_2_V_din, "AXIvideo2Mat_U0_img_data_stream_2_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_2_V_write, "AXIvideo2Mat_U0_img_data_stream_2_V_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_rows_V_out_din, "AXIvideo2Mat_U0_img_rows_V_out_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_rows_V_out_write, "AXIvideo2Mat_U0_img_rows_V_out_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_cols_V_out_din, "AXIvideo2Mat_U0_img_cols_V_out_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_cols_V_out_write, "AXIvideo2Mat_U0_img_cols_V_out_write");
    sc_trace(mVcdFile, CvtColor_U0_ap_start, "CvtColor_U0_ap_start");
    sc_trace(mVcdFile, CvtColor_U0_ap_done, "CvtColor_U0_ap_done");
    sc_trace(mVcdFile, CvtColor_U0_ap_continue, "CvtColor_U0_ap_continue");
    sc_trace(mVcdFile, CvtColor_U0_ap_idle, "CvtColor_U0_ap_idle");
    sc_trace(mVcdFile, CvtColor_U0_ap_ready, "CvtColor_U0_ap_ready");
    sc_trace(mVcdFile, CvtColor_U0_start_out, "CvtColor_U0_start_out");
    sc_trace(mVcdFile, CvtColor_U0_start_write, "CvtColor_U0_start_write");
    sc_trace(mVcdFile, CvtColor_U0_p_src_rows_V_read, "CvtColor_U0_p_src_rows_V_read");
    sc_trace(mVcdFile, CvtColor_U0_p_src_cols_V_read, "CvtColor_U0_p_src_cols_V_read");
    sc_trace(mVcdFile, CvtColor_U0_p_src_data_stream_0_V_read, "CvtColor_U0_p_src_data_stream_0_V_read");
    sc_trace(mVcdFile, CvtColor_U0_p_src_data_stream_1_V_read, "CvtColor_U0_p_src_data_stream_1_V_read");
    sc_trace(mVcdFile, CvtColor_U0_p_src_data_stream_2_V_read, "CvtColor_U0_p_src_data_stream_2_V_read");
    sc_trace(mVcdFile, CvtColor_U0_p_dst_data_stream_V_din, "CvtColor_U0_p_dst_data_stream_V_din");
    sc_trace(mVcdFile, CvtColor_U0_p_dst_data_stream_V_write, "CvtColor_U0_p_dst_data_stream_V_write");
    sc_trace(mVcdFile, findPupil_U0_ap_start, "findPupil_U0_ap_start");
    sc_trace(mVcdFile, findPupil_U0_ap_done, "findPupil_U0_ap_done");
    sc_trace(mVcdFile, findPupil_U0_ap_continue, "findPupil_U0_ap_continue");
    sc_trace(mVcdFile, findPupil_U0_ap_idle, "findPupil_U0_ap_idle");
    sc_trace(mVcdFile, findPupil_U0_ap_ready, "findPupil_U0_ap_ready");
    sc_trace(mVcdFile, findPupil_U0_start_out, "findPupil_U0_start_out");
    sc_trace(mVcdFile, findPupil_U0_start_write, "findPupil_U0_start_write");
    sc_trace(mVcdFile, findPupil_U0_img_data_stream_V_read, "findPupil_U0_img_data_stream_V_read");
    sc_trace(mVcdFile, findPupil_U0_dst_img_data_stream_V_din, "findPupil_U0_dst_img_data_stream_V_din");
    sc_trace(mVcdFile, findPupil_U0_dst_img_data_stream_V_write, "findPupil_U0_dst_img_data_stream_V_write");
    sc_trace(mVcdFile, findPupil_U0_r_out_din, "findPupil_U0_r_out_din");
    sc_trace(mVcdFile, findPupil_U0_r_out_write, "findPupil_U0_r_out_write");
    sc_trace(mVcdFile, findPupil_U0_x_out_din, "findPupil_U0_x_out_din");
    sc_trace(mVcdFile, findPupil_U0_x_out_write, "findPupil_U0_x_out_write");
    sc_trace(mVcdFile, findPupil_U0_y_out_din, "findPupil_U0_y_out_din");
    sc_trace(mVcdFile, findPupil_U0_y_out_write, "findPupil_U0_y_out_write");
    sc_trace(mVcdFile, find_iris_high_accur_U0_ap_start, "find_iris_high_accur_U0_ap_start");
    sc_trace(mVcdFile, find_iris_high_accur_U0_ap_done, "find_iris_high_accur_U0_ap_done");
    sc_trace(mVcdFile, find_iris_high_accur_U0_ap_continue, "find_iris_high_accur_U0_ap_continue");
    sc_trace(mVcdFile, find_iris_high_accur_U0_ap_idle, "find_iris_high_accur_U0_ap_idle");
    sc_trace(mVcdFile, find_iris_high_accur_U0_ap_ready, "find_iris_high_accur_U0_ap_ready");
    sc_trace(mVcdFile, find_iris_high_accur_U0_start_out, "find_iris_high_accur_U0_start_out");
    sc_trace(mVcdFile, find_iris_high_accur_U0_start_write, "find_iris_high_accur_U0_start_write");
    sc_trace(mVcdFile, find_iris_high_accur_U0_img_data_stream_V_read, "find_iris_high_accur_U0_img_data_stream_V_read");
    sc_trace(mVcdFile, find_iris_high_accur_U0_x_read, "find_iris_high_accur_U0_x_read");
    sc_trace(mVcdFile, find_iris_high_accur_U0_y_read, "find_iris_high_accur_U0_y_read");
    sc_trace(mVcdFile, find_iris_high_accur_U0_dst_img_data_stream_V_din, "find_iris_high_accur_U0_dst_img_data_stream_V_din");
    sc_trace(mVcdFile, find_iris_high_accur_U0_dst_img_data_stream_V_write, "find_iris_high_accur_U0_dst_img_data_stream_V_write");
    sc_trace(mVcdFile, find_iris_high_accur_U0_x_out_din, "find_iris_high_accur_U0_x_out_din");
    sc_trace(mVcdFile, find_iris_high_accur_U0_x_out_write, "find_iris_high_accur_U0_x_out_write");
    sc_trace(mVcdFile, find_iris_high_accur_U0_y_out_din, "find_iris_high_accur_U0_y_out_din");
    sc_trace(mVcdFile, find_iris_high_accur_U0_y_out_write, "find_iris_high_accur_U0_y_out_write");
    sc_trace(mVcdFile, find_iris_high_accur_U0_ap_return, "find_iris_high_accur_U0_ap_return");
    sc_trace(mVcdFile, ap_channel_done_r2, "ap_channel_done_r2");
    sc_trace(mVcdFile, r2_full_n, "r2_full_n");
    sc_trace(mVcdFile, Mat2Array_U0_ap_start, "Mat2Array_U0_ap_start");
    sc_trace(mVcdFile, Mat2Array_U0_ap_done, "Mat2Array_U0_ap_done");
    sc_trace(mVcdFile, Mat2Array_U0_ap_continue, "Mat2Array_U0_ap_continue");
    sc_trace(mVcdFile, Mat2Array_U0_ap_idle, "Mat2Array_U0_ap_idle");
    sc_trace(mVcdFile, Mat2Array_U0_ap_ready, "Mat2Array_U0_ap_ready");
    sc_trace(mVcdFile, Mat2Array_U0_img_data_stream_V_read, "Mat2Array_U0_img_data_stream_V_read");
    sc_trace(mVcdFile, Mat2Array_U0_fb_address0, "Mat2Array_U0_fb_address0");
    sc_trace(mVcdFile, Mat2Array_U0_fb_ce0, "Mat2Array_U0_fb_ce0");
    sc_trace(mVcdFile, Mat2Array_U0_fb_we0, "Mat2Array_U0_fb_we0");
    sc_trace(mVcdFile, Mat2Array_U0_fb_d0, "Mat2Array_U0_fb_d0");
    sc_trace(mVcdFile, ap_channel_done_imageIn, "ap_channel_done_imageIn");
    sc_trace(mVcdFile, Mat2Array_U0_fb_full_n, "Mat2Array_U0_fb_full_n");
    sc_trace(mVcdFile, writeValues_U0_ap_start, "writeValues_U0_ap_start");
    sc_trace(mVcdFile, writeValues_U0_ap_done, "writeValues_U0_ap_done");
    sc_trace(mVcdFile, writeValues_U0_ap_continue, "writeValues_U0_ap_continue");
    sc_trace(mVcdFile, writeValues_U0_ap_idle, "writeValues_U0_ap_idle");
    sc_trace(mVcdFile, writeValues_U0_ap_ready, "writeValues_U0_ap_ready");
    sc_trace(mVcdFile, writeValues_U0_x_read, "writeValues_U0_x_read");
    sc_trace(mVcdFile, writeValues_U0_y_read, "writeValues_U0_y_read");
    sc_trace(mVcdFile, writeValues_U0_r1_read, "writeValues_U0_r1_read");
    sc_trace(mVcdFile, writeValues_U0_ap_return_0, "writeValues_U0_ap_return_0");
    sc_trace(mVcdFile, writeValues_U0_ap_return_1, "writeValues_U0_ap_return_1");
    sc_trace(mVcdFile, writeValues_U0_ap_return_2, "writeValues_U0_ap_return_2");
    sc_trace(mVcdFile, writeValues_U0_ap_return_3, "writeValues_U0_ap_return_3");
    sc_trace(mVcdFile, ap_channel_done_val_3_channel, "ap_channel_done_val_3_channel");
    sc_trace(mVcdFile, val_3_channel_full_n, "val_3_channel_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_val_3_channel, "ap_sync_reg_channel_write_val_3_channel");
    sc_trace(mVcdFile, ap_sync_channel_write_val_3_channel, "ap_sync_channel_write_val_3_channel");
    sc_trace(mVcdFile, ap_channel_done_val_2_channel, "ap_channel_done_val_2_channel");
    sc_trace(mVcdFile, val_2_channel_full_n, "val_2_channel_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_val_2_channel, "ap_sync_reg_channel_write_val_2_channel");
    sc_trace(mVcdFile, ap_sync_channel_write_val_2_channel, "ap_sync_channel_write_val_2_channel");
    sc_trace(mVcdFile, ap_channel_done_val_1_channel, "ap_channel_done_val_1_channel");
    sc_trace(mVcdFile, val_1_channel_full_n, "val_1_channel_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_val_1_channel, "ap_sync_reg_channel_write_val_1_channel");
    sc_trace(mVcdFile, ap_sync_channel_write_val_1_channel, "ap_sync_channel_write_val_1_channel");
    sc_trace(mVcdFile, ap_channel_done_val_0_channel, "ap_channel_done_val_0_channel");
    sc_trace(mVcdFile, val_0_channel_full_n, "val_0_channel_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_val_0_channel, "ap_sync_reg_channel_write_val_0_channel");
    sc_trace(mVcdFile, ap_sync_channel_write_val_0_channel, "ap_sync_channel_write_val_0_channel");
    sc_trace(mVcdFile, core_low_U0_ap_start, "core_low_U0_ap_start");
    sc_trace(mVcdFile, core_low_U0_ap_done, "core_low_U0_ap_done");
    sc_trace(mVcdFile, core_low_U0_ap_continue, "core_low_U0_ap_continue");
    sc_trace(mVcdFile, core_low_U0_ap_idle, "core_low_U0_ap_idle");
    sc_trace(mVcdFile, core_low_U0_ap_ready, "core_low_U0_ap_ready");
    sc_trace(mVcdFile, core_low_U0_image_in_address0, "core_low_U0_image_in_address0");
    sc_trace(mVcdFile, core_low_U0_image_in_ce0, "core_low_U0_image_in_ce0");
    sc_trace(mVcdFile, core_low_U0_image_out_address0, "core_low_U0_image_out_address0");
    sc_trace(mVcdFile, core_low_U0_image_out_ce0, "core_low_U0_image_out_ce0");
    sc_trace(mVcdFile, core_low_U0_image_out_we0, "core_low_U0_image_out_we0");
    sc_trace(mVcdFile, core_low_U0_image_out_d0, "core_low_U0_image_out_d0");
    sc_trace(mVcdFile, ap_channel_done_imageOut, "ap_channel_done_imageOut");
    sc_trace(mVcdFile, core_low_U0_image_out_full_n, "core_low_U0_image_out_full_n");
    sc_trace(mVcdFile, Array2Mat_U0_ap_start, "Array2Mat_U0_ap_start");
    sc_trace(mVcdFile, Array2Mat_U0_ap_done, "Array2Mat_U0_ap_done");
    sc_trace(mVcdFile, Array2Mat_U0_ap_continue, "Array2Mat_U0_ap_continue");
    sc_trace(mVcdFile, Array2Mat_U0_ap_idle, "Array2Mat_U0_ap_idle");
    sc_trace(mVcdFile, Array2Mat_U0_ap_ready, "Array2Mat_U0_ap_ready");
    sc_trace(mVcdFile, Array2Mat_U0_start_out, "Array2Mat_U0_start_out");
    sc_trace(mVcdFile, Array2Mat_U0_start_write, "Array2Mat_U0_start_write");
    sc_trace(mVcdFile, Array2Mat_U0_fb_address0, "Array2Mat_U0_fb_address0");
    sc_trace(mVcdFile, Array2Mat_U0_fb_ce0, "Array2Mat_U0_fb_ce0");
    sc_trace(mVcdFile, Array2Mat_U0_img_rows_V_read, "Array2Mat_U0_img_rows_V_read");
    sc_trace(mVcdFile, Array2Mat_U0_img_cols_V_read, "Array2Mat_U0_img_cols_V_read");
    sc_trace(mVcdFile, Array2Mat_U0_img_data_stream_V_din, "Array2Mat_U0_img_data_stream_V_din");
    sc_trace(mVcdFile, Array2Mat_U0_img_data_stream_V_write, "Array2Mat_U0_img_data_stream_V_write");
    sc_trace(mVcdFile, Array2Mat_U0_img_rows_V_out_din, "Array2Mat_U0_img_rows_V_out_din");
    sc_trace(mVcdFile, Array2Mat_U0_img_rows_V_out_write, "Array2Mat_U0_img_rows_V_out_write");
    sc_trace(mVcdFile, Array2Mat_U0_img_cols_V_out_din, "Array2Mat_U0_img_cols_V_out_din");
    sc_trace(mVcdFile, Array2Mat_U0_img_cols_V_out_write, "Array2Mat_U0_img_cols_V_out_write");
    sc_trace(mVcdFile, CvtColor_1_U0_ap_start, "CvtColor_1_U0_ap_start");
    sc_trace(mVcdFile, CvtColor_1_U0_ap_done, "CvtColor_1_U0_ap_done");
    sc_trace(mVcdFile, CvtColor_1_U0_ap_continue, "CvtColor_1_U0_ap_continue");
    sc_trace(mVcdFile, CvtColor_1_U0_ap_idle, "CvtColor_1_U0_ap_idle");
    sc_trace(mVcdFile, CvtColor_1_U0_ap_ready, "CvtColor_1_U0_ap_ready");
    sc_trace(mVcdFile, CvtColor_1_U0_start_out, "CvtColor_1_U0_start_out");
    sc_trace(mVcdFile, CvtColor_1_U0_start_write, "CvtColor_1_U0_start_write");
    sc_trace(mVcdFile, CvtColor_1_U0_p_src_rows_V_read, "CvtColor_1_U0_p_src_rows_V_read");
    sc_trace(mVcdFile, CvtColor_1_U0_p_src_cols_V_read, "CvtColor_1_U0_p_src_cols_V_read");
    sc_trace(mVcdFile, CvtColor_1_U0_p_src_data_stream_V_read, "CvtColor_1_U0_p_src_data_stream_V_read");
    sc_trace(mVcdFile, CvtColor_1_U0_p_dst_data_stream_0_V_din, "CvtColor_1_U0_p_dst_data_stream_0_V_din");
    sc_trace(mVcdFile, CvtColor_1_U0_p_dst_data_stream_0_V_write, "CvtColor_1_U0_p_dst_data_stream_0_V_write");
    sc_trace(mVcdFile, CvtColor_1_U0_p_dst_data_stream_1_V_din, "CvtColor_1_U0_p_dst_data_stream_1_V_din");
    sc_trace(mVcdFile, CvtColor_1_U0_p_dst_data_stream_1_V_write, "CvtColor_1_U0_p_dst_data_stream_1_V_write");
    sc_trace(mVcdFile, CvtColor_1_U0_p_dst_data_stream_2_V_din, "CvtColor_1_U0_p_dst_data_stream_2_V_din");
    sc_trace(mVcdFile, CvtColor_1_U0_p_dst_data_stream_2_V_write, "CvtColor_1_U0_p_dst_data_stream_2_V_write");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_start, "Mat2AXIvideo_U0_ap_start");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_done, "Mat2AXIvideo_U0_ap_done");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_continue, "Mat2AXIvideo_U0_ap_continue");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_idle, "Mat2AXIvideo_U0_ap_idle");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_ap_ready, "Mat2AXIvideo_U0_ap_ready");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_data_stream_0_V_read, "Mat2AXIvideo_U0_img_data_stream_0_V_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_data_stream_1_V_read, "Mat2AXIvideo_U0_img_data_stream_1_V_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_img_data_stream_2_V_read, "Mat2AXIvideo_U0_img_data_stream_2_V_read");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outputStream_TDATA, "Mat2AXIvideo_U0_outputStream_TDATA");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outputStream_TVALID, "Mat2AXIvideo_U0_outputStream_TVALID");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outputStream_TKEEP, "Mat2AXIvideo_U0_outputStream_TKEEP");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outputStream_TSTRB, "Mat2AXIvideo_U0_outputStream_TSTRB");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outputStream_TUSER, "Mat2AXIvideo_U0_outputStream_TUSER");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outputStream_TLAST, "Mat2AXIvideo_U0_outputStream_TLAST");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outputStream_TID, "Mat2AXIvideo_U0_outputStream_TID");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_outputStream_TDEST, "Mat2AXIvideo_U0_outputStream_TDEST");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, imageIn_i_full_n, "imageIn_i_full_n");
    sc_trace(mVcdFile, imageIn_t_empty_n, "imageIn_t_empty_n");
    sc_trace(mVcdFile, imageOut_i_full_n, "imageOut_i_full_n");
    sc_trace(mVcdFile, imageOut_t_empty_n, "imageOut_t_empty_n");
    sc_trace(mVcdFile, img0_rows_V_c_full_n, "img0_rows_V_c_full_n");
    sc_trace(mVcdFile, img0_rows_V_c_dout, "img0_rows_V_c_dout");
    sc_trace(mVcdFile, img0_rows_V_c_empty_n, "img0_rows_V_c_empty_n");
    sc_trace(mVcdFile, img0_cols_V_c_full_n, "img0_cols_V_c_full_n");
    sc_trace(mVcdFile, img0_cols_V_c_dout, "img0_cols_V_c_dout");
    sc_trace(mVcdFile, img0_cols_V_c_empty_n, "img0_cols_V_c_empty_n");
    sc_trace(mVcdFile, img4_rows_V_c_full_n, "img4_rows_V_c_full_n");
    sc_trace(mVcdFile, img4_rows_V_c_dout, "img4_rows_V_c_dout");
    sc_trace(mVcdFile, img4_rows_V_c_empty_n, "img4_rows_V_c_empty_n");
    sc_trace(mVcdFile, img4_cols_V_c_full_n, "img4_cols_V_c_full_n");
    sc_trace(mVcdFile, img4_cols_V_c_dout, "img4_cols_V_c_dout");
    sc_trace(mVcdFile, img4_cols_V_c_empty_n, "img4_cols_V_c_empty_n");
    sc_trace(mVcdFile, img0_data_stream_0_s_full_n, "img0_data_stream_0_s_full_n");
    sc_trace(mVcdFile, img0_data_stream_0_s_dout, "img0_data_stream_0_s_dout");
    sc_trace(mVcdFile, img0_data_stream_0_s_empty_n, "img0_data_stream_0_s_empty_n");
    sc_trace(mVcdFile, img0_data_stream_1_s_full_n, "img0_data_stream_1_s_full_n");
    sc_trace(mVcdFile, img0_data_stream_1_s_dout, "img0_data_stream_1_s_dout");
    sc_trace(mVcdFile, img0_data_stream_1_s_empty_n, "img0_data_stream_1_s_empty_n");
    sc_trace(mVcdFile, img0_data_stream_2_s_full_n, "img0_data_stream_2_s_full_n");
    sc_trace(mVcdFile, img0_data_stream_2_s_dout, "img0_data_stream_2_s_dout");
    sc_trace(mVcdFile, img0_data_stream_2_s_empty_n, "img0_data_stream_2_s_empty_n");
    sc_trace(mVcdFile, img0_rows_V_c16_full_n, "img0_rows_V_c16_full_n");
    sc_trace(mVcdFile, img0_rows_V_c16_dout, "img0_rows_V_c16_dout");
    sc_trace(mVcdFile, img0_rows_V_c16_empty_n, "img0_rows_V_c16_empty_n");
    sc_trace(mVcdFile, img0_cols_V_c17_full_n, "img0_cols_V_c17_full_n");
    sc_trace(mVcdFile, img0_cols_V_c17_dout, "img0_cols_V_c17_dout");
    sc_trace(mVcdFile, img0_cols_V_c17_empty_n, "img0_cols_V_c17_empty_n");
    sc_trace(mVcdFile, img1_data_stream_0_s_full_n, "img1_data_stream_0_s_full_n");
    sc_trace(mVcdFile, img1_data_stream_0_s_dout, "img1_data_stream_0_s_dout");
    sc_trace(mVcdFile, img1_data_stream_0_s_empty_n, "img1_data_stream_0_s_empty_n");
    sc_trace(mVcdFile, img2_data_stream_0_s_full_n, "img2_data_stream_0_s_full_n");
    sc_trace(mVcdFile, img2_data_stream_0_s_dout, "img2_data_stream_0_s_dout");
    sc_trace(mVcdFile, img2_data_stream_0_s_empty_n, "img2_data_stream_0_s_empty_n");
    sc_trace(mVcdFile, r1_c_full_n, "r1_c_full_n");
    sc_trace(mVcdFile, r1_c_dout, "r1_c_dout");
    sc_trace(mVcdFile, r1_c_empty_n, "r1_c_empty_n");
    sc_trace(mVcdFile, x_c_full_n, "x_c_full_n");
    sc_trace(mVcdFile, x_c_dout, "x_c_dout");
    sc_trace(mVcdFile, x_c_empty_n, "x_c_empty_n");
    sc_trace(mVcdFile, y_c_full_n, "y_c_full_n");
    sc_trace(mVcdFile, y_c_dout, "y_c_dout");
    sc_trace(mVcdFile, y_c_empty_n, "y_c_empty_n");
    sc_trace(mVcdFile, img3_data_stream_0_s_full_n, "img3_data_stream_0_s_full_n");
    sc_trace(mVcdFile, img3_data_stream_0_s_dout, "img3_data_stream_0_s_dout");
    sc_trace(mVcdFile, img3_data_stream_0_s_empty_n, "img3_data_stream_0_s_empty_n");
    sc_trace(mVcdFile, x_c18_full_n, "x_c18_full_n");
    sc_trace(mVcdFile, x_c18_dout, "x_c18_dout");
    sc_trace(mVcdFile, x_c18_empty_n, "x_c18_empty_n");
    sc_trace(mVcdFile, y_c19_full_n, "y_c19_full_n");
    sc_trace(mVcdFile, y_c19_dout, "y_c19_dout");
    sc_trace(mVcdFile, y_c19_empty_n, "y_c19_empty_n");
    sc_trace(mVcdFile, r2_dout, "r2_dout");
    sc_trace(mVcdFile, r2_empty_n, "r2_empty_n");
    sc_trace(mVcdFile, val_0_channel_dout, "val_0_channel_dout");
    sc_trace(mVcdFile, val_0_channel_empty_n, "val_0_channel_empty_n");
    sc_trace(mVcdFile, val_1_channel_dout, "val_1_channel_dout");
    sc_trace(mVcdFile, val_1_channel_empty_n, "val_1_channel_empty_n");
    sc_trace(mVcdFile, val_2_channel_dout, "val_2_channel_dout");
    sc_trace(mVcdFile, val_2_channel_empty_n, "val_2_channel_empty_n");
    sc_trace(mVcdFile, val_3_channel_dout, "val_3_channel_dout");
    sc_trace(mVcdFile, val_3_channel_empty_n, "val_3_channel_empty_n");
    sc_trace(mVcdFile, img4_data_stream_0_s_full_n, "img4_data_stream_0_s_full_n");
    sc_trace(mVcdFile, img4_data_stream_0_s_dout, "img4_data_stream_0_s_dout");
    sc_trace(mVcdFile, img4_data_stream_0_s_empty_n, "img4_data_stream_0_s_empty_n");
    sc_trace(mVcdFile, img4_rows_V_c20_full_n, "img4_rows_V_c20_full_n");
    sc_trace(mVcdFile, img4_rows_V_c20_dout, "img4_rows_V_c20_dout");
    sc_trace(mVcdFile, img4_rows_V_c20_empty_n, "img4_rows_V_c20_empty_n");
    sc_trace(mVcdFile, img4_cols_V_c21_full_n, "img4_cols_V_c21_full_n");
    sc_trace(mVcdFile, img4_cols_V_c21_dout, "img4_cols_V_c21_dout");
    sc_trace(mVcdFile, img4_cols_V_c21_empty_n, "img4_cols_V_c21_empty_n");
    sc_trace(mVcdFile, img5_data_stream_0_s_full_n, "img5_data_stream_0_s_full_n");
    sc_trace(mVcdFile, img5_data_stream_0_s_dout, "img5_data_stream_0_s_dout");
    sc_trace(mVcdFile, img5_data_stream_0_s_empty_n, "img5_data_stream_0_s_empty_n");
    sc_trace(mVcdFile, img5_data_stream_1_s_full_n, "img5_data_stream_1_s_full_n");
    sc_trace(mVcdFile, img5_data_stream_1_s_dout, "img5_data_stream_1_s_dout");
    sc_trace(mVcdFile, img5_data_stream_1_s_empty_n, "img5_data_stream_1_s_empty_n");
    sc_trace(mVcdFile, img5_data_stream_2_s_full_n, "img5_data_stream_2_s_full_n");
    sc_trace(mVcdFile, img5_data_stream_2_s_dout, "img5_data_stream_2_s_dout");
    sc_trace(mVcdFile, img5_data_stream_2_s_empty_n, "img5_data_stream_2_s_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, ap_sync_reg_method1_Block_proc_U0_ap_ready, "ap_sync_reg_method1_Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_method1_Block_proc_U0_ap_ready, "ap_sync_method1_Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, method1_Block_proc_U0_ap_ready_count, "method1_Block_proc_U0_ap_ready_count");
    sc_trace(mVcdFile, ap_sync_reg_AXIvideo2Mat_U0_ap_ready, "ap_sync_reg_AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, ap_sync_AXIvideo2Mat_U0_ap_ready, "ap_sync_AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_ready_count, "AXIvideo2Mat_U0_ap_ready_count");
    sc_trace(mVcdFile, method1_Block_proc_U0_start_full_n, "method1_Block_proc_U0_start_full_n");
    sc_trace(mVcdFile, method1_Block_proc_U0_start_write, "method1_Block_proc_U0_start_write");
    sc_trace(mVcdFile, start_for_CvtColor_U0_din, "start_for_CvtColor_U0_din");
    sc_trace(mVcdFile, start_for_CvtColor_U0_full_n, "start_for_CvtColor_U0_full_n");
    sc_trace(mVcdFile, start_for_CvtColor_U0_dout, "start_for_CvtColor_U0_dout");
    sc_trace(mVcdFile, start_for_CvtColor_U0_empty_n, "start_for_CvtColor_U0_empty_n");
    sc_trace(mVcdFile, start_for_findPupil_U0_din, "start_for_findPupil_U0_din");
    sc_trace(mVcdFile, start_for_findPupil_U0_full_n, "start_for_findPupil_U0_full_n");
    sc_trace(mVcdFile, start_for_findPupil_U0_dout, "start_for_findPupil_U0_dout");
    sc_trace(mVcdFile, start_for_findPupil_U0_empty_n, "start_for_findPupil_U0_empty_n");
    sc_trace(mVcdFile, start_for_find_iris_high_accur_U0_din, "start_for_find_iris_high_accur_U0_din");
    sc_trace(mVcdFile, start_for_find_iris_high_accur_U0_full_n, "start_for_find_iris_high_accur_U0_full_n");
    sc_trace(mVcdFile, start_for_find_iris_high_accur_U0_dout, "start_for_find_iris_high_accur_U0_dout");
    sc_trace(mVcdFile, start_for_find_iris_high_accur_U0_empty_n, "start_for_find_iris_high_accur_U0_empty_n");
    sc_trace(mVcdFile, start_for_Mat2Array_U0_din, "start_for_Mat2Array_U0_din");
    sc_trace(mVcdFile, start_for_Mat2Array_U0_full_n, "start_for_Mat2Array_U0_full_n");
    sc_trace(mVcdFile, start_for_Mat2Array_U0_dout, "start_for_Mat2Array_U0_dout");
    sc_trace(mVcdFile, start_for_Mat2Array_U0_empty_n, "start_for_Mat2Array_U0_empty_n");
    sc_trace(mVcdFile, Mat2Array_U0_start_full_n, "Mat2Array_U0_start_full_n");
    sc_trace(mVcdFile, Mat2Array_U0_start_write, "Mat2Array_U0_start_write");
    sc_trace(mVcdFile, writeValues_U0_start_full_n, "writeValues_U0_start_full_n");
    sc_trace(mVcdFile, writeValues_U0_start_write, "writeValues_U0_start_write");
    sc_trace(mVcdFile, core_low_U0_start_full_n, "core_low_U0_start_full_n");
    sc_trace(mVcdFile, core_low_U0_start_write, "core_low_U0_start_write");
    sc_trace(mVcdFile, start_for_CvtColor_1_U0_din, "start_for_CvtColor_1_U0_din");
    sc_trace(mVcdFile, start_for_CvtColor_1_U0_full_n, "start_for_CvtColor_1_U0_full_n");
    sc_trace(mVcdFile, start_for_CvtColor_1_U0_dout, "start_for_CvtColor_1_U0_dout");
    sc_trace(mVcdFile, start_for_CvtColor_1_U0_empty_n, "start_for_CvtColor_1_U0_empty_n");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_din, "start_for_Mat2AXIvideo_U0_din");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_full_n, "start_for_Mat2AXIvideo_U0_full_n");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_dout, "start_for_Mat2AXIvideo_U0_dout");
    sc_trace(mVcdFile, start_for_Mat2AXIvideo_U0_empty_n, "start_for_Mat2AXIvideo_U0_empty_n");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_full_n, "Mat2AXIvideo_U0_start_full_n");
    sc_trace(mVcdFile, Mat2AXIvideo_U0_start_write, "Mat2AXIvideo_U0_start_write");
#endif

    }
}

method1::~method1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete imageIn_U;
    delete imageOut_U;
    delete method1_Block_proc_U0;
    delete AXIvideo2Mat_U0;
    delete CvtColor_U0;
    delete findPupil_U0;
    delete find_iris_high_accur_U0;
    delete Mat2Array_U0;
    delete writeValues_U0;
    delete core_low_U0;
    delete Array2Mat_U0;
    delete CvtColor_1_U0;
    delete Mat2AXIvideo_U0;
    delete img0_rows_V_c_U;
    delete img0_cols_V_c_U;
    delete img4_rows_V_c_U;
    delete img4_cols_V_c_U;
    delete img0_data_stream_0_s_U;
    delete img0_data_stream_1_s_U;
    delete img0_data_stream_2_s_U;
    delete img0_rows_V_c16_U;
    delete img0_cols_V_c17_U;
    delete img1_data_stream_0_s_U;
    delete img2_data_stream_0_s_U;
    delete r1_c_U;
    delete x_c_U;
    delete y_c_U;
    delete img3_data_stream_0_s_U;
    delete x_c18_U;
    delete y_c19_U;
    delete r2_U;
    delete val_0_channel_U;
    delete val_1_channel_U;
    delete val_2_channel_U;
    delete val_3_channel_U;
    delete img4_data_stream_0_s_U;
    delete img4_rows_V_c20_U;
    delete img4_cols_V_c21_U;
    delete img5_data_stream_0_s_U;
    delete img5_data_stream_1_s_U;
    delete img5_data_stream_2_s_U;
    delete start_for_CvtColoudo_U;
    delete start_for_findPupvdy_U;
    delete start_for_find_irwdI_U;
    delete start_for_Mat2ArrxdS_U;
    delete start_for_CvtColoyd2_U;
    delete start_for_Mat2AXIzec_U;
}

void method1::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_logic_1;
}

void method1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_0;
}

void method1::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv8_0;
}

void method1::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()) && 
         esl_seteq<1,1,1>(AXIvideo2Mat_U0_ap_ready.read(), ap_const_logic_0))) {
        AXIvideo2Mat_U0_ap_ready_count = (!AXIvideo2Mat_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIvideo2Mat_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, AXIvideo2Mat_U0_ap_ready.read()))) {
        AXIvideo2Mat_U0_ap_ready_count = (!AXIvideo2Mat_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(AXIvideo2Mat_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_AXIvideo2Mat_U0_ap_ready = ap_sync_AXIvideo2Mat_U0_ap_ready.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_val_0_channel = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (writeValues_U0_ap_done.read() & 
             writeValues_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_val_0_channel = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_val_0_channel = ap_sync_channel_write_val_0_channel.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_val_1_channel = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (writeValues_U0_ap_done.read() & 
             writeValues_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_val_1_channel = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_val_1_channel = ap_sync_channel_write_val_1_channel.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_val_2_channel = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (writeValues_U0_ap_done.read() & 
             writeValues_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_val_2_channel = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_val_2_channel = ap_sync_channel_write_val_2_channel.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_val_3_channel = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (writeValues_U0_ap_done.read() & 
             writeValues_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_val_3_channel = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_val_3_channel = ap_sync_channel_write_val_3_channel.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_method1_Block_proc_U0_ap_ready = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (ap_start.read() & 
             ap_sync_ready.read()))) {
            ap_sync_reg_method1_Block_proc_U0_ap_ready = ap_const_logic_0;
        } else {
            ap_sync_reg_method1_Block_proc_U0_ap_ready = ap_sync_method1_Block_proc_U0_ap_ready.read();
        }
    }
    if ((esl_seteq<1,1,1>(method1_Block_proc_U0_ap_ready.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sync_ready.read()))) {
        method1_Block_proc_U0_ap_ready_count = (!method1_Block_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(method1_Block_proc_U0_ap_ready_count.read()) - sc_biguint<2>(ap_const_lv2_1));
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, method1_Block_proc_U0_ap_ready.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_ready.read()))) {
        method1_Block_proc_U0_ap_ready_count = (!method1_Block_proc_U0_ap_ready_count.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(method1_Block_proc_U0_ap_ready_count.read()) + sc_biguint<2>(ap_const_lv2_1));
    }
}

void method1::thread_AXIvideo2Mat_U0_ap_continue() {
    AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
}

void method1::thread_AXIvideo2Mat_U0_ap_start() {
    AXIvideo2Mat_U0_ap_start = (ap_start.read() & (ap_sync_reg_AXIvideo2Mat_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void method1::thread_Array2Mat_U0_ap_continue() {
    Array2Mat_U0_ap_continue = ap_const_logic_1;
}

void method1::thread_Array2Mat_U0_ap_start() {
    Array2Mat_U0_ap_start = imageOut_t_empty_n.read();
}

void method1::thread_CvtColor_1_U0_ap_continue() {
    CvtColor_1_U0_ap_continue = ap_const_logic_1;
}

void method1::thread_CvtColor_1_U0_ap_start() {
    CvtColor_1_U0_ap_start = start_for_CvtColor_1_U0_empty_n.read();
}

void method1::thread_CvtColor_U0_ap_continue() {
    CvtColor_U0_ap_continue = ap_const_logic_1;
}

void method1::thread_CvtColor_U0_ap_start() {
    CvtColor_U0_ap_start = start_for_CvtColor_U0_empty_n.read();
}

void method1::thread_Mat2AXIvideo_U0_ap_continue() {
    Mat2AXIvideo_U0_ap_continue = ap_continue.read();
}

void method1::thread_Mat2AXIvideo_U0_ap_start() {
    Mat2AXIvideo_U0_ap_start = start_for_Mat2AXIvideo_U0_empty_n.read();
}

void method1::thread_Mat2AXIvideo_U0_start_full_n() {
    Mat2AXIvideo_U0_start_full_n = ap_const_logic_1;
}

void method1::thread_Mat2AXIvideo_U0_start_write() {
    Mat2AXIvideo_U0_start_write = ap_const_logic_0;
}

void method1::thread_Mat2Array_U0_ap_continue() {
    Mat2Array_U0_ap_continue = imageIn_i_full_n.read();
}

void method1::thread_Mat2Array_U0_ap_start() {
    Mat2Array_U0_ap_start = start_for_Mat2Array_U0_empty_n.read();
}

void method1::thread_Mat2Array_U0_fb_full_n() {
    Mat2Array_U0_fb_full_n = imageIn_i_full_n.read();
}

void method1::thread_Mat2Array_U0_start_full_n() {
    Mat2Array_U0_start_full_n = ap_const_logic_1;
}

void method1::thread_Mat2Array_U0_start_write() {
    Mat2Array_U0_start_write = ap_const_logic_0;
}

void method1::thread_ap_channel_done_imageIn() {
    ap_channel_done_imageIn = Mat2Array_U0_ap_done.read();
}

void method1::thread_ap_channel_done_imageOut() {
    ap_channel_done_imageOut = core_low_U0_ap_done.read();
}

void method1::thread_ap_channel_done_r2() {
    ap_channel_done_r2 = find_iris_high_accur_U0_ap_done.read();
}

void method1::thread_ap_channel_done_val_0_channel() {
    ap_channel_done_val_0_channel = (writeValues_U0_ap_done.read() & (ap_sync_reg_channel_write_val_0_channel.read() ^ 
  ap_const_logic_1));
}

void method1::thread_ap_channel_done_val_1_channel() {
    ap_channel_done_val_1_channel = (writeValues_U0_ap_done.read() & (ap_sync_reg_channel_write_val_1_channel.read() ^ 
  ap_const_logic_1));
}

void method1::thread_ap_channel_done_val_2_channel() {
    ap_channel_done_val_2_channel = (writeValues_U0_ap_done.read() & (ap_sync_reg_channel_write_val_2_channel.read() ^ 
  ap_const_logic_1));
}

void method1::thread_ap_channel_done_val_3_channel() {
    ap_channel_done_val_3_channel = (writeValues_U0_ap_done.read() & (ap_sync_reg_channel_write_val_3_channel.read() ^ 
  ap_const_logic_1));
}

void method1::thread_ap_done() {
    ap_done = Mat2AXIvideo_U0_ap_done.read();
}

void method1::thread_ap_idle() {
    ap_idle = (method1_Block_proc_U0_ap_idle.read() & AXIvideo2Mat_U0_ap_idle.read() & CvtColor_U0_ap_idle.read() & findPupil_U0_ap_idle.read() & find_iris_high_accur_U0_ap_idle.read() & Mat2Array_U0_ap_idle.read() & writeValues_U0_ap_idle.read() & core_low_U0_ap_idle.read() & Array2Mat_U0_ap_idle.read() & CvtColor_1_U0_ap_idle.read() & Mat2AXIvideo_U0_ap_idle.read() & (r2_empty_n.read() ^ 
  ap_const_logic_1) & (imageIn_t_empty_n.read() ^ 
  ap_const_logic_1) & (val_0_channel_empty_n.read() ^ 
  ap_const_logic_1) & (val_1_channel_empty_n.read() ^ 
  ap_const_logic_1) & (val_2_channel_empty_n.read() ^ 
  ap_const_logic_1) & (val_3_channel_empty_n.read() ^ 
  ap_const_logic_1) & (imageOut_t_empty_n.read() ^ 
  ap_const_logic_1));
}

void method1::thread_ap_ready() {
    ap_ready = ap_sync_ready.read();
}

void method1::thread_ap_sync_AXIvideo2Mat_U0_ap_ready() {
    ap_sync_AXIvideo2Mat_U0_ap_ready = (AXIvideo2Mat_U0_ap_ready.read() | ap_sync_reg_AXIvideo2Mat_U0_ap_ready.read());
}

void method1::thread_ap_sync_channel_write_val_0_channel() {
    ap_sync_channel_write_val_0_channel = ((ap_channel_done_val_0_channel.read() & 
  val_0_channel_full_n.read()) | ap_sync_reg_channel_write_val_0_channel.read());
}

void method1::thread_ap_sync_channel_write_val_1_channel() {
    ap_sync_channel_write_val_1_channel = ((ap_channel_done_val_1_channel.read() & 
  val_1_channel_full_n.read()) | ap_sync_reg_channel_write_val_1_channel.read());
}

void method1::thread_ap_sync_channel_write_val_2_channel() {
    ap_sync_channel_write_val_2_channel = ((ap_channel_done_val_2_channel.read() & 
  val_2_channel_full_n.read()) | ap_sync_reg_channel_write_val_2_channel.read());
}

void method1::thread_ap_sync_channel_write_val_3_channel() {
    ap_sync_channel_write_val_3_channel = ((ap_channel_done_val_3_channel.read() & 
  val_3_channel_full_n.read()) | ap_sync_reg_channel_write_val_3_channel.read());
}

void method1::thread_ap_sync_continue() {
    ap_sync_continue = ap_continue.read();
}

void method1::thread_ap_sync_done() {
    ap_sync_done = Mat2AXIvideo_U0_ap_done.read();
}

void method1::thread_ap_sync_method1_Block_proc_U0_ap_ready() {
    ap_sync_method1_Block_proc_U0_ap_ready = (method1_Block_proc_U0_ap_ready.read() | ap_sync_reg_method1_Block_proc_U0_ap_ready.read());
}

void method1::thread_ap_sync_ready() {
    ap_sync_ready = (ap_sync_method1_Block_proc_U0_ap_ready.read() & ap_sync_AXIvideo2Mat_U0_ap_ready.read());
}

void method1::thread_core_low_U0_ap_continue() {
    core_low_U0_ap_continue = imageOut_i_full_n.read();
}

void method1::thread_core_low_U0_ap_start() {
    core_low_U0_ap_start = (imageIn_t_empty_n.read() & val_0_channel_empty_n.read() & val_1_channel_empty_n.read() & val_2_channel_empty_n.read() & val_3_channel_empty_n.read());
}

void method1::thread_core_low_U0_image_out_full_n() {
    core_low_U0_image_out_full_n = imageOut_i_full_n.read();
}

void method1::thread_core_low_U0_start_full_n() {
    core_low_U0_start_full_n = ap_const_logic_1;
}

void method1::thread_core_low_U0_start_write() {
    core_low_U0_start_write = ap_const_logic_0;
}

void method1::thread_findPupil_U0_ap_continue() {
    findPupil_U0_ap_continue = ap_const_logic_1;
}

void method1::thread_findPupil_U0_ap_start() {
    findPupil_U0_ap_start = start_for_findPupil_U0_empty_n.read();
}

void method1::thread_find_iris_high_accur_U0_ap_continue() {
    find_iris_high_accur_U0_ap_continue = r2_full_n.read();
}

void method1::thread_find_iris_high_accur_U0_ap_start() {
    find_iris_high_accur_U0_ap_start = start_for_find_iris_high_accur_U0_empty_n.read();
}

void method1::thread_inputStream_TREADY() {
    inputStream_TREADY = AXIvideo2Mat_U0_inputStream_TREADY.read();
}

void method1::thread_method1_Block_proc_U0_ap_continue() {
    method1_Block_proc_U0_ap_continue = ap_const_logic_1;
}

void method1::thread_method1_Block_proc_U0_ap_start() {
    method1_Block_proc_U0_ap_start = (ap_start.read() & (ap_sync_reg_method1_Block_proc_U0_ap_ready.read() ^ 
  ap_const_logic_1));
}

void method1::thread_method1_Block_proc_U0_start_full_n() {
    method1_Block_proc_U0_start_full_n = ap_const_logic_1;
}

void method1::thread_method1_Block_proc_U0_start_write() {
    method1_Block_proc_U0_start_write = ap_const_logic_0;
}

void method1::thread_outputStream_TDATA() {
    outputStream_TDATA = Mat2AXIvideo_U0_outputStream_TDATA.read();
}

void method1::thread_outputStream_TDEST() {
    outputStream_TDEST = Mat2AXIvideo_U0_outputStream_TDEST.read();
}

void method1::thread_outputStream_TID() {
    outputStream_TID = Mat2AXIvideo_U0_outputStream_TID.read();
}

void method1::thread_outputStream_TKEEP() {
    outputStream_TKEEP = Mat2AXIvideo_U0_outputStream_TKEEP.read();
}

void method1::thread_outputStream_TLAST() {
    outputStream_TLAST = Mat2AXIvideo_U0_outputStream_TLAST.read();
}

void method1::thread_outputStream_TSTRB() {
    outputStream_TSTRB = Mat2AXIvideo_U0_outputStream_TSTRB.read();
}

void method1::thread_outputStream_TUSER() {
    outputStream_TUSER = Mat2AXIvideo_U0_outputStream_TUSER.read();
}

void method1::thread_outputStream_TVALID() {
    outputStream_TVALID = Mat2AXIvideo_U0_outputStream_TVALID.read();
}

void method1::thread_start_for_CvtColor_1_U0_din() {
    start_for_CvtColor_1_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void method1::thread_start_for_CvtColor_U0_din() {
    start_for_CvtColor_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void method1::thread_start_for_Mat2AXIvideo_U0_din() {
    start_for_Mat2AXIvideo_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void method1::thread_start_for_Mat2Array_U0_din() {
    start_for_Mat2Array_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void method1::thread_start_for_findPupil_U0_din() {
    start_for_findPupil_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void method1::thread_start_for_find_iris_high_accur_U0_din() {
    start_for_find_iris_high_accur_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void method1::thread_writeValues_U0_ap_continue() {
    writeValues_U0_ap_continue = (ap_sync_channel_write_val_3_channel.read() & ap_sync_channel_write_val_2_channel.read() & ap_sync_channel_write_val_1_channel.read() & ap_sync_channel_write_val_0_channel.read());
}

void method1::thread_writeValues_U0_ap_start() {
    writeValues_U0_ap_start = r2_empty_n.read();
}

void method1::thread_writeValues_U0_start_full_n() {
    writeValues_U0_start_full_n = ap_const_logic_1;
}

void method1::thread_writeValues_U0_start_write() {
    writeValues_U0_start_write = ap_const_logic_0;
}

}

