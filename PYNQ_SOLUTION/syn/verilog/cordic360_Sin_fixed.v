// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cordic360_Sin_fixed (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x,
        ap_return
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] x;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] ap_return;

(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [63:0] grp_fu_67_p2;
reg   [63:0] reg_99;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state36;
wire   [31:0] grp_fu_60_p1;
reg   [31:0] reg_104;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state38;
wire   [63:0] grp_fu_63_p1;
reg   [63:0] tmp_reg_162;
wire    ap_CS_fsm_state2;
wire   [0:0] or_ln148_fu_138_p2;
reg   [0:0] or_ln148_reg_170;
wire    ap_CS_fsm_state4;
wire   [0:0] grp_fu_87_p2;
reg   [0:0] and_ln148_reg_176;
reg   [0:0] and_ln151_reg_180;
wire    ap_CS_fsm_state5;
reg   [0:0] and_ln154_reg_184;
wire    ap_CS_fsm_state6;
wire   [0:0] and_ln157_1_fu_150_p2;
reg   [0:0] and_ln157_1_reg_188;
wire    ap_CS_fsm_state7;
wire   [7:0] grp_cordicSin_fix_fu_53_ap_return;
wire    ap_CS_fsm_state8;
wire    grp_cordicSin_fix_fu_53_ap_ready;
wire    grp_cordicSin_fix_fu_53_ap_done;
wire   [7:0] grp_fu_92_p2;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state40;
wire    grp_cordicSin_fix_fu_53_ap_start;
wire    grp_cordicSin_fix_fu_53_ap_idle;
reg   [31:0] grp_cordicSin_fix_fu_53_x;
reg   [7:0] ap_phi_mux_agg_result_0_phi_fu_41_p10;
reg   [7:0] agg_result_0_reg_38;
wire    ap_CS_fsm_state16;
reg    ap_predicate_op83_call_state16;
reg    ap_block_state16_on_subcall_done;
reg    grp_cordicSin_fix_fu_53_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state37;
reg   [63:0] grp_fu_67_p1;
reg   [63:0] grp_fu_74_p1;
wire    ap_CS_fsm_state3;
reg   [0:0] grp_fu_87_p0;
wire   [0:0] grp_fu_74_p2;
wire   [63:0] bitcast_ln148_fu_109_p1;
wire   [10:0] tmp_6_fu_112_p4;
wire   [51:0] trunc_ln148_fu_122_p1;
wire   [0:0] icmp_ln148_1_fu_132_p2;
wire   [0:0] icmp_ln148_fu_126_p2;
wire   [0:0] and_ln157_fu_145_p2;
wire   [0:0] grp_fu_82_p2;
reg   [4:0] grp_fu_74_opcode;
reg   [7:0] ap_return_preg;
reg   [39:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 grp_cordicSin_fix_fu_53_ap_start_reg = 1'b0;
#0 ap_return_preg = 8'd0;
end

cordicSin_fix grp_cordicSin_fix_fu_53(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_cordicSin_fix_fu_53_ap_start),
    .ap_done(grp_cordicSin_fix_fu_53_ap_done),
    .ap_idle(grp_cordicSin_fix_fu_53_ap_idle),
    .ap_ready(grp_cordicSin_fix_fu_53_ap_ready),
    .x(grp_cordicSin_fix_fu_53_x),
    .ap_return(grp_cordicSin_fix_fu_53_ap_return)
);

top_level2_fptrunncg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
top_level2_fptrunncg_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_99),
    .ce(1'b1),
    .dout(grp_fu_60_p1)
);

top_level2_fpext_lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
top_level2_fpext_lbW_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(x),
    .ce(1'b1),
    .dout(grp_fu_63_p1)
);

top_level2_dadd_6ocq #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
top_level2_dadd_6ocq_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_162),
    .din1(grp_fu_67_p1),
    .ce(1'b1),
    .dout(grp_fu_67_p2)
);

top_level2_dcmp_6pcA #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
top_level2_dcmp_6pcA_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_162),
    .din1(grp_fu_74_p1),
    .ce(1'b1),
    .opcode(grp_fu_74_opcode),
    .dout(grp_fu_74_p2)
);

top_level2_dcmp_6pcA #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
top_level2_dcmp_6pcA_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_162),
    .din1(64'd13833125093780374864),
    .ce(1'b1),
    .opcode(5'd5),
    .dout(grp_fu_82_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 8'd0;
    end else begin
        if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
            ap_return_preg <= ap_phi_mux_agg_result_0_phi_fu_41_p10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_cordicSin_fix_fu_53_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state7) & (1'd0 == and_ln157_1_fu_150_p2)))) begin
            grp_cordicSin_fix_fu_53_ap_start_reg <= 1'b1;
        end else if ((grp_cordicSin_fix_fu_53_ap_ready == 1'b1)) begin
            grp_cordicSin_fix_fu_53_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state40) & (grp_cordicSin_fix_fu_53_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state8) & (grp_cordicSin_fix_fu_53_ap_done == 1'b1)))) begin
        agg_result_0_reg_38 <= grp_cordicSin_fix_fu_53_ap_return;
    end else if ((((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16) & (1'd1 == and_ln157_1_reg_188) & (1'd0 == and_ln154_reg_184) & (1'd0 == and_ln151_reg_180) & (1'd0 == and_ln148_reg_176)) | ((1'b1 == ap_CS_fsm_state32) & (grp_cordicSin_fix_fu_53_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state24) & (grp_cordicSin_fix_fu_53_ap_done == 1'b1)))) begin
        agg_result_0_reg_38 <= grp_fu_92_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        and_ln148_reg_176 <= grp_fu_87_p2;
        or_ln148_reg_170 <= or_ln148_fu_138_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        and_ln151_reg_180 <= grp_fu_87_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        and_ln154_reg_184 <= grp_fu_87_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        and_ln157_1_reg_188 <= and_ln157_1_fu_150_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state30))) begin
        reg_104 <= grp_fu_60_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_99 <= grp_fu_67_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_reg_162 <= grp_fu_63_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (1'd1 == and_ln157_1_reg_188) & (1'd0 == and_ln154_reg_184) & (1'd0 == and_ln151_reg_180) & (1'd0 == and_ln148_reg_176))) begin
        ap_phi_mux_agg_result_0_phi_fu_41_p10 = grp_fu_92_p2;
    end else begin
        ap_phi_mux_agg_result_0_phi_fu_41_p10 = agg_result_0_reg_38;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
        ap_return = ap_phi_mux_agg_result_0_phi_fu_41_p10;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state24) | ((ap_predicate_op83_call_state16 == 1'b1) & (1'b1 == ap_CS_fsm_state16)))) begin
        grp_cordicSin_fix_fu_53_x = reg_104;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_cordicSin_fix_fu_53_x = x;
    end else begin
        grp_cordicSin_fix_fu_53_x = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_67_p1 = 64'd4614256656552045841;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_67_p1 = 64'd13837628693406821649;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_67_p1 = 64'd13842132293034192152;
    end else begin
        grp_fu_67_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state6) & (grp_fu_87_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state5) & (grp_fu_87_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state4) & (grp_fu_87_p2 == 1'd0)))) begin
        grp_fu_74_opcode = 5'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_74_opcode = 5'd3;
    end else begin
        grp_fu_74_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_74_p1 = 64'd13837628693406821649;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_74_p1 = 64'd4609753056925599056;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_74_p1 = 64'd4614256656552045841;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_74_p1 = 64'd4616991696741409234;
    end else begin
        grp_fu_74_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_87_p0 = or_ln148_reg_170;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_87_p0 = or_ln148_fu_138_p2;
    end else begin
        grp_fu_87_p0 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_fu_87_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_fu_87_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_fu_87_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == and_ln157_1_fu_150_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_cordicSin_fix_fu_53_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (grp_cordicSin_fix_fu_53_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if (((1'b1 == ap_CS_fsm_state32) & (grp_cordicSin_fix_fu_53_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (grp_cordicSin_fix_fu_53_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln157_1_fu_150_p2 = (grp_fu_82_p2 & and_ln157_fu_145_p2);

assign and_ln157_fu_145_p2 = (or_ln148_reg_170 & grp_fu_74_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state16_on_subcall_done = ((ap_predicate_op83_call_state16 == 1'b1) & (grp_cordicSin_fix_fu_53_ap_done == 1'b0));
end

always @ (*) begin
    ap_predicate_op83_call_state16 = ((1'd1 == and_ln157_1_reg_188) & (1'd0 == and_ln154_reg_184) & (1'd0 == and_ln151_reg_180) & (1'd0 == and_ln148_reg_176));
end

assign bitcast_ln148_fu_109_p1 = tmp_reg_162;

assign grp_cordicSin_fix_fu_53_ap_start = grp_cordicSin_fix_fu_53_ap_start_reg;

assign grp_fu_87_p2 = (grp_fu_87_p0 & grp_fu_74_p2);

assign grp_fu_92_p2 = (8'd0 - grp_cordicSin_fix_fu_53_ap_return);

assign icmp_ln148_1_fu_132_p2 = ((trunc_ln148_fu_122_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln148_fu_126_p2 = ((tmp_6_fu_112_p4 != 11'd2047) ? 1'b1 : 1'b0);

assign or_ln148_fu_138_p2 = (icmp_ln148_fu_126_p2 | icmp_ln148_1_fu_132_p2);

assign tmp_6_fu_112_p4 = {{bitcast_ln148_fu_109_p1[62:52]}};

assign trunc_ln148_fu_122_p1 = bitcast_ln148_fu_109_p1[51:0];

endmodule //cordic360_Sin_fixed
